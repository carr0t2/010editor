//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: DICOM.bt
//   Authors: Andrew Brooks
//   Version: 0.03
//   Purpose: DICOM medical imaging format.
//  Category: Medical
// File Mask: *
//  ID Bytes: [+128] 44 49 43 4D //DICM
//   History: 
//   0.03  2021-01-05 AB: Additional VRs. Parse inside SQ.
//   0.02  2020-12-21 AB: Initial version.
//------------------------------------------------

// References:
//   https://www.dicomlibrary.com/dicom/dicom-tags/
//   http://dicom.nema.org/medical/Dicom/2017c/output/chtml/part05/sect_7.5.2.html
//   http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_7.html - binary format
//   http://dicom.nema.org/medical/dicom/current/output/chtml/part05/sect_6.2.html - VRs
//   http://dicom.nema.org/medical/dicom/current/output/html/part05.html#sect_7.1.2 - binary format

LittleEndian();

// --------------------------------------------------------------------
// A specific GROUP,ELEMENT tag identifies the end of a SQ (sequence)
// Return true if this tag is a delimiter.
int delimiter(int grp, int ele)
{
    if (grp == 0xFFFE && ele == 0xE000) return(1); //	Item
    if (grp == 0xFFFE && ele == 0xE00D) return(1); //	Item Delim
    if (grp == 0xFFFE && ele == 0xE0DD) return(1); //	Sequence Delim
    return 0;
}

// --------------------------------------------------------------------
// Define a tag number

typedef struct
{
    if (FEof()) return -1;
    uint16 group <format=hex>;
    uint16 element <format=hex>;
} tag_s <read=read_tag>;

string read_tag(tag_s &tag)
{
    return tagname(tag.group, tag.element);
}

// --------------------------------------------------------------------
// Define the header

typedef struct
{
    char header[128];
    char magic[4]; // DICM
} dicom_header_s <read=read_header>;

string read_header(dicom_header_s &hdr)
{
    return hdr.magic;
}

// --------------------------------------------------------------------
// Define the typed elements

typedef struct
{
    uint16 len <hidden=true>;
    char VAL[len];
} text_s <read=read_text>;

string read_text(text_s &txt)
{
    if (txt.len > 0)
        return txt.VAL;
    else
        return "<Empty>";
}

// --------------------------------------------------------------------
// The DICOM file starts with a header
//   NB the magic may not be present
dicom_header_s dicom_header;
if (dicom_header.magic != "DICM")
{
    Warning("Not a DICM file (not 'DICM' at offset 128)");
    return -1;
}

// --------------------------------------------------------------------

typedef struct
{
    tag_s tag;
    if (delimiter(tag.group, tag.element))
    {
        uint32 len <hidden=true>; // will be 4 bytes of zero
    }
    else
    {
        char VR[2] <hidden=true>; // Value Representation is data type

        // NB OB,OW,OF,SQ,UN all have a 32-bit len which may be "undefined" meaning the end uses a delimeter
        if (VR == "AE") { text_s t; } // application entity
        else if (VR == "AS") { text_s t; } // age string
        else if (VR == "AT") { text_s t; } // attribute tag
        else if (VR == "CS") { text_s t; } // code string
        else if (VR == "DA") { text_s t; } // date string, maybe decode as a date?
        else if (VR == "DS") { text_s t; } // decimal string
        else if (VR == "DT") { text_s t; } // date time
        else if (VR == "FL") { text_s t; } // floating point single
        else if (VR == "FD") { text_s t; } // floating point double
        else if (VR == "IS") { text_s t; } // integer string
        else if (VR == "LO") { text_s t <bgcolor=cGreen>; } // long string
        else if (VR == "LT") { text_s t <bgcolor=cGreen>; } // long text
        else if (VR == "OB") { uint16 junk <hidden=true>; uint32 len <hidden=true>; char BYTES[len]; } // other byte
        else if (VR == "OD") { text_s t; } // other double
        else if (VR == "OF") { uint16 junk <hidden=true>; uint32 len <hidden=true>; char BYTES[len]; } // other float
        else if (VR == "OW") { uint16 junk <hidden=true>; uint32 len <hidden=true>; char BYTES[len]; } // other word
        else if (VR == "PN") { text_s t <bgcolor=cLtRed>; } // person name
        else if (VR == "SH") { text_s t <bgcolor=cGreen>; } // short string
        else if (VR == "SL") { text_s t; } // signed long
        else if (VR == "SQ")
        {
            uint16 junk <hidden=true>;
            uint32 len <hidden=true>;
            if (len == 0xffffffff)
            {
            }
            else
            { 
                //char SEQUENCE[len]; // Not needed, simply continue parsing until a delimiter
            }
        } // sequence
        else if (VR == "SS") { text_s t; } // signed short
        else if (VR == "ST") { text_s t <bgcolor=cGreen>; } // short text
        else if (VR == "TM") { text_s t; } // time string, maybe decode as a time?
        else if (VR == "UI") { text_s t; } // UID
        else if (VR == "UL") { uint16 len <hidden=true>; uint32 VAL; }    // Unsigned Long
        else if (VR == "UN") { uint16 junk <hidden=true>; uint32 len <hidden=true>; char BYTES[len]; } // Unknown content type
        else if (VR == "US") { text_s t; } // unsigned short
        else if (VR == "UT") { uint16 junk <hidden=true>; uint32 len <hidden=true>; char UT[len] <bgcolor=cYellow>; } // "unlimited" text
        else
        {
            Warning("Unrecognised VR '%s' at 0x%x", VR, FTell());
            return -1;
        }
    }
} element_s <open=true, optimize=false>;

// The DICOM file is a sequence of elements:
// Not 256 specifically, just make array large enough to load a whole file
while (!FEof())
{
    element_s el;
}


// --------------------------------------------------------------------
// Convert GROUP,ELEMENT tag into a tag name string
// List taken from https://www.dicomlibrary.com/dicom/dicom-tags/

char[] tagname(uint16 grp, uint16 ele)
{
    if (grp==0x0002 && ele==0x0000) return "File Meta Information Group Length";
    if (grp==0x0002 && ele==0x0001) return "File Meta Information Version";
    if (grp==0x0002 && ele==0x0002) return "Media Storage SOP Class UID";
    if (grp==0x0002 && ele==0x0003) return "Media Storage SOP Instance UID";
    if (grp==0x0002 && ele==0x0010) return "Transfer Syntax UID";
    if (grp==0x0002 && ele==0x0012) return "Implementation Class UID";
    if (grp==0x0002 && ele==0x0013) return "Implementation Version Name";
    if (grp==0x0002 && ele==0x0016) return "Source Application Entity Title";
    if (grp==0x0002 && ele==0x0017) return "Sending Application Entity Title";
    if (grp==0x0002 && ele==0x0018) return "Receiving Application Entity Title";
    if (grp==0x0002 && ele==0x0100) return "Private Information Creator UID";
    if (grp==0x0002 && ele==0x0102) return "Private Information";
    if (grp==0x0004 && ele==0x1130) return "File-set ID";
    if (grp==0x0004 && ele==0x1141) return "File-set Descriptor File ID";
    if (grp==0x0004 && ele==0x1142) return "Specific Character Set of File-set Descriptor File";
    if (grp==0x0004 && ele==0x1200) return "Offset of the First Directory Record of the Root Directory Entity";
    if (grp==0x0004 && ele==0x1202) return "Offset of the Last Directory Record of the Root Directory Entity";
    if (grp==0x0004 && ele==0x1212) return "File-set Consistency Flag";
    if (grp==0x0004 && ele==0x1220) return "Directory Record Sequence";
    if (grp==0x0004 && ele==0x1400) return "Offset of the Next Directory Record";
    if (grp==0x0004 && ele==0x1410) return "Record In-use Flag";
    if (grp==0x0004 && ele==0x1420) return "Offset of Referenced Lower-Level Directory Entity";
    if (grp==0x0004 && ele==0x1430) return "Directory Record Type";
    if (grp==0x0004 && ele==0x1432) return "Private Record UID";
    if (grp==0x0004 && ele==0x1500) return "Referenced File ID";
    if (grp==0x0004 && ele==0x1504) return "MRDR Directory Record Offset	Retired";
    if (grp==0x0004 && ele==0x1510) return "Referenced SOP Class UID in File";
    if (grp==0x0004 && ele==0x1511) return "Referenced SOP Instance UID in File";
    if (grp==0x0004 && ele==0x1512) return "Referenced Transfer Syntax UID in File";
    if (grp==0x0004 && ele==0x151A) return "Referenced Related General SOP Class UID in File";
    if (grp==0x0004 && ele==0x1600) return "Number of References	Retired";
    if (grp==0x0008 && ele==0x0001) return "Length to End	Retired";
    if (grp==0x0008 && ele==0x0005) return "Specific Character Set";
    if (grp==0x0008 && ele==0x0006) return "Language Code Sequence";
    if (grp==0x0008 && ele==0x0008) return "Image Type";
    if (grp==0x0008 && ele==0x0010) return "Recognition Code	Retired";
    if (grp==0x0008 && ele==0x0012) return "Instance Creation Date";
    if (grp==0x0008 && ele==0x0013) return "Instance Creation Time";
    if (grp==0x0008 && ele==0x0014) return "Instance Creator UID";
    if (grp==0x0008 && ele==0x0015) return "Instance Coercion DateTime";
    if (grp==0x0008 && ele==0x0016) return "SOP Class UID";
    if (grp==0x0008 && ele==0x0018) return "SOP Instance UID";
    if (grp==0x0008 && ele==0x001A) return "Related General SOP Class UID";
    if (grp==0x0008 && ele==0x001B) return "Original Specialized SOP Class UID";
    if (grp==0x0008 && ele==0x0020) return "Study Date";
    if (grp==0x0008 && ele==0x0021) return "Series Date";
    if (grp==0x0008 && ele==0x0022) return "Acquisition Date";
    if (grp==0x0008 && ele==0x0023) return "Content Date";
    if (grp==0x0008 && ele==0x0024) return "Overlay Date	Retired";
    if (grp==0x0008 && ele==0x0025) return "Curve Date	Retired";
    if (grp==0x0008 && ele==0x002A) return "Acquisition DateTime";
    if (grp==0x0008 && ele==0x0030) return "Study Time";
    if (grp==0x0008 && ele==0x0031) return "Series Time";
    if (grp==0x0008 && ele==0x0032) return "Acquisition Time";
    if (grp==0x0008 && ele==0x0033) return "Content Time";
    if (grp==0x0008 && ele==0x0034) return "Overlay Time	Retired";
    if (grp==0x0008 && ele==0x0035) return "Curve Time	Retired";
    if (grp==0x0008 && ele==0x0040) return "Data Set Type	Retired";
    if (grp==0x0008 && ele==0x0041) return "Data Set Subtype	Retired";
    if (grp==0x0008 && ele==0x0042) return "Nuclear Medicine Series Type	Retired";
    if (grp==0x0008 && ele==0x0050) return "Accession Number";
    if (grp==0x0008 && ele==0x0051) return "Issuer of Accession Number Sequence";
    if (grp==0x0008 && ele==0x0052) return "Query/Retrieve Level";
    if (grp==0x0008 && ele==0x0053) return "Query/Retrieve View";
    if (grp==0x0008 && ele==0x0054) return "Retrieve AE Title";
    if (grp==0x0008 && ele==0x0055) return "Station AE Title";
    if (grp==0x0008 && ele==0x0056) return "Instance Availability";
    if (grp==0x0008 && ele==0x0058) return "Failed SOP Instance UID List";
    if (grp==0x0008 && ele==0x0060) return "Modality";
    if (grp==0x0008 && ele==0x0061) return "Modalities in Study";
    if (grp==0x0008 && ele==0x0062) return "SOP Classes in Study";
    if (grp==0x0008 && ele==0x0064) return "Conversion Type";
    if (grp==0x0008 && ele==0x0068) return "Presentation Intent Type";
    if (grp==0x0008 && ele==0x0070) return "Manufacturer";
    if (grp==0x0008 && ele==0x0080) return "Institution Name";
    if (grp==0x0008 && ele==0x0081) return "Institution Address";
    if (grp==0x0008 && ele==0x0082) return "Institution Code Sequence";
    if (grp==0x0008 && ele==0x0090) return "Referring Physician's Name";
    if (grp==0x0008 && ele==0x0092) return "Referring Physician's Address";
    if (grp==0x0008 && ele==0x0094) return "Referring Physician's Telephone Numbers";
    if (grp==0x0008 && ele==0x0096) return "Referring Physician Identification Sequence";
    if (grp==0x0008 && ele==0x009C) return "Consulting Physician's Name";
    if (grp==0x0008 && ele==0x009D) return "Consulting Physician Identification Sequence";
    if (grp==0x0008 && ele==0x0100) return "Code Value";
    if (grp==0x0008 && ele==0x0101) return "Extended Code Value";
    if (grp==0x0008 && ele==0x0102) return "Coding Scheme Designator";
    if (grp==0x0008 && ele==0x0103) return "Coding Scheme Version";
    if (grp==0x0008 && ele==0x0104) return "Code Meaning";
    if (grp==0x0008 && ele==0x0105) return "Mapping Resource";
    if (grp==0x0008 && ele==0x0106) return "Context Group Version";
    if (grp==0x0008 && ele==0x0107) return "Context Group Local Version";
    if (grp==0x0008 && ele==0x0108) return "Extended Code Meaning";
    if (grp==0x0008 && ele==0x010B) return "Context Group Extension Flag";
    if (grp==0x0008 && ele==0x010C) return "Coding Scheme UID";
    if (grp==0x0008 && ele==0x010D) return "Context Group Extension Creator UID";
    if (grp==0x0008 && ele==0x010F) return "Context Identifier";
    if (grp==0x0008 && ele==0x0110) return "Coding Scheme Identification Sequence";
    if (grp==0x0008 && ele==0x0112) return "Coding Scheme Registry";
    if (grp==0x0008 && ele==0x0114) return "Coding Scheme External ID";
    if (grp==0x0008 && ele==0x0115) return "Coding Scheme Name";
    if (grp==0x0008 && ele==0x0116) return "Coding Scheme Responsible Organization";
    if (grp==0x0008 && ele==0x0117) return "Context UID";
    if (grp==0x0008 && ele==0x0118) return "Mapping Resource UID";
    if (grp==0x0008 && ele==0x0119) return "Long Code Value";
    if (grp==0x0008 && ele==0x0120) return "URN Code Value";
    if (grp==0x0008 && ele==0x0121) return "Equivalent Code Sequence";
    if (grp==0x0008 && ele==0x0122) return "Mapping Resource Name";
    if (grp==0x0008 && ele==0x0123) return "Context Group Identification Sequence";
    if (grp==0x0008 && ele==0x0124) return "Mapping Resource Identification Sequence";
    if (grp==0x0008 && ele==0x0201) return "Timezone Offset From UTC";
    if (grp==0x0008 && ele==0x0300) return "Private Data Element Characteristics Sequence";
    if (grp==0x0008 && ele==0x0301) return "Private Group Reference";
    if (grp==0x0008 && ele==0x0302) return "Private Creator Reference";
    if (grp==0x0008 && ele==0x0303) return "Block Identifying Information Status";
    if (grp==0x0008 && ele==0x0304) return "Nonidentifying Private Elements";
    if (grp==0x0008 && ele==0x0306) return "Identifying Private Elements";
    if (grp==0x0008 && ele==0x0305) return "Deidentification Action Sequence";
    if (grp==0x0008 && ele==0x0307) return "Deidentification Action";
    if (grp==0x0008 && ele==0x1000) return "Network ID	Retired";
    if (grp==0x0008 && ele==0x1010) return "Station Name";
    if (grp==0x0008 && ele==0x1030) return "Study Description";
    if (grp==0x0008 && ele==0x1032) return "Procedure Code Sequence";
    if (grp==0x0008 && ele==0x103E) return "Series Description";
    if (grp==0x0008 && ele==0x103F) return "Series Description Code Sequence";
    if (grp==0x0008 && ele==0x1040) return "Institutional Department Name";
    if (grp==0x0008 && ele==0x1048) return "Physician(s) of Record";
    if (grp==0x0008 && ele==0x1049) return "Physician(s) of Record Identification Sequence";
    if (grp==0x0008 && ele==0x1050) return "Performing Physician's Name";
    if (grp==0x0008 && ele==0x1052) return "Performing Physician Identification Sequence";
    if (grp==0x0008 && ele==0x1060) return "Name of Physician(s) Reading Study";
    if (grp==0x0008 && ele==0x1062) return "Physician(s) Reading Study Identification Sequence";
    if (grp==0x0008 && ele==0x1070) return "Operators' Name";
    if (grp==0x0008 && ele==0x1072) return "Operator Identification Sequence";
    if (grp==0x0008 && ele==0x1080) return "Admitting Diagnoses Description";
    if (grp==0x0008 && ele==0x1084) return "Admitting Diagnoses Code Sequence";
    if (grp==0x0008 && ele==0x1090) return "Manufacturer's Model Name";
    if (grp==0x0008 && ele==0x1100) return "Referenced Results Sequence	Retired";
    if (grp==0x0008 && ele==0x1110) return "Referenced Study Sequence";
    if (grp==0x0008 && ele==0x1111) return "Referenced Performed Procedure Step Sequence";
    if (grp==0x0008 && ele==0x1115) return "Referenced Series Sequence";
    if (grp==0x0008 && ele==0x1120) return "Referenced Patient Sequence";
    if (grp==0x0008 && ele==0x1125) return "Referenced Visit Sequence";
    if (grp==0x0008 && ele==0x1130) return "Referenced Overlay Sequence	Retired";
    if (grp==0x0008 && ele==0x1134) return "Referenced Stereometric Instance Sequence";
    if (grp==0x0008 && ele==0x113A) return "Referenced Waveform Sequence";
    if (grp==0x0008 && ele==0x1140) return "Referenced Image Sequence";
    if (grp==0x0008 && ele==0x1145) return "Referenced Curve Sequence	Retired";
    if (grp==0x0008 && ele==0x114A) return "Referenced Instance Sequence";
    if (grp==0x0008 && ele==0x114B) return "Referenced Real World Value Mapping Instance Sequence";
    if (grp==0x0008 && ele==0x1150) return "Referenced SOP Class UID";
    if (grp==0x0008 && ele==0x1155) return "Referenced SOP Instance UID";
    if (grp==0x0008 && ele==0x115A) return "SOP Classes Supported";
    if (grp==0x0008 && ele==0x1160) return "Referenced Frame Number";
    if (grp==0x0008 && ele==0x1161) return "Simple Frame List";
    if (grp==0x0008 && ele==0x1162) return "Calculated Frame List";
    if (grp==0x0008 && ele==0x1163) return "Time Range";
    if (grp==0x0008 && ele==0x1164) return "Frame Extraction Sequence";
    if (grp==0x0008 && ele==0x1167) return "Multi-frame Source SOP Instance UID";
    if (grp==0x0008 && ele==0x1190) return "Retrieve URL";
    if (grp==0x0008 && ele==0x1195) return "Transaction UID";
    if (grp==0x0008 && ele==0x1196) return "Warning Reason";
    if (grp==0x0008 && ele==0x1197) return "Failure Reason";
    if (grp==0x0008 && ele==0x1198) return "Failed SOP Sequence";
    if (grp==0x0008 && ele==0x1199) return "Referenced SOP Sequence";
    if (grp==0x0008 && ele==0x119A) return "Other Failures Sequence";
    if (grp==0x0008 && ele==0x1200) return "Studies Containing Other Referenced Instances Sequence";
    if (grp==0x0008 && ele==0x1250) return "Related Series Sequence";
    if (grp==0x0008 && ele==0x2110) return "Lossy Image Compression (Retired)	Retired";
    if (grp==0x0008 && ele==0x2111) return "Derivation Description";
    if (grp==0x0008 && ele==0x2112) return "Source Image Sequence";
    if (grp==0x0008 && ele==0x2120) return "Stage Name";
    if (grp==0x0008 && ele==0x2122) return "Stage Number";
    if (grp==0x0008 && ele==0x2124) return "Number of Stages";
    if (grp==0x0008 && ele==0x2127) return "View Name";
    if (grp==0x0008 && ele==0x2128) return "View Number";
    if (grp==0x0008 && ele==0x2129) return "Number of Event Timers";
    if (grp==0x0008 && ele==0x212A) return "Number of Views in Stage";
    if (grp==0x0008 && ele==0x2130) return "Event Elapsed Time(s)";
    if (grp==0x0008 && ele==0x2132) return "Event Timer Name(s)";
    if (grp==0x0008 && ele==0x2133) return "Event Timer Sequence";
    if (grp==0x0008 && ele==0x2134) return "Event Time Offset";
    if (grp==0x0008 && ele==0x2135) return "Event Code Sequence";
    if (grp==0x0008 && ele==0x2142) return "Start Trim";
    if (grp==0x0008 && ele==0x2143) return "Stop Trim";
    if (grp==0x0008 && ele==0x2144) return "Recommended Display Frame Rate";
    if (grp==0x0008 && ele==0x2200) return "Transducer Position	Retired";
    if (grp==0x0008 && ele==0x2204) return "Transducer Orientation	Retired";
    if (grp==0x0008 && ele==0x2208) return "Anatomic Structure	Retired";
    if (grp==0x0008 && ele==0x2218) return "Anatomic Region Sequence";
    if (grp==0x0008 && ele==0x2220) return "Anatomic Region Modifier Sequence";
    if (grp==0x0008 && ele==0x2228) return "Primary Anatomic Structure Sequence";
    if (grp==0x0008 && ele==0x2229) return "Anatomic Structure, Space or Region Sequence";
    if (grp==0x0008 && ele==0x2230) return "Primary Anatomic Structure Modifier Sequence";
    if (grp==0x0008 && ele==0x2240) return "Transducer Position Sequence	Retired";
    if (grp==0x0008 && ele==0x2242) return "Transducer Position Modifier Sequence	Retired";
    if (grp==0x0008 && ele==0x2244) return "Transducer Orientation Sequence	Retired";
    if (grp==0x0008 && ele==0x2246) return "Transducer Orientation Modifier Sequence	Retired";
    if (grp==0x0008 && ele==0x2251) return "Anatomic Structure Space Or Region Code Sequence (Trial)	Retired";
    if (grp==0x0008 && ele==0x2253) return "Anatomic Portal Of Entrance Code Sequence (Trial)	Retired";
    if (grp==0x0008 && ele==0x2255) return "Anatomic Approach Direction Code Sequence (Trial)	Retired";
    if (grp==0x0008 && ele==0x2256) return "Anatomic Perspective Description (Trial)	Retired";
    if (grp==0x0008 && ele==0x2257) return "Anatomic Perspective Code Sequence (Trial)	Retired";
    if (grp==0x0008 && ele==0x2258) return "Anatomic Location Of Examining Instrument Description (Trial)	Retired";
    if (grp==0x0008 && ele==0x2259) return "Anatomic Location Of Examining Instrument Code Sequence (Trial)	Retired";
    if (grp==0x0008 && ele==0x225A) return "Anatomic Structure Space Or Region Modifier Code Sequence (Trial)	Retired";
    if (grp==0x0008 && ele==0x225C) return "On Axis Background Anatomic Structure Code Sequence (Trial)	Retired";
    if (grp==0x0008 && ele==0x3001) return "Alternate Representation Sequence";
    if (grp==0x0008 && ele==0x3010) return "Irradiation Event UID";
    if (grp==0x0008 && ele==0x3011) return "Source Irradiation Event Sequence";
    if (grp==0x0008 && ele==0x3012) return "Radiopharmaceutical Administration Event UID";
    if (grp==0x0008 && ele==0x4000) return "Identifying Comments	Retired";
    if (grp==0x0008 && ele==0x9007) return "Frame Type";
    if (grp==0x0008 && ele==0x9092) return "Referenced Image Evidence Sequence";
    if (grp==0x0008 && ele==0x9121) return "Referenced Raw Data Sequence";
    if (grp==0x0008 && ele==0x9123) return "Creator-Version UID";
    if (grp==0x0008 && ele==0x9124) return "Derivation Image Sequence";
    if (grp==0x0008 && ele==0x9154) return "Source Image Evidence Sequence";
    if (grp==0x0008 && ele==0x9205) return "Pixel Presentation";
    if (grp==0x0008 && ele==0x9206) return "Volumetric Properties";
    if (grp==0x0008 && ele==0x9207) return "Volume Based Calculation Technique";
    if (grp==0x0008 && ele==0x9208) return "Complex Image Component";
    if (grp==0x0008 && ele==0x9209) return "Acquisition Contrast";
    if (grp==0x0008 && ele==0x9215) return "Derivation Code Sequence";
    if (grp==0x0008 && ele==0x9237) return "Referenced Presentation State Sequence";
    if (grp==0x0008 && ele==0x9410) return "Referenced Other Plane Sequence";
    if (grp==0x0008 && ele==0x9458) return "Frame Display Sequence";
    if (grp==0x0008 && ele==0x9459) return "Recommended Display Frame Rate in Float";
    if (grp==0x0008 && ele==0x9460) return "Skip Frame Range Flag";
    if (grp==0x0010 && ele==0x0010) return "Patient's Name";
    if (grp==0x0010 && ele==0x0020) return "Patient ID";
    if (grp==0x0010 && ele==0x0021) return "Issuer of Patient ID";
    if (grp==0x0010 && ele==0x0022) return "Type of Patient ID";
    if (grp==0x0010 && ele==0x0024) return "Issuer of Patient ID Qualifiers Sequence";
    if (grp==0x0010 && ele==0x0026) return "Source Patient Group Identification Sequence";
    if (grp==0x0010 && ele==0x0027) return "Group of Patients Identification Sequence";
    if (grp==0x0010 && ele==0x0028) return "Subject Relative Position in Image";
    if (grp==0x0010 && ele==0x0030) return "Patient's Birth Date";
    if (grp==0x0010 && ele==0x0032) return "Patient's Birth Time";
    if (grp==0x0010 && ele==0x0033) return "Patient's Birth Date in Alternative Calendar";
    if (grp==0x0010 && ele==0x0034) return "Patient's Death Date in Alternative Calendar";
    if (grp==0x0010 && ele==0x0035) return "Patient's Alternative Calendar";
    if (grp==0x0010 && ele==0x0040) return "Patient's Sex";
    if (grp==0x0010 && ele==0x0050) return "Patient's Insurance Plan Code Sequence";
    if (grp==0x0010 && ele==0x0101) return "Patient's Primary Language Code Sequence";
    if (grp==0x0010 && ele==0x0102) return "Patient's Primary Language Modifier Code Sequence";
    if (grp==0x0010 && ele==0x0200) return "Quality Control Subject";
    if (grp==0x0010 && ele==0x0201) return "Quality Control Subject Type Code Sequence";
    if (grp==0x0010 && ele==0x0212) return "Strain Description";
    if (grp==0x0010 && ele==0x0213) return "Strain Nomenclature";
    if (grp==0x0010 && ele==0x0214) return "Strain Stock Number";
    if (grp==0x0010 && ele==0x0215) return "Strain Source Registry Code Sequence";
    if (grp==0x0010 && ele==0x0216) return "Strain Stock Sequence";
    if (grp==0x0010 && ele==0x0217) return "Strain Source";
    if (grp==0x0010 && ele==0x0218) return "Strain Additional Information";
    if (grp==0x0010 && ele==0x0219) return "Strain Code Sequence";
    if (grp==0x0010 && ele==0x1000) return "Other Patient IDs";
    if (grp==0x0010 && ele==0x1001) return "Other Patient Names";
    if (grp==0x0010 && ele==0x1002) return "Other Patient IDs Sequence";
    if (grp==0x0010 && ele==0x1005) return "Patient's Birth Name";
    if (grp==0x0010 && ele==0x1010) return "Patient's Age";
    if (grp==0x0010 && ele==0x1020) return "Patient's Size";
    if (grp==0x0010 && ele==0x1021) return "Patient's Size Code Sequence";
    if (grp==0x0010 && ele==0x1030) return "Patient's Weight";
    if (grp==0x0010 && ele==0x1040) return "Patient's Address";
    if (grp==0x0010 && ele==0x1050) return "Insurance Plan Identification	Retired";
    if (grp==0x0010 && ele==0x1060) return "Patient's Mother's Birth Name";
    if (grp==0x0010 && ele==0x1080) return "Military Rank";
    if (grp==0x0010 && ele==0x1081) return "Branch of Service";
    if (grp==0x0010 && ele==0x1090) return "Medical Record Locator";
    if (grp==0x0010 && ele==0x1100) return "Referenced Patient Photo Sequence";
    if (grp==0x0010 && ele==0x2000) return "Medical Alerts";
    if (grp==0x0010 && ele==0x2110) return "Allergies";
    if (grp==0x0010 && ele==0x2150) return "Country of Residence";
    if (grp==0x0010 && ele==0x2152) return "Region of Residence";
    if (grp==0x0010 && ele==0x2154) return "Patient's Telephone Numbers";
    if (grp==0x0010 && ele==0x2155) return "Patient's Telecom Information";
    if (grp==0x0010 && ele==0x2160) return "Ethnic Group";
    if (grp==0x0010 && ele==0x2180) return "Occupation";
    if (grp==0x0010 && ele==0x21A0) return "Smoking Status";
    if (grp==0x0010 && ele==0x21B0) return "Additional Patient History";
    if (grp==0x0010 && ele==0x21C0) return "Pregnancy Status";
    if (grp==0x0010 && ele==0x21D0) return "Last Menstrual Date";
    if (grp==0x0010 && ele==0x21F0) return "Patient's Religious Preference";
    if (grp==0x0010 && ele==0x2201) return "Patient Species Description";
    if (grp==0x0010 && ele==0x2202) return "Patient Species Code Sequence";
    if (grp==0x0010 && ele==0x2203) return "Patient's Sex Neutered";
    if (grp==0x0010 && ele==0x2210) return "Anatomical Orientation Type";
    if (grp==0x0010 && ele==0x2292) return "Patient Breed Description";
    if (grp==0x0010 && ele==0x2293) return "Patient Breed Code Sequence";
    if (grp==0x0010 && ele==0x2294) return "Breed Registration Sequence";
    if (grp==0x0010 && ele==0x2295) return "Breed Registration Number";
    if (grp==0x0010 && ele==0x2296) return "Breed Registry Code Sequence";
    if (grp==0x0010 && ele==0x2297) return "Responsible Person";
    if (grp==0x0010 && ele==0x2298) return "Responsible Person Role";
    if (grp==0x0010 && ele==0x2299) return "Responsible Organization";
    if (grp==0x0010 && ele==0x4000) return "Patient Comments";
    if (grp==0x0010 && ele==0x9431) return "Examined Body Thickness";
    if (grp==0x0012 && ele==0x0010) return "Clinical Trial Sponsor Name";
    if (grp==0x0012 && ele==0x0020) return "Clinical Trial Protocol ID";
    if (grp==0x0012 && ele==0x0021) return "Clinical Trial Protocol Name";
    if (grp==0x0012 && ele==0x0030) return "Clinical Trial Site ID";
    if (grp==0x0012 && ele==0x0031) return "Clinical Trial Site Name";
    if (grp==0x0012 && ele==0x0040) return "Clinical Trial Subject ID";
    if (grp==0x0012 && ele==0x0042) return "Clinical Trial Subject Reading ID";
    if (grp==0x0012 && ele==0x0050) return "Clinical Trial Time Point ID";
    if (grp==0x0012 && ele==0x0051) return "Clinical Trial Time Point Description";
    if (grp==0x0012 && ele==0x0060) return "Clinical Trial Coordinating Center Name";
    if (grp==0x0012 && ele==0x0062) return "Patient Identity Removed";
    if (grp==0x0012 && ele==0x0063) return "De-identification Method";
    if (grp==0x0012 && ele==0x0064) return "De-identification Method Code Sequence";
    if (grp==0x0012 && ele==0x0071) return "Clinical Trial Series ID";
    if (grp==0x0012 && ele==0x0072) return "Clinical Trial Series Description";
    if (grp==0x0012 && ele==0x0081) return "Clinical Trial Protocol Ethics Committee Name";
    if (grp==0x0012 && ele==0x0082) return "Clinical Trial Protocol Ethics Committee Approval Number";
    if (grp==0x0012 && ele==0x0083) return "Consent for Clinical Trial Use Sequence";
    if (grp==0x0012 && ele==0x0084) return "Distribution Type";
    if (grp==0x0012 && ele==0x0085) return "Consent for Distribution Flag";
    if (grp==0x0014 && ele==0x0023) return "CAD File Format	Retired";
    if (grp==0x0014 && ele==0x0024) return "Component Reference System	Retired";
    if (grp==0x0014 && ele==0x0025) return "Component Manufacturing Procedure";
    if (grp==0x0014 && ele==0x0028) return "Component Manufacturer";
    if (grp==0x0014 && ele==0x0030) return "Material Thickness";
    if (grp==0x0014 && ele==0x0032) return "Material Pipe Diameter";
    if (grp==0x0014 && ele==0x0034) return "Material Isolation Diameter";
    if (grp==0x0014 && ele==0x0042) return "Material Grade";
    if (grp==0x0014 && ele==0x0044) return "Material Properties Description";
    if (grp==0x0014 && ele==0x0045) return "Material Properties File Format (Retired)	Retired";
    if (grp==0x0014 && ele==0x0046) return "Material Notes";
    if (grp==0x0014 && ele==0x0050) return "Component Shape";
    if (grp==0x0014 && ele==0x0052) return "Curvature Type";
    if (grp==0x0014 && ele==0x0054) return "Outer Diameter";
    if (grp==0x0014 && ele==0x0056) return "Inner Diameter";
    if (grp==0x0014 && ele==0x0100) return "Component Welder IDs";
    if (grp==0x0014 && ele==0x0101) return "Secondary Approval Status";
    if (grp==0x0014 && ele==0x0102) return "Secondary Review Date";
    if (grp==0x0014 && ele==0x0103) return "Secondary Review Time";
    if (grp==0x0014 && ele==0x0104) return "Secondary Reviewer Name";
    if (grp==0x0014 && ele==0x0105) return "Repair ID";
    if (grp==0x0014 && ele==0x0106) return "Multiple Component Approval Sequence";
    if (grp==0x0014 && ele==0x0107) return "Other Approval Status";
    if (grp==0x0014 && ele==0x0108) return "Other Secondary Approval Status";
    if (grp==0x0014 && ele==0x1010) return "Actual Environmental Conditions";
    if (grp==0x0014 && ele==0x1020) return "Expiry Date";
    if (grp==0x0014 && ele==0x1040) return "Environmental Conditions";
    if (grp==0x0014 && ele==0x2002) return "Evaluator Sequence";
    if (grp==0x0014 && ele==0x2004) return "Evaluator Number";
    if (grp==0x0014 && ele==0x2006) return "Evaluator Name";
    if (grp==0x0014 && ele==0x2008) return "Evaluation Attempt";
    if (grp==0x0014 && ele==0x2012) return "Indication Sequence";
    if (grp==0x0014 && ele==0x2014) return "Indication Number";
    if (grp==0x0014 && ele==0x2016) return "Indication Label";
    if (grp==0x0014 && ele==0x2018) return "Indication Description";
    if (grp==0x0014 && ele==0x201A) return "Indication Type";
    if (grp==0x0014 && ele==0x201C) return "Indication Disposition";
    if (grp==0x0014 && ele==0x201E) return "Indication ROI Sequence";
    if (grp==0x0014 && ele==0x2030) return "Indication Physical Property Sequence";
    if (grp==0x0014 && ele==0x2032) return "Property Label";
    if (grp==0x0014 && ele==0x2202) return "Coordinate System Number of Axes";
    if (grp==0x0014 && ele==0x2204) return "Coordinate System Axes Sequence";
    if (grp==0x0014 && ele==0x2206) return "Coordinate System Axis Description";
    if (grp==0x0014 && ele==0x2208) return "Coordinate System Data Set Mapping";
    if (grp==0x0014 && ele==0x220A) return "Coordinate System Axis Number";
    if (grp==0x0014 && ele==0x220C) return "Coordinate System Axis Type";
    if (grp==0x0014 && ele==0x220E) return "Coordinate System Axis Units";
    if (grp==0x0014 && ele==0x2210) return "Coordinate System Axis Values";
    if (grp==0x0014 && ele==0x2220) return "Coordinate System Transform Sequence";
    if (grp==0x0014 && ele==0x2222) return "Transform Description";
    if (grp==0x0014 && ele==0x2224) return "Transform Number of Axes";
    if (grp==0x0014 && ele==0x2226) return "Transform Order of Axes";
    if (grp==0x0014 && ele==0x2228) return "Transformed Axis Units";
    if (grp==0x0014 && ele==0x222A) return "Coordinate System Transform Rotation and Scale Matrix";
    if (grp==0x0014 && ele==0x222C) return "Coordinate System Transform Translation Matrix";
    if (grp==0x0014 && ele==0x3011) return "Internal Detector Frame Time";
    if (grp==0x0014 && ele==0x3012) return "Number of Frames Integrated";
    if (grp==0x0014 && ele==0x3020) return "Detector Temperature Sequence";
    if (grp==0x0014 && ele==0x3022) return "Sensor Name";
    if (grp==0x0014 && ele==0x3024) return "Horizontal Offset of Sensor";
    if (grp==0x0014 && ele==0x3026) return "Vertical Offset of Sensor";
    if (grp==0x0014 && ele==0x3028) return "Sensor Temperature";
    if (grp==0x0014 && ele==0x3040) return "Dark Current Sequence";
    if (grp==0x0014 && ele==0x3050) return "OB or OW	Dark Current Counts";
    if (grp==0x0014 && ele==0x3060) return "Gain Correction Reference Sequence";
    if (grp==0x0014 && ele==0x3070) return "OB or OW	Air Counts";
    if (grp==0x0014 && ele==0x3071) return "KV Used in Gain Calibration";
    if (grp==0x0014 && ele==0x3072) return "MA Used in Gain Calibration";
    if (grp==0x0014 && ele==0x3073) return "Number of Frames Used for Integration";
    if (grp==0x0014 && ele==0x3074) return "Filter Material Used in Gain Calibration";
    if (grp==0x0014 && ele==0x3075) return "Filter Thickness Used in Gain Calibration";
    if (grp==0x0014 && ele==0x3076) return "Date of Gain Calibration";
    if (grp==0x0014 && ele==0x3077) return "Time of Gain Calibration";
    if (grp==0x0014 && ele==0x3080) return "Bad Pixel Image";
    if (grp==0x0014 && ele==0x3099) return "Calibration Notes";
    if (grp==0x0014 && ele==0x4002) return "Pulser Equipment Sequence";
    if (grp==0x0014 && ele==0x4004) return "Pulser Type";
    if (grp==0x0014 && ele==0x4006) return "Pulser Notes";
    if (grp==0x0014 && ele==0x4008) return "Receiver Equipment Sequence";
    if (grp==0x0014 && ele==0x400A) return "Amplifier Type";
    if (grp==0x0014 && ele==0x400C) return "Receiver Notes";
    if (grp==0x0014 && ele==0x400E) return "Pre-Amplifier Equipment Sequence";
    if (grp==0x0014 && ele==0x400F) return "Pre-Amplifier Notes";
    if (grp==0x0014 && ele==0x4010) return "Transmit Transducer Sequence";
    if (grp==0x0014 && ele==0x4011) return "Receive Transducer Sequence";
    if (grp==0x0014 && ele==0x4012) return "Number of Elements";
    if (grp==0x0014 && ele==0x4013) return "Element Shape";
    if (grp==0x0014 && ele==0x4014) return "Element Dimension A";
    if (grp==0x0014 && ele==0x4015) return "Element Dimension B";
    if (grp==0x0014 && ele==0x4016) return "Element Pitch A";
    if (grp==0x0014 && ele==0x4017) return "Measured Beam Dimension A";
    if (grp==0x0014 && ele==0x4018) return "Measured Beam Dimension B";
    if (grp==0x0014 && ele==0x4019) return "Location of Measured Beam Diameter";
    if (grp==0x0014 && ele==0x401A) return "Nominal Frequency";
    if (grp==0x0014 && ele==0x401B) return "Measured Center Frequency";
    if (grp==0x0014 && ele==0x401C) return "Measured Bandwidth";
    if (grp==0x0014 && ele==0x401D) return "Element Pitch B";
    if (grp==0x0014 && ele==0x4020) return "Pulser Settings Sequence";
    if (grp==0x0014 && ele==0x4022) return "Pulse Width";
    if (grp==0x0014 && ele==0x4024) return "Excitation Frequency";
    if (grp==0x0014 && ele==0x4026) return "Modulation Type";
    if (grp==0x0014 && ele==0x4028) return "Damping";
    if (grp==0x0014 && ele==0x4030) return "Receiver Settings Sequence";
    if (grp==0x0014 && ele==0x4031) return "Acquired Soundpath Length";
    if (grp==0x0014 && ele==0x4032) return "Acquisition Compression Type";
    if (grp==0x0014 && ele==0x4033) return "Acquisition Sample Size";
    if (grp==0x0014 && ele==0x4034) return "Rectifier Smoothing";
    if (grp==0x0014 && ele==0x4035) return "DAC Sequence";
    if (grp==0x0014 && ele==0x4036) return "DAC Type";
    if (grp==0x0014 && ele==0x4038) return "DAC Gain Points";
    if (grp==0x0014 && ele==0x403A) return "DAC Time Points";
    if (grp==0x0014 && ele==0x403C) return "DAC Amplitude";
    if (grp==0x0014 && ele==0x4040) return "Pre-Amplifier Settings Sequence";
    if (grp==0x0014 && ele==0x4050) return "Transmit Transducer Settings Sequence";
    if (grp==0x0014 && ele==0x4051) return "Receive Transducer Settings Sequence";
    if (grp==0x0014 && ele==0x4052) return "Incident Angle";
    if (grp==0x0014 && ele==0x4054) return "Coupling Technique";
    if (grp==0x0014 && ele==0x4056) return "Coupling Medium";
    if (grp==0x0014 && ele==0x4057) return "Coupling Velocity";
    if (grp==0x0014 && ele==0x4058) return "Probe Center Location X";
    if (grp==0x0014 && ele==0x4059) return "Probe Center Location Z";
    if (grp==0x0014 && ele==0x405A) return "Sound Path Length";
    if (grp==0x0014 && ele==0x405C) return "Delay Law Identifier";
    if (grp==0x0014 && ele==0x4060) return "Gate Settings Sequence";
    if (grp==0x0014 && ele==0x4062) return "Gate Threshold";
    if (grp==0x0014 && ele==0x4064) return "Velocity of Sound";
    if (grp==0x0014 && ele==0x4070) return "Calibration Settings Sequence";
    if (grp==0x0014 && ele==0x4072) return "Calibration Procedure";
    if (grp==0x0014 && ele==0x4074) return "Procedure Version";
    if (grp==0x0014 && ele==0x4076) return "Procedure Creation Date";
    if (grp==0x0014 && ele==0x4078) return "Procedure Expiration Date";
    if (grp==0x0014 && ele==0x407A) return "Procedure Last Modified Date";
    if (grp==0x0014 && ele==0x407C) return "Calibration Time";
    if (grp==0x0014 && ele==0x407E) return "Calibration Date";
    if (grp==0x0014 && ele==0x4080) return "Probe Drive Equipment Sequence";
    if (grp==0x0014 && ele==0x4081) return "Drive Type";
    if (grp==0x0014 && ele==0x4082) return "Probe Drive Notes";
    if (grp==0x0014 && ele==0x4083) return "Drive Probe Sequence";
    if (grp==0x0014 && ele==0x4084) return "Probe Inductance";
    if (grp==0x0014 && ele==0x4085) return "Probe Resistance";
    if (grp==0x0014 && ele==0x4086) return "Receive Probe Sequence";
    if (grp==0x0014 && ele==0x4087) return "Probe Drive Settings Sequence";
    if (grp==0x0014 && ele==0x4088) return "Bridge Resistors";
    if (grp==0x0014 && ele==0x4089) return "Probe Orientation Angle";
    if (grp==0x0014 && ele==0x408B) return "User Selected Gain Y";
    if (grp==0x0014 && ele==0x408C) return "User Selected Phase";
    if (grp==0x0014 && ele==0x408D) return "User Selected Offset X";
    if (grp==0x0014 && ele==0x408E) return "User Selected Offset Y";
    if (grp==0x0014 && ele==0x4091) return "Channel Settings Sequence";
    if (grp==0x0014 && ele==0x4092) return "Channel Threshold";
    if (grp==0x0014 && ele==0x409A) return "Scanner Settings Sequence";
    if (grp==0x0014 && ele==0x409B) return "Scan Procedure";
    if (grp==0x0014 && ele==0x409C) return "Translation Rate X";
    if (grp==0x0014 && ele==0x409D) return "Translation Rate Y";
    if (grp==0x0014 && ele==0x409F) return "Channel Overlap";
    if (grp==0x0014 && ele==0x40A0) return "Image Quality Indicator Type";
    if (grp==0x0014 && ele==0x40A1) return "Image Quality Indicator Material";
    if (grp==0x0014 && ele==0x40A2) return "Image Quality Indicator Size";
    if (grp==0x0014 && ele==0x5002) return "LINAC Energy";
    if (grp==0x0014 && ele==0x5004) return "LINAC Output";
    if (grp==0x0014 && ele==0x5100) return "Active Aperture";
    if (grp==0x0014 && ele==0x5101) return "Total Aperture";
    if (grp==0x0014 && ele==0x5102) return "Aperture Elevation";
    if (grp==0x0014 && ele==0x5103) return "Main Lobe Angle";
    if (grp==0x0014 && ele==0x5104) return "Main Roof Angle";
    if (grp==0x0014 && ele==0x5105) return "Connector Type";
    if (grp==0x0014 && ele==0x5106) return "Wedge Model Number";
    if (grp==0x0014 && ele==0x5107) return "Wedge Angle Float";
    if (grp==0x0014 && ele==0x5108) return "Wedge Roof Angle";
    if (grp==0x0014 && ele==0x5109) return "Wedge Element 1 Position";
    if (grp==0x0014 && ele==0x510A) return "Wedge Material Velocity";
    if (grp==0x0014 && ele==0x510B) return "Wedge Material";
    if (grp==0x0014 && ele==0x510C) return "Wedge Offset Z";
    if (grp==0x0014 && ele==0x510D) return "Wedge Origin Offset X";
    if (grp==0x0014 && ele==0x510E) return "Wedge Time Delay";
    if (grp==0x0014 && ele==0x510F) return "Wedge Name";
    if (grp==0x0014 && ele==0x5110) return "Wedge Manufacturer Name";
    if (grp==0x0014 && ele==0x5111) return "Wedge Description";
    if (grp==0x0014 && ele==0x5112) return "Nominal Beam Angle";
    if (grp==0x0014 && ele==0x5113) return "Wedge Offset X";
    if (grp==0x0014 && ele==0x5114) return "Wedge Offset Y";
    if (grp==0x0014 && ele==0x5115) return "Wedge Total Length";
    if (grp==0x0014 && ele==0x5116) return "Wedge In Contact Length";
    if (grp==0x0014 && ele==0x5117) return "Wedge Front Gap";
    if (grp==0x0014 && ele==0x5118) return "Wedge Total Height";
    if (grp==0x0014 && ele==0x5119) return "Wedge Front Height";
    if (grp==0x0014 && ele==0x511A) return "Wedge Rear Height";
    if (grp==0x0014 && ele==0x511B) return "Wedge Total Width";
    if (grp==0x0014 && ele==0x511C) return "Wedge In Contact Width";
    if (grp==0x0014 && ele==0x511D) return "Wedge Chamfer Height";
    if (grp==0x0014 && ele==0x511E) return "Wedge Curve";
    if (grp==0x0014 && ele==0x511F) return "Radius Along the Wedge";
    if (grp==0x0018 && ele==0x0010) return "Contrast/Bolus Agent";
    if (grp==0x0018 && ele==0x0012) return "Contrast/Bolus Agent Sequence";
    if (grp==0x0018 && ele==0x0013) return "Contrast/Bolus T1 Relaxivity";
    if (grp==0x0018 && ele==0x0014) return "Contrast/Bolus Administration Route Sequence";
    if (grp==0x0018 && ele==0x0015) return "Body Part Examined";
    if (grp==0x0018 && ele==0x0020) return "Scanning Sequence";
    if (grp==0x0018 && ele==0x0021) return "Sequence Variant";
    if (grp==0x0018 && ele==0x0022) return "Scan Options";
    if (grp==0x0018 && ele==0x0023) return "MR Acquisition Type";
    if (grp==0x0018 && ele==0x0024) return "Sequence Name";
    if (grp==0x0018 && ele==0x0025) return "Angio Flag";
    if (grp==0x0018 && ele==0x0026) return "Intervention Drug Information Sequence";
    if (grp==0x0018 && ele==0x0027) return "Intervention Drug Stop Time";
    if (grp==0x0018 && ele==0x0028) return "Intervention Drug Dose";
    if (grp==0x0018 && ele==0x0029) return "Intervention Drug Code Sequence";
    if (grp==0x0018 && ele==0x002A) return "Additional Drug Sequence";
    if (grp==0x0018 && ele==0x0030) return "Radionuclide	Retired";
    if (grp==0x0018 && ele==0x0031) return "Radiopharmaceutical";
    if (grp==0x0018 && ele==0x0032) return "Energy Window Centerline	Retired";
    if (grp==0x0018 && ele==0x0033) return "Energy Window Total Width	Retired";
    if (grp==0x0018 && ele==0x0034) return "Intervention Drug Name";
    if (grp==0x0018 && ele==0x0035) return "Intervention Drug Start Time";
    if (grp==0x0018 && ele==0x0036) return "Intervention Sequence";
    if (grp==0x0018 && ele==0x0037) return "Therapy Type	Retired";
    if (grp==0x0018 && ele==0x0038) return "Intervention Status";
    if (grp==0x0018 && ele==0x0039) return "Therapy Description	Retired";
    if (grp==0x0018 && ele==0x003A) return "Intervention Description";
    if (grp==0x0018 && ele==0x0040) return "Cine Rate";
    if (grp==0x0018 && ele==0x0042) return "Initial Cine Run State";
    if (grp==0x0018 && ele==0x0050) return "Slice Thickness";
    if (grp==0x0018 && ele==0x0060) return "KVP";
    if (grp==0x0018 && ele==0x0061) return "	Retired";
    if (grp==0x0018 && ele==0x0070) return "Counts Accumulated";
    if (grp==0x0018 && ele==0x0071) return "Acquisition Termination Condition";
    if (grp==0x0018 && ele==0x0072) return "Effective Duration";
    if (grp==0x0018 && ele==0x0073) return "Acquisition Start Condition";
    if (grp==0x0018 && ele==0x0074) return "Acquisition Start Condition Data";
    if (grp==0x0018 && ele==0x0075) return "Acquisition Termination Condition Data";
    if (grp==0x0018 && ele==0x0080) return "Repetition Time";
    if (grp==0x0018 && ele==0x0081) return "Echo Time";
    if (grp==0x0018 && ele==0x0082) return "Inversion Time";
    if (grp==0x0018 && ele==0x0083) return "Number of Averages";
    if (grp==0x0018 && ele==0x0084) return "Imaging Frequency";
    if (grp==0x0018 && ele==0x0085) return "Imaged Nucleus";
    if (grp==0x0018 && ele==0x0086) return "Echo Number(s)";
    if (grp==0x0018 && ele==0x0087) return "Magnetic Field Strength";
    if (grp==0x0018 && ele==0x0088) return "Spacing Between Slices";
    if (grp==0x0018 && ele==0x0089) return "Number of Phase Encoding Steps";
    if (grp==0x0018 && ele==0x0090) return "Data Collection Diameter";
    if (grp==0x0018 && ele==0x0091) return "Echo Train Length";
    if (grp==0x0018 && ele==0x0093) return "Percent Sampling";
    if (grp==0x0018 && ele==0x0094) return "Percent Phase Field of View";
    if (grp==0x0018 && ele==0x0095) return "Pixel Bandwidth";
    if (grp==0x0018 && ele==0x1000) return "Device Serial Number";
    if (grp==0x0018 && ele==0x1002) return "Device UID";
    if (grp==0x0018 && ele==0x1003) return "Device ID";
    if (grp==0x0018 && ele==0x1004) return "Plate ID";
    if (grp==0x0018 && ele==0x1005) return "Generator ID";
    if (grp==0x0018 && ele==0x1006) return "Grid ID";
    if (grp==0x0018 && ele==0x1007) return "Cassette ID";
    if (grp==0x0018 && ele==0x1008) return "Gantry ID";
    if (grp==0x0018 && ele==0x1010) return "Secondary Capture Device ID";
    if (grp==0x0018 && ele==0x1011) return "Hardcopy Creation Device ID	Retired";
    if (grp==0x0018 && ele==0x1012) return "Date of Secondary Capture";
    if (grp==0x0018 && ele==0x1014) return "Time of Secondary Capture";
    if (grp==0x0018 && ele==0x1016) return "Secondary Capture Device Manufacturer";
    if (grp==0x0018 && ele==0x1017) return "Hardcopy Device Manufacturer	Retired";
    if (grp==0x0018 && ele==0x1018) return "Secondary Capture Device Manufacturer's Model Name";
    if (grp==0x0018 && ele==0x1019) return "Secondary Capture Device Software Versions";
    if (grp==0x0018 && ele==0x101A) return "Hardcopy Device Software Version	Retired";
    if (grp==0x0018 && ele==0x101B) return "Hardcopy Device Manufacturer's Model Name	Retired";
    if (grp==0x0018 && ele==0x1020) return "Software Version(s)";
    if (grp==0x0018 && ele==0x1022) return "Video Image Format Acquired";
    if (grp==0x0018 && ele==0x1023) return "Digital Image Format Acquired";
    if (grp==0x0018 && ele==0x1030) return "Protocol Name";
    if (grp==0x0018 && ele==0x1040) return "Contrast/Bolus Route";
    if (grp==0x0018 && ele==0x1041) return "Contrast/Bolus Volume";
    if (grp==0x0018 && ele==0x1042) return "Contrast/Bolus Start Time";
    if (grp==0x0018 && ele==0x1043) return "Contrast/Bolus Stop Time";
    if (grp==0x0018 && ele==0x1044) return "Contrast/Bolus Total Dose";
    if (grp==0x0018 && ele==0x1045) return "Syringe Counts";
    if (grp==0x0018 && ele==0x1046) return "Contrast Flow Rate";
    if (grp==0x0018 && ele==0x1047) return "Contrast Flow Duration";
    if (grp==0x0018 && ele==0x1048) return "Contrast/Bolus Ingredient";
    if (grp==0x0018 && ele==0x1049) return "Contrast/Bolus Ingredient Concentration";
    if (grp==0x0018 && ele==0x1050) return "Spatial Resolution";
    if (grp==0x0018 && ele==0x1060) return "Trigger Time";
    if (grp==0x0018 && ele==0x1061) return "Trigger Source or Type";
    if (grp==0x0018 && ele==0x1062) return "Nominal Interval";
    if (grp==0x0018 && ele==0x1063) return "Frame Time";
    if (grp==0x0018 && ele==0x1064) return "Cardiac Framing Type";
    if (grp==0x0018 && ele==0x1065) return "Frame Time Vector";
    if (grp==0x0018 && ele==0x1066) return "Frame Delay";
    if (grp==0x0018 && ele==0x1067) return "Image Trigger Delay";
    if (grp==0x0018 && ele==0x1068) return "Multiplex Group Time Offset";
    if (grp==0x0018 && ele==0x1069) return "Trigger Time Offset";
    if (grp==0x0018 && ele==0x106A) return "Synchronization Trigger";
    if (grp==0x0018 && ele==0x106C) return "Synchronization Channel";
    if (grp==0x0018 && ele==0x106E) return "Trigger Sample Position";
    if (grp==0x0018 && ele==0x1070) return "Radiopharmaceutical Route";
    if (grp==0x0018 && ele==0x1071) return "Radiopharmaceutical Volume";
    if (grp==0x0018 && ele==0x1072) return "Radiopharmaceutical Start Time";
    if (grp==0x0018 && ele==0x1073) return "Radiopharmaceutical Stop Time";
    if (grp==0x0018 && ele==0x1074) return "Radionuclide Total Dose";
    if (grp==0x0018 && ele==0x1075) return "Radionuclide Half Life";
    if (grp==0x0018 && ele==0x1076) return "Radionuclide Positron Fraction";
    if (grp==0x0018 && ele==0x1077) return "Radiopharmaceutical Specific Activity";
    if (grp==0x0018 && ele==0x1078) return "Radiopharmaceutical Start DateTime";
    if (grp==0x0018 && ele==0x1079) return "Radiopharmaceutical Stop DateTime";
    if (grp==0x0018 && ele==0x1080) return "Beat Rejection Flag";
    if (grp==0x0018 && ele==0x1081) return "Low R-R Value";
    if (grp==0x0018 && ele==0x1082) return "High R-R Value";
    if (grp==0x0018 && ele==0x1083) return "Intervals Acquired";
    if (grp==0x0018 && ele==0x1084) return "Intervals Rejected";
    if (grp==0x0018 && ele==0x1085) return "PVC Rejection";
    if (grp==0x0018 && ele==0x1086) return "Skip Beats";
    if (grp==0x0018 && ele==0x1088) return "Heart Rate";
    if (grp==0x0018 && ele==0x1090) return "Cardiac Number of Images";
    if (grp==0x0018 && ele==0x1094) return "Trigger Window";
    if (grp==0x0018 && ele==0x1100) return "Reconstruction Diameter";
    if (grp==0x0018 && ele==0x1110) return "Distance Source to Detector";
    if (grp==0x0018 && ele==0x1111) return "Distance Source to Patient";
    if (grp==0x0018 && ele==0x1114) return "Estimated Radiographic Magnification Factor";
    if (grp==0x0018 && ele==0x1120) return "Gantry/Detector Tilt";
    if (grp==0x0018 && ele==0x1121) return "Gantry/Detector Slew";
    if (grp==0x0018 && ele==0x1130) return "Table Height";
    if (grp==0x0018 && ele==0x1131) return "Table Traverse";
    if (grp==0x0018 && ele==0x1134) return "Table Motion";
    if (grp==0x0018 && ele==0x1135) return "Table Vertical Increment";
    if (grp==0x0018 && ele==0x1136) return "Table Lateral Increment";
    if (grp==0x0018 && ele==0x1137) return "Table Longitudinal Increment";
    if (grp==0x0018 && ele==0x1138) return "Table Angle";
    if (grp==0x0018 && ele==0x113A) return "Table Type";
    if (grp==0x0018 && ele==0x1140) return "Rotation Direction";
    if (grp==0x0018 && ele==0x1141) return "Angular Position	Retired";
    if (grp==0x0018 && ele==0x1142) return "Radial Position";
    if (grp==0x0018 && ele==0x1143) return "Scan Arc";
    if (grp==0x0018 && ele==0x1144) return "Angular Step";
    if (grp==0x0018 && ele==0x1145) return "Center of Rotation Offset";
    if (grp==0x0018 && ele==0x1146) return "Rotation Offset	Retired";
    if (grp==0x0018 && ele==0x1147) return "Field of View Shape";
    if (grp==0x0018 && ele==0x1149) return "Field of View Dimension(s)";
    if (grp==0x0018 && ele==0x1150) return "Exposure Time";
    if (grp==0x0018 && ele==0x1151) return "X-Ray Tube Current";
    if (grp==0x0018 && ele==0x1152) return "Exposure";
    if (grp==0x0018 && ele==0x1153) return "Exposure in µAs";
    if (grp==0x0018 && ele==0x1154) return "Average Pulse Width";
    if (grp==0x0018 && ele==0x1155) return "Radiation Setting";
    if (grp==0x0018 && ele==0x1156) return "Rectification Type";
    if (grp==0x0018 && ele==0x115A) return "Radiation Mode";
    if (grp==0x0018 && ele==0x115E) return "Image and Fluoroscopy Area Dose Product";
    if (grp==0x0018 && ele==0x1160) return "Filter Type";
    if (grp==0x0018 && ele==0x1161) return "Type of Filters";
    if (grp==0x0018 && ele==0x1162) return "Intensifier Size";
    if (grp==0x0018 && ele==0x1164) return "Imager Pixel Spacing";
    if (grp==0x0018 && ele==0x1166) return "Grid";
    if (grp==0x0018 && ele==0x1170) return "Generator Power";
    if (grp==0x0018 && ele==0x1180) return "Collimator/grid Name";
    if (grp==0x0018 && ele==0x1181) return "Collimator Type";
    if (grp==0x0018 && ele==0x1182) return "Focal Distance";
    if (grp==0x0018 && ele==0x1183) return "X Focus Center";
    if (grp==0x0018 && ele==0x1184) return "Y Focus Center";
    if (grp==0x0018 && ele==0x1190) return "Focal Spot(s)";
    if (grp==0x0018 && ele==0x1191) return "Anode Target Material";
    if (grp==0x0018 && ele==0x11A0) return "Body Part Thickness";
    if (grp==0x0018 && ele==0x11A2) return "Compression Force";
    if (grp==0x0018 && ele==0x11A4) return "Paddle Description";
    if (grp==0x0018 && ele==0x1200) return "Date of Last Calibration";
    if (grp==0x0018 && ele==0x1201) return "Time of Last Calibration";
    if (grp==0x0018 && ele==0x1202) return "DateTime of Last Calibration";
    if (grp==0x0018 && ele==0x1210) return "Convolution Kernel";
    if (grp==0x0018 && ele==0x1240) return "Upper/Lower Pixel Values	Retired";
    if (grp==0x0018 && ele==0x1242) return "Actual Frame Duration";
    if (grp==0x0018 && ele==0x1243) return "Count Rate";
    if (grp==0x0018 && ele==0x1244) return "Preferred Playback Sequencing";
    if (grp==0x0018 && ele==0x1250) return "Receive Coil Name";
    if (grp==0x0018 && ele==0x1251) return "Transmit Coil Name";
    if (grp==0x0018 && ele==0x1260) return "Plate Type";
    if (grp==0x0018 && ele==0x1261) return "Phosphor Type";
    if (grp==0x0018 && ele==0x1271) return "Water Equivalent Diameter";
    if (grp==0x0018 && ele==0x1272) return "Water Equivalent Diameter Calculation Method Code Sequence";
    if (grp==0x0018 && ele==0x1300) return "Scan Velocity";
    if (grp==0x0018 && ele==0x1301) return "Whole Body Technique";
    if (grp==0x0018 && ele==0x1302) return "Scan Length";
    if (grp==0x0018 && ele==0x1310) return "Acquisition Matrix";
    if (grp==0x0018 && ele==0x1312) return "In-plane Phase Encoding Direction";
    if (grp==0x0018 && ele==0x1314) return "Flip Angle";
    if (grp==0x0018 && ele==0x1315) return "Variable Flip Angle Flag";
    if (grp==0x0018 && ele==0x1316) return "SAR";
    if (grp==0x0018 && ele==0x1318) return "dB/dt";
    if (grp==0x0018 && ele==0x1320) return "B1rms";
    if (grp==0x0018 && ele==0x1400) return "Acquisition Device Processing Description";
    if (grp==0x0018 && ele==0x1401) return "Acquisition Device Processing Code";
    if (grp==0x0018 && ele==0x1402) return "Cassette Orientation";
    if (grp==0x0018 && ele==0x1403) return "Cassette Size";
    if (grp==0x0018 && ele==0x1404) return "Exposures on Plate";
    if (grp==0x0018 && ele==0x1405) return "Relative X-Ray Exposure";
    if (grp==0x0018 && ele==0x1411) return "Exposure Index";
    if (grp==0x0018 && ele==0x1412) return "Target Exposure Index";
    if (grp==0x0018 && ele==0x1413) return "Deviation Index";
    if (grp==0x0018 && ele==0x1450) return "Column Angulation";
    if (grp==0x0018 && ele==0x1460) return "Tomo Layer Height";
    if (grp==0x0018 && ele==0x1470) return "Tomo Angle";
    if (grp==0x0018 && ele==0x1480) return "Tomo Time";
    if (grp==0x0018 && ele==0x1490) return "Tomo Type";
    if (grp==0x0018 && ele==0x1491) return "Tomo Class";
    if (grp==0x0018 && ele==0x1495) return "Number of Tomosynthesis Source Images";
    if (grp==0x0018 && ele==0x1500) return "Positioner Motion";
    if (grp==0x0018 && ele==0x1508) return "Positioner Type";
    if (grp==0x0018 && ele==0x1510) return "Positioner Primary Angle";
    if (grp==0x0018 && ele==0x1511) return "Positioner Secondary Angle";
    if (grp==0x0018 && ele==0x1520) return "Positioner Primary Angle Increment";
    if (grp==0x0018 && ele==0x1521) return "Positioner Secondary Angle Increment";
    if (grp==0x0018 && ele==0x1530) return "Detector Primary Angle";
    if (grp==0x0018 && ele==0x1531) return "Detector Secondary Angle";
    if (grp==0x0018 && ele==0x1600) return "Shutter Shape";
    if (grp==0x0018 && ele==0x1602) return "Shutter Left Vertical Edge";
    if (grp==0x0018 && ele==0x1604) return "Shutter Right Vertical Edge";
    if (grp==0x0018 && ele==0x1606) return "Shutter Upper Horizontal Edge";
    if (grp==0x0018 && ele==0x1608) return "Shutter Lower Horizontal Edge";
    if (grp==0x0018 && ele==0x1610) return "Center of Circular Shutter";
    if (grp==0x0018 && ele==0x1612) return "Radius of Circular Shutter";
    if (grp==0x0018 && ele==0x1620) return "Vertices of the Polygonal Shutter";
    if (grp==0x0018 && ele==0x1622) return "Shutter Presentation Value";
    if (grp==0x0018 && ele==0x1623) return "Shutter Overlay Group";
    if (grp==0x0018 && ele==0x1624) return "Shutter Presentation Color CIELab Value";
    if (grp==0x0018 && ele==0x1700) return "Collimator Shape";
    if (grp==0x0018 && ele==0x1702) return "Collimator Left Vertical Edge";
    if (grp==0x0018 && ele==0x1704) return "Collimator Right Vertical Edge";
    if (grp==0x0018 && ele==0x1706) return "Collimator Upper Horizontal Edge";
    if (grp==0x0018 && ele==0x1708) return "Collimator Lower Horizontal Edge";
    if (grp==0x0018 && ele==0x1710) return "Center of Circular Collimator";
    if (grp==0x0018 && ele==0x1712) return "Radius of Circular Collimator";
    if (grp==0x0018 && ele==0x1720) return "Vertices of the Polygonal Collimator";
    if (grp==0x0018 && ele==0x1800) return "Acquisition Time Synchronized";
    if (grp==0x0018 && ele==0x1801) return "Time Source";
    if (grp==0x0018 && ele==0x1802) return "Time Distribution Protocol";
    if (grp==0x0018 && ele==0x1803) return "NTP Source Address";
    if (grp==0x0018 && ele==0x2001) return "Page Number Vector";
    if (grp==0x0018 && ele==0x2002) return "Frame Label Vector";
    if (grp==0x0018 && ele==0x2003) return "Frame Primary Angle Vector";
    if (grp==0x0018 && ele==0x2004) return "Frame Secondary Angle Vector";
    if (grp==0x0018 && ele==0x2005) return "Slice Location Vector";
    if (grp==0x0018 && ele==0x2006) return "Display Window Label Vector";
    if (grp==0x0018 && ele==0x2010) return "Nominal Scanned Pixel Spacing";
    if (grp==0x0018 && ele==0x2020) return "Digitizing Device Transport Direction";
    if (grp==0x0018 && ele==0x2030) return "Rotation of Scanned Film";
    if (grp==0x0018 && ele==0x2041) return "Biopsy Target Sequence";
    if (grp==0x0018 && ele==0x2042) return "Target UID";
    if (grp==0x0018 && ele==0x2043) return "Localizing Cursor Position";
    if (grp==0x0018 && ele==0x2044) return "Calculated Target Position";
    if (grp==0x0018 && ele==0x2045) return "Target Label";
    if (grp==0x0018 && ele==0x2046) return "Displayed Z Value";
    if (grp==0x0018 && ele==0x3100) return "IVUS Acquisition";
    if (grp==0x0018 && ele==0x3101) return "IVUS Pullback Rate";
    if (grp==0x0018 && ele==0x3102) return "IVUS Gated Rate";
    if (grp==0x0018 && ele==0x3103) return "IVUS Pullback Start Frame Number";
    if (grp==0x0018 && ele==0x3104) return "IVUS Pullback Stop Frame Number";
    if (grp==0x0018 && ele==0x3105) return "Lesion Number";
    if (grp==0x0018 && ele==0x4000) return "Acquisition Comments	Retired";
    if (grp==0x0018 && ele==0x5000) return "Output Power";
    if (grp==0x0018 && ele==0x5010) return "Transducer Data";
    if (grp==0x0018 && ele==0x5012) return "Focus Depth";
    if (grp==0x0018 && ele==0x5020) return "Processing Function";
    if (grp==0x0018 && ele==0x5021) return "Postprocessing Function	Retired";
    if (grp==0x0018 && ele==0x5022) return "Mechanical Index";
    if (grp==0x0018 && ele==0x5024) return "Bone Thermal Index";
    if (grp==0x0018 && ele==0x5026) return "Cranial Thermal Index";
    if (grp==0x0018 && ele==0x5027) return "Soft Tissue Thermal Index";
    if (grp==0x0018 && ele==0x5028) return "Soft Tissue-focus Thermal Index";
    if (grp==0x0018 && ele==0x5029) return "Soft Tissue-surface Thermal Index";
    if (grp==0x0018 && ele==0x5030) return "Dynamic Range	Retired";
    if (grp==0x0018 && ele==0x5040) return "Total Gain	Retired";
    if (grp==0x0018 && ele==0x5050) return "Depth of Scan Field";
    if (grp==0x0018 && ele==0x5100) return "Patient Position";
    if (grp==0x0018 && ele==0x5101) return "View Position";
    if (grp==0x0018 && ele==0x5104) return "Projection Eponymous Name Code Sequence";
    if (grp==0x0018 && ele==0x5210) return "Image Transformation Matrix	Retired";
    if (grp==0x0018 && ele==0x5212) return "Image Translation Vector	Retired";
    if (grp==0x0018 && ele==0x6000) return "Sensitivity";
    if (grp==0x0018 && ele==0x6011) return "Sequence of Ultrasound Regions";
    if (grp==0x0018 && ele==0x6012) return "Region Spatial Format";
    if (grp==0x0018 && ele==0x6014) return "Region Data Type";
    if (grp==0x0018 && ele==0x6016) return "Region Flags";
    if (grp==0x0018 && ele==0x6018) return "Region Location Min X0";
    if (grp==0x0018 && ele==0x601A) return "Region Location Min Y0";
    if (grp==0x0018 && ele==0x601C) return "Region Location Max X1";
    if (grp==0x0018 && ele==0x601E) return "Region Location Max Y1";
    if (grp==0x0018 && ele==0x6020) return "Reference Pixel X0";
    if (grp==0x0018 && ele==0x6022) return "Reference Pixel Y0";
    if (grp==0x0018 && ele==0x6024) return "Physical Units X Direction";
    if (grp==0x0018 && ele==0x6026) return "Physical Units Y Direction";
    if (grp==0x0018 && ele==0x6028) return "Reference Pixel Physical Value X";
    if (grp==0x0018 && ele==0x602A) return "Reference Pixel Physical Value Y";
    if (grp==0x0018 && ele==0x602C) return "Physical Delta X";
    if (grp==0x0018 && ele==0x602E) return "Physical Delta Y";
    if (grp==0x0018 && ele==0x6030) return "Transducer Frequency";
    if (grp==0x0018 && ele==0x6031) return "Transducer Type";
    if (grp==0x0018 && ele==0x6032) return "Pulse Repetition Frequency";
    if (grp==0x0018 && ele==0x6034) return "Doppler Correction Angle";
    if (grp==0x0018 && ele==0x6036) return "Steering Angle";
    if (grp==0x0018 && ele==0x6038) return "Doppler Sample Volume X Position (Retired)	Retired";
    if (grp==0x0018 && ele==0x6039) return "Doppler Sample Volume X Position";
    if (grp==0x0018 && ele==0x603A) return "Doppler Sample Volume Y Position (Retired)	Retired";
    if (grp==0x0018 && ele==0x603B) return "Doppler Sample Volume Y Position";
    if (grp==0x0018 && ele==0x603C) return "TM-Line Position X0 (Retired)	Retired";
    if (grp==0x0018 && ele==0x603D) return "TM-Line Position X0";
    if (grp==0x0018 && ele==0x603E) return "TM-Line Position Y0 (Retired)	Retired";
    if (grp==0x0018 && ele==0x603F) return "TM-Line Position Y0";
    if (grp==0x0018 && ele==0x6040) return "TM-Line Position X1 (Retired)	Retired";
    if (grp==0x0018 && ele==0x6041) return "TM-Line Position X1";
    if (grp==0x0018 && ele==0x6042) return "TM-Line Position Y1 (Retired)	Retired";
    if (grp==0x0018 && ele==0x6043) return "TM-Line Position Y1";
    if (grp==0x0018 && ele==0x6044) return "Pixel Component Organization";
    if (grp==0x0018 && ele==0x6046) return "Pixel Component Mask";
    if (grp==0x0018 && ele==0x6048) return "Pixel Component Range Start";
    if (grp==0x0018 && ele==0x604A) return "Pixel Component Range Stop";
    if (grp==0x0018 && ele==0x604C) return "Pixel Component Physical Units";
    if (grp==0x0018 && ele==0x604E) return "Pixel Component Data Type";
    if (grp==0x0018 && ele==0x6050) return "Number of Table Break Points";
    if (grp==0x0018 && ele==0x6052) return "Table of X Break Points";
    if (grp==0x0018 && ele==0x6054) return "Table of Y Break Points";
    if (grp==0x0018 && ele==0x6056) return "Number of Table Entries";
    if (grp==0x0018 && ele==0x6058) return "Table of Pixel Values";
    if (grp==0x0018 && ele==0x605A) return "Table of Parameter Values";
    if (grp==0x0018 && ele==0x6060) return "R Wave Time Vector";
    if (grp==0x0018 && ele==0x7000) return "Detector Conditions Nominal Flag";
    if (grp==0x0018 && ele==0x7001) return "Detector Temperature";
    if (grp==0x0018 && ele==0x7004) return "Detector Type";
    if (grp==0x0018 && ele==0x7005) return "Detector Configuration";
    if (grp==0x0018 && ele==0x7006) return "Detector Description";
    if (grp==0x0018 && ele==0x7008) return "Detector Mode";
    if (grp==0x0018 && ele==0x700A) return "Detector ID";
    if (grp==0x0018 && ele==0x700C) return "Date of Last Detector Calibration";
    if (grp==0x0018 && ele==0x700E) return "Time of Last Detector Calibration";
    if (grp==0x0018 && ele==0x7010) return "Exposures on Detector Since Last Calibration";
    if (grp==0x0018 && ele==0x7011) return "Exposures on Detector Since Manufactured";
    if (grp==0x0018 && ele==0x7012) return "Detector Time Since Last Exposure";
    if (grp==0x0018 && ele==0x7014) return "Detector Active Time";
    if (grp==0x0018 && ele==0x7016) return "Detector Activation Offset From Exposure";
    if (grp==0x0018 && ele==0x701A) return "Detector Binning";
    if (grp==0x0018 && ele==0x7020) return "Detector Element Physical Size";
    if (grp==0x0018 && ele==0x7022) return "Detector Element Spacing";
    if (grp==0x0018 && ele==0x7024) return "Detector Active Shape";
    if (grp==0x0018 && ele==0x7026) return "Detector Active Dimension(s)";
    if (grp==0x0018 && ele==0x7028) return "Detector Active Origin";
    if (grp==0x0018 && ele==0x702A) return "Detector Manufacturer Name";
    if (grp==0x0018 && ele==0x702B) return "Detector Manufacturer's Model Name";
    if (grp==0x0018 && ele==0x7030) return "Field of View Origin";
    if (grp==0x0018 && ele==0x7032) return "Field of View Rotation";
    if (grp==0x0018 && ele==0x7034) return "Field of View Horizontal Flip";
    if (grp==0x0018 && ele==0x7036) return "Pixel Data Area Origin Relative To FOV";
    if (grp==0x0018 && ele==0x7038) return "Pixel Data Area Rotation Angle Relative To FOV";
    if (grp==0x0018 && ele==0x7040) return "Grid Absorbing Material";
    if (grp==0x0018 && ele==0x7041) return "Grid Spacing Material";
    if (grp==0x0018 && ele==0x7042) return "Grid Thickness";
    if (grp==0x0018 && ele==0x7044) return "Grid Pitch";
    if (grp==0x0018 && ele==0x7046) return "Grid Aspect Ratio";
    if (grp==0x0018 && ele==0x7048) return "Grid Period";
    if (grp==0x0018 && ele==0x704C) return "Grid Focal Distance";
    if (grp==0x0018 && ele==0x7050) return "Filter Material";
    if (grp==0x0018 && ele==0x7052) return "Filter Thickness Minimum";
    if (grp==0x0018 && ele==0x7054) return "Filter Thickness Maximum";
    if (grp==0x0018 && ele==0x7056) return "Filter Beam Path Length Minimum";
    if (grp==0x0018 && ele==0x7058) return "Filter Beam Path Length Maximum";
    if (grp==0x0018 && ele==0x7060) return "Exposure Control Mode";
    if (grp==0x0018 && ele==0x7062) return "Exposure Control Mode Description";
    if (grp==0x0018 && ele==0x7064) return "Exposure Status";
    if (grp==0x0018 && ele==0x7065) return "Phototimer Setting";
    if (grp==0x0018 && ele==0x8150) return "Exposure Time in µS";
    if (grp==0x0018 && ele==0x8151) return "X-Ray Tube Current in µA";
    if (grp==0x0018 && ele==0x9004) return "Content Qualification";
    if (grp==0x0018 && ele==0x9005) return "Pulse Sequence Name";
    if (grp==0x0018 && ele==0x9006) return "MR Imaging Modifier Sequence";
    if (grp==0x0018 && ele==0x9008) return "Echo Pulse Sequence";
    if (grp==0x0018 && ele==0x9009) return "Inversion Recovery";
    if (grp==0x0018 && ele==0x9010) return "Flow Compensation";
    if (grp==0x0018 && ele==0x9011) return "Multiple Spin Echo";
    if (grp==0x0018 && ele==0x9012) return "Multi-planar Excitation";
    if (grp==0x0018 && ele==0x9014) return "Phase Contrast";
    if (grp==0x0018 && ele==0x9015) return "Time of Flight Contrast";
    if (grp==0x0018 && ele==0x9016) return "Spoiling";
    if (grp==0x0018 && ele==0x9017) return "Steady State Pulse Sequence";
    if (grp==0x0018 && ele==0x9018) return "Echo Planar Pulse Sequence";
    if (grp==0x0018 && ele==0x9019) return "Tag Angle First Axis";
    if (grp==0x0018 && ele==0x9020) return "Magnetization Transfer";
    if (grp==0x0018 && ele==0x9021) return "T2 Preparation";
    if (grp==0x0018 && ele==0x9022) return "Blood Signal Nulling";
    if (grp==0x0018 && ele==0x9024) return "Saturation Recovery";
    if (grp==0x0018 && ele==0x9025) return "Spectrally Selected Suppression";
    if (grp==0x0018 && ele==0x9026) return "Spectrally Selected Excitation";
    if (grp==0x0018 && ele==0x9027) return "Spatial Pre-saturation";
    if (grp==0x0018 && ele==0x9028) return "Tagging";
    if (grp==0x0018 && ele==0x9029) return "Oversampling Phase";
    if (grp==0x0018 && ele==0x9030) return "Tag Spacing First Dimension";
    if (grp==0x0018 && ele==0x9032) return "Geometry of k-Space Traversal";
    if (grp==0x0018 && ele==0x9033) return "Segmented k-Space Traversal";
    if (grp==0x0018 && ele==0x9034) return "Rectilinear Phase Encode Reordering";
    if (grp==0x0018 && ele==0x9035) return "Tag Thickness";
    if (grp==0x0018 && ele==0x9036) return "Partial Fourier Direction";
    if (grp==0x0018 && ele==0x9037) return "Cardiac Synchronization Technique";
    if (grp==0x0018 && ele==0x9041) return "Receive Coil Manufacturer Name";
    if (grp==0x0018 && ele==0x9042) return "MR Receive Coil Sequence";
    if (grp==0x0018 && ele==0x9043) return "Receive Coil Type";
    if (grp==0x0018 && ele==0x9044) return "Quadrature Receive Coil";
    if (grp==0x0018 && ele==0x9045) return "Multi-Coil Definition Sequence";
    if (grp==0x0018 && ele==0x9046) return "Multi-Coil Configuration";
    if (grp==0x0018 && ele==0x9047) return "Multi-Coil Element Name";
    if (grp==0x0018 && ele==0x9048) return "Multi-Coil Element Used";
    if (grp==0x0018 && ele==0x9049) return "MR Transmit Coil Sequence";
    if (grp==0x0018 && ele==0x9050) return "Transmit Coil Manufacturer Name";
    if (grp==0x0018 && ele==0x9051) return "Transmit Coil Type";
    if (grp==0x0018 && ele==0x9052) return "Spectral Width";
    if (grp==0x0018 && ele==0x9053) return "Chemical Shift Reference";
    if (grp==0x0018 && ele==0x9054) return "Volume Localization Technique";
    if (grp==0x0018 && ele==0x9058) return "MR Acquisition Frequency Encoding Steps";
    if (grp==0x0018 && ele==0x9059) return "De-coupling";
    if (grp==0x0018 && ele==0x9060) return "De-coupled Nucleus";
    if (grp==0x0018 && ele==0x9061) return "De-coupling Frequency";
    if (grp==0x0018 && ele==0x9062) return "De-coupling Method";
    if (grp==0x0018 && ele==0x9063) return "De-coupling Chemical Shift Reference";
    if (grp==0x0018 && ele==0x9064) return "k-space Filtering";
    if (grp==0x0018 && ele==0x9065) return "Time Domain Filtering";
    if (grp==0x0018 && ele==0x9066) return "Number of Zero Fills";
    if (grp==0x0018 && ele==0x9067) return "Baseline Correction";
    if (grp==0x0018 && ele==0x9069) return "Parallel Reduction Factor In-plane";
    if (grp==0x0018 && ele==0x9070) return "Cardiac R-R Interval Specified";
    if (grp==0x0018 && ele==0x9073) return "Acquisition Duration";
    if (grp==0x0018 && ele==0x9074) return "Frame Acquisition DateTime";
    if (grp==0x0018 && ele==0x9075) return "Diffusion Directionality";
    if (grp==0x0018 && ele==0x9076) return "Diffusion Gradient Direction Sequence";
    if (grp==0x0018 && ele==0x9077) return "Parallel Acquisition";
    if (grp==0x0018 && ele==0x9078) return "Parallel Acquisition Technique";
    if (grp==0x0018 && ele==0x9079) return "Inversion Times";
    if (grp==0x0018 && ele==0x9080) return "Metabolite Map Description";
    if (grp==0x0018 && ele==0x9081) return "Partial Fourier";
    if (grp==0x0018 && ele==0x9082) return "Effective Echo Time";
    if (grp==0x0018 && ele==0x9083) return "Metabolite Map Code Sequence";
    if (grp==0x0018 && ele==0x9084) return "Chemical Shift Sequence";
    if (grp==0x0018 && ele==0x9085) return "Cardiac Signal Source";
    if (grp==0x0018 && ele==0x9087) return "Diffusion b-value";
    if (grp==0x0018 && ele==0x9089) return "Diffusion Gradient Orientation";
    if (grp==0x0018 && ele==0x9090) return "Velocity Encoding Direction";
    if (grp==0x0018 && ele==0x9091) return "Velocity Encoding Minimum Value";
    if (grp==0x0018 && ele==0x9092) return "Velocity Encoding Acquisition Sequence";
    if (grp==0x0018 && ele==0x9093) return "Number of k-Space Trajectories";
    if (grp==0x0018 && ele==0x9094) return "Coverage of k-Space";
    if (grp==0x0018 && ele==0x9095) return "Spectroscopy Acquisition Phase Rows";
    if (grp==0x0018 && ele==0x9096) return "Parallel Reduction Factor In-plane (Retired)	Retired";
    if (grp==0x0018 && ele==0x9098) return "Transmitter Frequency";
    if (grp==0x0018 && ele==0x9100) return "Resonant Nucleus";
    if (grp==0x0018 && ele==0x9101) return "Frequency Correction";
    if (grp==0x0018 && ele==0x9103) return "MR Spectroscopy FOV/Geometry Sequence";
    if (grp==0x0018 && ele==0x9104) return "Slab Thickness";
    if (grp==0x0018 && ele==0x9105) return "Slab Orientation";
    if (grp==0x0018 && ele==0x9106) return "Mid Slab Position";
    if (grp==0x0018 && ele==0x9107) return "MR Spatial Saturation Sequence";
    if (grp==0x0018 && ele==0x9112) return "MR Timing and Related Parameters Sequence";
    if (grp==0x0018 && ele==0x9114) return "MR Echo Sequence";
    if (grp==0x0018 && ele==0x9115) return "MR Modifier Sequence";
    if (grp==0x0018 && ele==0x9117) return "MR Diffusion Sequence";
    if (grp==0x0018 && ele==0x9118) return "Cardiac Synchronization Sequence";
    if (grp==0x0018 && ele==0x9119) return "MR Averages Sequence";
    if (grp==0x0018 && ele==0x9125) return "MR FOV/Geometry Sequence";
    if (grp==0x0018 && ele==0x9126) return "Volume Localization Sequence";
    if (grp==0x0018 && ele==0x9127) return "Spectroscopy Acquisition Data Columns";
    if (grp==0x0018 && ele==0x9147) return "Diffusion Anisotropy Type";
    if (grp==0x0018 && ele==0x9151) return "Frame Reference DateTime";
    if (grp==0x0018 && ele==0x9152) return "MR Metabolite Map Sequence";
    if (grp==0x0018 && ele==0x9155) return "Parallel Reduction Factor out-of-plane";
    if (grp==0x0018 && ele==0x9159) return "Spectroscopy Acquisition Out-of-plane Phase Steps";
    if (grp==0x0018 && ele==0x9166) return "Bulk Motion Status	Retired";
    if (grp==0x0018 && ele==0x9168) return "Parallel Reduction Factor Second In-plane";
    if (grp==0x0018 && ele==0x9169) return "Cardiac Beat Rejection Technique";
    if (grp==0x0018 && ele==0x9170) return "Respiratory Motion Compensation Technique";
    if (grp==0x0018 && ele==0x9171) return "Respiratory Signal Source";
    if (grp==0x0018 && ele==0x9172) return "Bulk Motion Compensation Technique";
    if (grp==0x0018 && ele==0x9173) return "Bulk Motion Signal Source";
    if (grp==0x0018 && ele==0x9174) return "Applicable Safety Standard Agency";
    if (grp==0x0018 && ele==0x9175) return "Applicable Safety Standard Description";
    if (grp==0x0018 && ele==0x9176) return "Operating Mode Sequence";
    if (grp==0x0018 && ele==0x9177) return "Operating Mode Type";
    if (grp==0x0018 && ele==0x9178) return "Operating Mode";
    if (grp==0x0018 && ele==0x9179) return "Specific Absorption Rate Definition";
    if (grp==0x0018 && ele==0x9180) return "Gradient Output Type";
    if (grp==0x0018 && ele==0x9181) return "Specific Absorption Rate Value";
    if (grp==0x0018 && ele==0x9182) return "Gradient Output";
    if (grp==0x0018 && ele==0x9183) return "Flow Compensation Direction";
    if (grp==0x0018 && ele==0x9184) return "Tagging Delay";
    if (grp==0x0018 && ele==0x9185) return "Respiratory Motion Compensation Technique Description";
    if (grp==0x0018 && ele==0x9186) return "Respiratory Signal Source ID";
    if (grp==0x0018 && ele==0x9195) return "Chemical Shift Minimum Integration Limit in Hz	Retired";
    if (grp==0x0018 && ele==0x9196) return "Chemical Shift Maximum Integration Limit in Hz	Retired";
    if (grp==0x0018 && ele==0x9197) return "MR Velocity Encoding Sequence";
    if (grp==0x0018 && ele==0x9198) return "First Order Phase Correction";
    if (grp==0x0018 && ele==0x9199) return "Water Referenced Phase Correction";
    if (grp==0x0018 && ele==0x9200) return "MR Spectroscopy Acquisition Type";
    if (grp==0x0018 && ele==0x9214) return "Respiratory Cycle Position";
    if (grp==0x0018 && ele==0x9217) return "Velocity Encoding Maximum Value";
    if (grp==0x0018 && ele==0x9218) return "Tag Spacing Second Dimension";
    if (grp==0x0018 && ele==0x9219) return "Tag Angle Second Axis";
    if (grp==0x0018 && ele==0x9220) return "Frame Acquisition Duration";
    if (grp==0x0018 && ele==0x9226) return "MR Image Frame Type Sequence";
    if (grp==0x0018 && ele==0x9227) return "MR Spectroscopy Frame Type Sequence";
    if (grp==0x0018 && ele==0x9231) return "MR Acquisition Phase Encoding Steps in-plane";
    if (grp==0x0018 && ele==0x9232) return "MR Acquisition Phase Encoding Steps out-of-plane";
    if (grp==0x0018 && ele==0x9234) return "Spectroscopy Acquisition Phase Columns";
    if (grp==0x0018 && ele==0x9236) return "Cardiac Cycle Position";
    if (grp==0x0018 && ele==0x9239) return "Specific Absorption Rate Sequence";
    if (grp==0x0018 && ele==0x9240) return "RF Echo Train Length";
    if (grp==0x0018 && ele==0x9241) return "Gradient Echo Train Length";
    if (grp==0x0018 && ele==0x9250) return "Arterial Spin Labeling Contrast";
    if (grp==0x0018 && ele==0x9251) return "MR Arterial Spin Labeling Sequence";
    if (grp==0x0018 && ele==0x9252) return "ASL Technique Description";
    if (grp==0x0018 && ele==0x9253) return "ASL Slab Number";
    if (grp==0x0018 && ele==0x9254) return "ASL Slab Thickness";
    if (grp==0x0018 && ele==0x9255) return "ASL Slab Orientation";
    if (grp==0x0018 && ele==0x9256) return "ASL Mid Slab Position";
    if (grp==0x0018 && ele==0x9257) return "ASL Context";
    if (grp==0x0018 && ele==0x9258) return "ASL Pulse Train Duration";
    if (grp==0x0018 && ele==0x9259) return "ASL Crusher Flag";
    if (grp==0x0018 && ele==0x925A) return "ASL Crusher Flow Limit";
    if (grp==0x0018 && ele==0x925B) return "ASL Crusher Description";
    if (grp==0x0018 && ele==0x925C) return "ASL Bolus Cut-off Flag";
    if (grp==0x0018 && ele==0x925D) return "ASL Bolus Cut-off Timing Sequence";
    if (grp==0x0018 && ele==0x925E) return "ASL Bolus Cut-off Technique";
    if (grp==0x0018 && ele==0x925F) return "ASL Bolus Cut-off Delay Time";
    if (grp==0x0018 && ele==0x9260) return "ASL Slab Sequence";
    if (grp==0x0018 && ele==0x9295) return "Chemical Shift Minimum Integration Limit in ppm";
    if (grp==0x0018 && ele==0x9296) return "Chemical Shift Maximum Integration Limit in ppm";
    if (grp==0x0018 && ele==0x9297) return "Water Reference Acquisition";
    if (grp==0x0018 && ele==0x9298) return "Echo Peak Position";
    if (grp==0x0018 && ele==0x9301) return "CT Acquisition Type Sequence";
    if (grp==0x0018 && ele==0x9302) return "Acquisition Type";
    if (grp==0x0018 && ele==0x9303) return "Tube Angle";
    if (grp==0x0018 && ele==0x9304) return "CT Acquisition Details Sequence";
    if (grp==0x0018 && ele==0x9305) return "Revolution Time";
    if (grp==0x0018 && ele==0x9306) return "Single Collimation Width";
    if (grp==0x0018 && ele==0x9307) return "Total Collimation Width";
    if (grp==0x0018 && ele==0x9308) return "CT Table Dynamics Sequence";
    if (grp==0x0018 && ele==0x9309) return "Table Speed";
    if (grp==0x0018 && ele==0x9310) return "Table Feed per Rotation";
    if (grp==0x0018 && ele==0x9311) return "Spiral Pitch Factor";
    if (grp==0x0018 && ele==0x9312) return "CT Geometry Sequence";
    if (grp==0x0018 && ele==0x9313) return "Data Collection Center (Patient)";
    if (grp==0x0018 && ele==0x9314) return "CT Reconstruction Sequence";
    if (grp==0x0018 && ele==0x9315) return "Reconstruction Algorithm";
    if (grp==0x0018 && ele==0x9316) return "Convolution Kernel Group";
    if (grp==0x0018 && ele==0x9317) return "Reconstruction Field of View";
    if (grp==0x0018 && ele==0x9318) return "Reconstruction Target Center (Patient)";
    if (grp==0x0018 && ele==0x9319) return "Reconstruction Angle";
    if (grp==0x0018 && ele==0x9320) return "Image Filter";
    if (grp==0x0018 && ele==0x9321) return "CT Exposure Sequence";
    if (grp==0x0018 && ele==0x9322) return "Reconstruction Pixel Spacing";
    if (grp==0x0018 && ele==0x9323) return "Exposure Modulation Type";
    if (grp==0x0018 && ele==0x9324) return "Estimated Dose Saving";
    if (grp==0x0018 && ele==0x9325) return "CT X-Ray Details Sequence";
    if (grp==0x0018 && ele==0x9326) return "CT Position Sequence";
    if (grp==0x0018 && ele==0x9327) return "Table Position";
    if (grp==0x0018 && ele==0x9328) return "Exposure Time in ms";
    if (grp==0x0018 && ele==0x9329) return "CT Image Frame Type Sequence";
    if (grp==0x0018 && ele==0x9330) return "X-Ray Tube Current in mA";
    if (grp==0x0018 && ele==0x9332) return "Exposure in mAs";
    if (grp==0x0018 && ele==0x9333) return "Constant Volume Flag";
    if (grp==0x0018 && ele==0x9334) return "Fluoroscopy Flag";
    if (grp==0x0018 && ele==0x9335) return "Distance Source to Data Collection Center";
    if (grp==0x0018 && ele==0x9337) return "Contrast/Bolus Agent Number";
    if (grp==0x0018 && ele==0x9338) return "Contrast/Bolus Ingredient Code Sequence";
    if (grp==0x0018 && ele==0x9340) return "Contrast Administration Profile Sequence";
    if (grp==0x0018 && ele==0x9341) return "Contrast/Bolus Usage Sequence";
    if (grp==0x0018 && ele==0x9342) return "Contrast/Bolus Agent Administered";
    if (grp==0x0018 && ele==0x9343) return "Contrast/Bolus Agent Detected";
    if (grp==0x0018 && ele==0x9344) return "Contrast/Bolus Agent Phase";
    if (grp==0x0018 && ele==0x9345) return "CTDIvol";
    if (grp==0x0018 && ele==0x9346) return "CTDI Phantom Type Code Sequence";
    if (grp==0x0018 && ele==0x9351) return "Calcium Scoring Mass Factor Patient";
    if (grp==0x0018 && ele==0x9352) return "Calcium Scoring Mass Factor Device";
    if (grp==0x0018 && ele==0x9353) return "Energy Weighting Factor";
    if (grp==0x0018 && ele==0x9360) return "CT Additional X-Ray Source Sequence";
    if (grp==0x0018 && ele==0x9401) return "Projection Pixel Calibration Sequence";
    if (grp==0x0018 && ele==0x9402) return "Distance Source to Isocenter";
    if (grp==0x0018 && ele==0x9403) return "Distance Object to Table Top";
    if (grp==0x0018 && ele==0x9404) return "Object Pixel Spacing in Center of Beam";
    if (grp==0x0018 && ele==0x9405) return "Positioner Position Sequence";
    if (grp==0x0018 && ele==0x9406) return "Table Position Sequence";
    if (grp==0x0018 && ele==0x9407) return "Collimator Shape Sequence";
    if (grp==0x0018 && ele==0x9410) return "Planes in Acquisition";
    if (grp==0x0018 && ele==0x9412) return "XA/XRF Frame Characteristics Sequence";
    if (grp==0x0018 && ele==0x9417) return "Frame Acquisition Sequence";
    if (grp==0x0018 && ele==0x9420) return "X-Ray Receptor Type";
    if (grp==0x0018 && ele==0x9423) return "Acquisition Protocol Name";
    if (grp==0x0018 && ele==0x9424) return "Acquisition Protocol Description";
    if (grp==0x0018 && ele==0x9425) return "Contrast/Bolus Ingredient Opaque";
    if (grp==0x0018 && ele==0x9426) return "Distance Receptor Plane to Detector Housing";
    if (grp==0x0018 && ele==0x9427) return "Intensifier Active Shape";
    if (grp==0x0018 && ele==0x9428) return "Intensifier Active Dimension(s)";
    if (grp==0x0018 && ele==0x9429) return "Physical Detector Size";
    if (grp==0x0018 && ele==0x9430) return "Position of Isocenter Projection";
    if (grp==0x0018 && ele==0x9432) return "Field of View Sequence";
    if (grp==0x0018 && ele==0x9433) return "Field of View Description";
    if (grp==0x0018 && ele==0x9434) return "Exposure Control Sensing Regions Sequence";
    if (grp==0x0018 && ele==0x9435) return "Exposure Control Sensing Region Shape";
    if (grp==0x0018 && ele==0x9436) return "Exposure Control Sensing Region Left Vertical Edge";
    if (grp==0x0018 && ele==0x9437) return "Exposure Control Sensing Region Right Vertical Edge";
    if (grp==0x0018 && ele==0x9438) return "Exposure Control Sensing Region Upper Horizontal Edge";
    if (grp==0x0018 && ele==0x9439) return "Exposure Control Sensing Region Lower Horizontal Edge";
    if (grp==0x0018 && ele==0x9440) return "Center of Circular Exposure Control Sensing Region";
    if (grp==0x0018 && ele==0x9441) return "Radius of Circular Exposure Control Sensing Region";
    if (grp==0x0018 && ele==0x9442) return "Vertices of the Polygonal Exposure Control Sensing Region";
    if (grp==0x0018 && ele==0x9445) return "		Retired";
    if (grp==0x0018 && ele==0x9447) return "Column Angulation (Patient)";
    if (grp==0x0018 && ele==0x9449) return "Beam Angle";
    if (grp==0x0018 && ele==0x9451) return "Frame Detector Parameters Sequence";
    if (grp==0x0018 && ele==0x9452) return "Calculated Anatomy Thickness";
    if (grp==0x0018 && ele==0x9455) return "Calibration Sequence";
    if (grp==0x0018 && ele==0x9456) return "Object Thickness Sequence";
    if (grp==0x0018 && ele==0x9457) return "Plane Identification";
    if (grp==0x0018 && ele==0x9461) return "Field of View Dimension(s) in Float";
    if (grp==0x0018 && ele==0x9462) return "Isocenter Reference System Sequence";
    if (grp==0x0018 && ele==0x9463) return "Positioner Isocenter Primary Angle";
    if (grp==0x0018 && ele==0x9464) return "Positioner Isocenter Secondary Angle";
    if (grp==0x0018 && ele==0x9465) return "Positioner Isocenter Detector Rotation Angle";
    if (grp==0x0018 && ele==0x9466) return "Table X Position to Isocenter";
    if (grp==0x0018 && ele==0x9467) return "Table Y Position to Isocenter";
    if (grp==0x0018 && ele==0x9468) return "Table Z Position to Isocenter";
    if (grp==0x0018 && ele==0x9469) return "Table Horizontal Rotation Angle";
    if (grp==0x0018 && ele==0x9470) return "Table Head Tilt Angle";
    if (grp==0x0018 && ele==0x9471) return "Table Cradle Tilt Angle";
    if (grp==0x0018 && ele==0x9472) return "Frame Display Shutter Sequence";
    if (grp==0x0018 && ele==0x9473) return "Acquired Image Area Dose Product";
    if (grp==0x0018 && ele==0x9474) return "C-arm Positioner Tabletop Relationship";
    if (grp==0x0018 && ele==0x9476) return "X-Ray Geometry Sequence";
    if (grp==0x0018 && ele==0x9477) return "Irradiation Event Identification Sequence";
    if (grp==0x0018 && ele==0x9504) return "X-Ray 3D Frame Type Sequence";
    if (grp==0x0018 && ele==0x9506) return "Contributing Sources Sequence";
    if (grp==0x0018 && ele==0x9507) return "X-Ray 3D Acquisition Sequence";
    if (grp==0x0018 && ele==0x9508) return "Primary Positioner Scan Arc";
    if (grp==0x0018 && ele==0x9509) return "Secondary Positioner Scan Arc";
    if (grp==0x0018 && ele==0x9510) return "Primary Positioner Scan Start Angle";
    if (grp==0x0018 && ele==0x9511) return "Secondary Positioner Scan Start Angle";
    if (grp==0x0018 && ele==0x9514) return "Primary Positioner Increment";
    if (grp==0x0018 && ele==0x9515) return "Secondary Positioner Increment";
    if (grp==0x0018 && ele==0x9516) return "Start Acquisition DateTime";
    if (grp==0x0018 && ele==0x9517) return "End Acquisition DateTime";
    if (grp==0x0018 && ele==0x9518) return "Primary Positioner Increment Sign";
    if (grp==0x0018 && ele==0x9519) return "Secondary Positioner Increment Sign";
    if (grp==0x0018 && ele==0x9524) return "Application Name";
    if (grp==0x0018 && ele==0x9525) return "Application Version";
    if (grp==0x0018 && ele==0x9526) return "Application Manufacturer";
    if (grp==0x0018 && ele==0x9527) return "Algorithm Type";
    if (grp==0x0018 && ele==0x9528) return "Algorithm Description";
    if (grp==0x0018 && ele==0x9530) return "X-Ray 3D Reconstruction Sequence";
    if (grp==0x0018 && ele==0x9531) return "Reconstruction Description";
    if (grp==0x0018 && ele==0x9538) return "Per Projection Acquisition Sequence";
    if (grp==0x0018 && ele==0x9541) return "Detector Position Sequence";
    if (grp==0x0018 && ele==0x9542) return "X-Ray Acquisition Dose Sequence";
    if (grp==0x0018 && ele==0x9543) return "X-Ray Source Isocenter Primary Angle";
    if (grp==0x0018 && ele==0x9544) return "X-Ray Source Isocenter Secondary Angle";
    if (grp==0x0018 && ele==0x9545) return "Breast Support Isocenter Primary Angle";
    if (grp==0x0018 && ele==0x9546) return "Breast Support Isocenter Secondary Angle";
    if (grp==0x0018 && ele==0x9547) return "Breast Support X Position to Isocenter";
    if (grp==0x0018 && ele==0x9548) return "Breast Support Y Position to Isocenter";
    if (grp==0x0018 && ele==0x9549) return "Breast Support Z Position to Isocenter";
    if (grp==0x0018 && ele==0x9550) return "Detector Isocenter Primary Angle";
    if (grp==0x0018 && ele==0x9551) return "Detector Isocenter Secondary Angle";
    if (grp==0x0018 && ele==0x9552) return "Detector X Position to Isocenter";
    if (grp==0x0018 && ele==0x9553) return "Detector Y Position to Isocenter";
    if (grp==0x0018 && ele==0x9554) return "Detector Z Position to Isocenter";
    if (grp==0x0018 && ele==0x9555) return "X-Ray Grid Sequence";
    if (grp==0x0018 && ele==0x9556) return "X-Ray Filter Sequence";
    if (grp==0x0018 && ele==0x9557) return "Detector Active Area TLHC Position";
    if (grp==0x0018 && ele==0x9558) return "Detector Active Area Orientation";
    if (grp==0x0018 && ele==0x9559) return "Positioner Primary Angle Direction";
    if (grp==0x0018 && ele==0x9601) return "Diffusion b-matrix Sequence";
    if (grp==0x0018 && ele==0x9602) return "Diffusion b-value XX";
    if (grp==0x0018 && ele==0x9603) return "Diffusion b-value XY";
    if (grp==0x0018 && ele==0x9604) return "Diffusion b-value XZ";
    if (grp==0x0018 && ele==0x9605) return "Diffusion b-value YY";
    if (grp==0x0018 && ele==0x9606) return "Diffusion b-value YZ";
    if (grp==0x0018 && ele==0x9607) return "Diffusion b-value ZZ";
    if (grp==0x0018 && ele==0x9621) return "Functional MR Sequence";
    if (grp==0x0018 && ele==0x9622) return "Functional Settling Phase Frames Present";
    if (grp==0x0018 && ele==0x9623) return "Functional Sync Pulse";
    if (grp==0x0018 && ele==0x9624) return "Settling Phase Frame";
    if (grp==0x0018 && ele==0x9701) return "Decay Correction DateTime";
    if (grp==0x0018 && ele==0x9715) return "Start Density Threshold";
    if (grp==0x0018 && ele==0x9716) return "Start Relative Density Difference Threshold";
    if (grp==0x0018 && ele==0x9717) return "Start Cardiac Trigger Count Threshold";
    if (grp==0x0018 && ele==0x9718) return "Start Respiratory Trigger Count Threshold";
    if (grp==0x0018 && ele==0x9719) return "Termination Counts Threshold";
    if (grp==0x0018 && ele==0x9720) return "Termination Density Threshold";
    if (grp==0x0018 && ele==0x9721) return "Termination Relative Density Threshold";
    if (grp==0x0018 && ele==0x9722) return "Termination Time Threshold";
    if (grp==0x0018 && ele==0x9723) return "Termination Cardiac Trigger Count Threshold";
    if (grp==0x0018 && ele==0x9724) return "Termination Respiratory Trigger Count Threshold";
    if (grp==0x0018 && ele==0x9725) return "Detector Geometry";
    if (grp==0x0018 && ele==0x9726) return "Transverse Detector Separation";
    if (grp==0x0018 && ele==0x9727) return "Axial Detector Dimension";
    if (grp==0x0018 && ele==0x9729) return "Radiopharmaceutical Agent Number";
    if (grp==0x0018 && ele==0x9732) return "PET Frame Acquisition Sequence";
    if (grp==0x0018 && ele==0x9733) return "PET Detector Motion Details Sequence";
    if (grp==0x0018 && ele==0x9734) return "PET Table Dynamics Sequence";
    if (grp==0x0018 && ele==0x9735) return "PET Position Sequence";
    if (grp==0x0018 && ele==0x9736) return "PET Frame Correction Factors Sequence";
    if (grp==0x0018 && ele==0x9737) return "Radiopharmaceutical Usage Sequence";
    if (grp==0x0018 && ele==0x9738) return "Attenuation Correction Source";
    if (grp==0x0018 && ele==0x9739) return "Number of Iterations";
    if (grp==0x0018 && ele==0x9740) return "Number of Subsets";
    if (grp==0x0018 && ele==0x9749) return "PET Reconstruction Sequence";
    if (grp==0x0018 && ele==0x9751) return "PET Frame Type Sequence";
    if (grp==0x0018 && ele==0x9755) return "Time of Flight Information Used";
    if (grp==0x0018 && ele==0x9756) return "Reconstruction Type";
    if (grp==0x0018 && ele==0x9758) return "Decay Corrected";
    if (grp==0x0018 && ele==0x9759) return "Attenuation Corrected";
    if (grp==0x0018 && ele==0x9760) return "Scatter Corrected";
    if (grp==0x0018 && ele==0x9761) return "Dead Time Corrected";
    if (grp==0x0018 && ele==0x9762) return "Gantry Motion Corrected";
    if (grp==0x0018 && ele==0x9763) return "Patient Motion Corrected";
    if (grp==0x0018 && ele==0x9764) return "Count Loss Normalization Corrected";
    if (grp==0x0018 && ele==0x9765) return "Randoms Corrected";
    if (grp==0x0018 && ele==0x9766) return "Non-uniform Radial Sampling Corrected";
    if (grp==0x0018 && ele==0x9767) return "Sensitivity Calibrated";
    if (grp==0x0018 && ele==0x9768) return "Detector Normalization Correction";
    if (grp==0x0018 && ele==0x9769) return "Iterative Reconstruction Method";
    if (grp==0x0018 && ele==0x9770) return "Attenuation Correction Temporal Relationship";
    if (grp==0x0018 && ele==0x9771) return "Patient Physiological State Sequence";
    if (grp==0x0018 && ele==0x9772) return "Patient Physiological State Code Sequence";
    if (grp==0x0018 && ele==0x9801) return "Depth(s) of Focus";
    if (grp==0x0018 && ele==0x9803) return "Excluded Intervals Sequence";
    if (grp==0x0018 && ele==0x9804) return "Exclusion Start DateTime";
    if (grp==0x0018 && ele==0x9805) return "Exclusion Duration";
    if (grp==0x0018 && ele==0x9806) return "US Image Description Sequence";
    if (grp==0x0018 && ele==0x9807) return "Image Data Type Sequence";
    if (grp==0x0018 && ele==0x9808) return "Data Type";
    if (grp==0x0018 && ele==0x9809) return "Transducer Scan Pattern Code Sequence";
    if (grp==0x0018 && ele==0x980B) return "Aliased Data Type";
    if (grp==0x0018 && ele==0x980C) return "Position Measuring Device Used";
    if (grp==0x0018 && ele==0x980D) return "Transducer Geometry Code Sequence";
    if (grp==0x0018 && ele==0x980E) return "Transducer Beam Steering Code Sequence";
    if (grp==0x0018 && ele==0x980F) return "Transducer Application Code Sequence";
    if (grp==0x0018 && ele==0x9810) return "US or SS	Zero Velocity Pixel Value";
    if (grp==0x0018 && ele==0xA001) return "Contributing Equipment Sequence";
    if (grp==0x0018 && ele==0xA002) return "Contribution DateTime";
    if (grp==0x0018 && ele==0xA003) return "Contribution Description";
    if (grp==0x0020 && ele==0x000D) return "Study Instance UID";
    if (grp==0x0020 && ele==0x000E) return "Series Instance UID";
    if (grp==0x0020 && ele==0x0010) return "Study ID";
    if (grp==0x0020 && ele==0x0011) return "Series Number";
    if (grp==0x0020 && ele==0x0012) return "Acquisition Number";
    if (grp==0x0020 && ele==0x0013) return "Instance Number";
    if (grp==0x0020 && ele==0x0014) return "Isotope Number	Retired";
    if (grp==0x0020 && ele==0x0015) return "Phase Number	Retired";
    if (grp==0x0020 && ele==0x0016) return "Interval Number	Retired";
    if (grp==0x0020 && ele==0x0017) return "Time Slot Number	Retired";
    if (grp==0x0020 && ele==0x0018) return "Angle Number	Retired";
    if (grp==0x0020 && ele==0x0019) return "Item Number";
    if (grp==0x0020 && ele==0x0020) return "Patient Orientation";
    if (grp==0x0020 && ele==0x0022) return "Overlay Number	Retired";
    if (grp==0x0020 && ele==0x0024) return "Curve Number	Retired";
    if (grp==0x0020 && ele==0x0026) return "LUT Number	Retired";
    if (grp==0x0020 && ele==0x0030) return "Image Position	Retired";
    if (grp==0x0020 && ele==0x0032) return "Image Position (Patient)";
    if (grp==0x0020 && ele==0x0035) return "Image Orientation	Retired";
    if (grp==0x0020 && ele==0x0037) return "Image Orientation (Patient)";
    if (grp==0x0020 && ele==0x0050) return "Location	Retired";
    if (grp==0x0020 && ele==0x0052) return "Frame of Reference UID";
    if (grp==0x0020 && ele==0x0060) return "Laterality";
    if (grp==0x0020 && ele==0x0062) return "Image Laterality";
    if (grp==0x0020 && ele==0x0070) return "Image Geometry Type	Retired";
    if (grp==0x0020 && ele==0x0080) return "Masking Image	Retired";
    if (grp==0x0020 && ele==0x00AA) return "Report Number	Retired";
    if (grp==0x0020 && ele==0x0100) return "Temporal Position Identifier";
    if (grp==0x0020 && ele==0x0105) return "Number of Temporal Positions";
    if (grp==0x0020 && ele==0x0110) return "Temporal Resolution";
    if (grp==0x0020 && ele==0x0200) return "Synchronization Frame of Reference UID";
    if (grp==0x0020 && ele==0x0242) return "SOP Instance UID of Concatenation Source";
    if (grp==0x0020 && ele==0x1000) return "Series in Study	Retired";
    if (grp==0x0020 && ele==0x1001) return "Acquisitions in Series	Retired";
    if (grp==0x0020 && ele==0x1002) return "Images in Acquisition";
    if (grp==0x0020 && ele==0x1003) return "Images in Series	Retired";
    if (grp==0x0020 && ele==0x1004) return "Acquisitions in Study	Retired";
    if (grp==0x0020 && ele==0x1005) return "Images in Study	Retired";
    if (grp==0x0020 && ele==0x1020) return "Reference	Retired";
    if (grp==0x0020 && ele==0x1040) return "Position Reference Indicator";
    if (grp==0x0020 && ele==0x1041) return "Slice Location";
    if (grp==0x0020 && ele==0x1070) return "Other Study Numbers	Retired";
    if (grp==0x0020 && ele==0x1200) return "Number of Patient Related Studies";
    if (grp==0x0020 && ele==0x1202) return "Number of Patient Related Series";
    if (grp==0x0020 && ele==0x1204) return "Number of Patient Related Instances";
    if (grp==0x0020 && ele==0x1206) return "Number of Study Related Series";
    if (grp==0x0020 && ele==0x1208) return "Number of Study Related Instances";
    if (grp==0x0020 && ele==0x1209) return "Number of Series Related Instances";
    if (grp==0x0020 && ele==0x3401) return "Modifying Device ID	Retired";
    if (grp==0x0020 && ele==0x3402) return "Modified Image ID	Retired";
    if (grp==0x0020 && ele==0x3403) return "Modified Image Date	Retired";
    if (grp==0x0020 && ele==0x3404) return "Modifying Device Manufacturer	Retired";
    if (grp==0x0020 && ele==0x3405) return "Modified Image Time	Retired";
    if (grp==0x0020 && ele==0x3406) return "Modified Image Description	Retired";
    if (grp==0x0020 && ele==0x4000) return "Image Comments";
    if (grp==0x0020 && ele==0x5000) return "Original Image Identification	Retired";
    if (grp==0x0020 && ele==0x5002) return "Original Image Identification Nomenclature	Retired";
    if (grp==0x0020 && ele==0x9056) return "Stack ID";
    if (grp==0x0020 && ele==0x9057) return "In-Stack Position Number";
    if (grp==0x0020 && ele==0x9071) return "Frame Anatomy Sequence";
    if (grp==0x0020 && ele==0x9072) return "Frame Laterality";
    if (grp==0x0020 && ele==0x9111) return "Frame Content Sequence";
    if (grp==0x0020 && ele==0x9113) return "Plane Position Sequence";
    if (grp==0x0020 && ele==0x9116) return "Plane Orientation Sequence";
    if (grp==0x0020 && ele==0x9128) return "Temporal Position Index";
    if (grp==0x0020 && ele==0x9153) return "Nominal Cardiac Trigger Delay Time";
    if (grp==0x0020 && ele==0x9154) return "Nominal Cardiac Trigger Time Prior To R-Peak";
    if (grp==0x0020 && ele==0x9155) return "Actual Cardiac Trigger Time Prior To R-Peak";
    if (grp==0x0020 && ele==0x9156) return "Frame Acquisition Number";
    if (grp==0x0020 && ele==0x9157) return "Dimension Index Values";
    if (grp==0x0020 && ele==0x9158) return "Frame Comments";
    if (grp==0x0020 && ele==0x9161) return "Concatenation UID";
    if (grp==0x0020 && ele==0x9162) return "In-concatenation Number";
    if (grp==0x0020 && ele==0x9163) return "In-concatenation Total Number";
    if (grp==0x0020 && ele==0x9164) return "Dimension Organization UID";
    if (grp==0x0020 && ele==0x9165) return "Dimension Index Pointer";
    if (grp==0x0020 && ele==0x9167) return "Functional Group Pointer";
    if (grp==0x0020 && ele==0x9170) return "Unassigned Shared Converted Attributes Sequence";
    if (grp==0x0020 && ele==0x9171) return "Unassigned Per-Frame Converted Attributes Sequence";
    if (grp==0x0020 && ele==0x9172) return "Conversion Source Attributes Sequence";
    if (grp==0x0020 && ele==0x9213) return "Dimension Index Private Creator";
    if (grp==0x0020 && ele==0x9221) return "Dimension Organization Sequence";
    if (grp==0x0020 && ele==0x9222) return "Dimension Index Sequence";
    if (grp==0x0020 && ele==0x9228) return "Concatenation Frame Offset Number";
    if (grp==0x0020 && ele==0x9238) return "Functional Group Private Creator";
    if (grp==0x0020 && ele==0x9241) return "Nominal Percentage of Cardiac Phase";
    if (grp==0x0020 && ele==0x9245) return "Nominal Percentage of Respiratory Phase";
    if (grp==0x0020 && ele==0x9246) return "Starting Respiratory Amplitude";
    if (grp==0x0020 && ele==0x9247) return "Starting Respiratory Phase";
    if (grp==0x0020 && ele==0x9248) return "Ending Respiratory Amplitude";
    if (grp==0x0020 && ele==0x9249) return "Ending Respiratory Phase";
    if (grp==0x0020 && ele==0x9250) return "Respiratory Trigger Type";
    if (grp==0x0020 && ele==0x9251) return "R-R Interval Time Nominal";
    if (grp==0x0020 && ele==0x9252) return "Actual Cardiac Trigger Delay Time";
    if (grp==0x0020 && ele==0x9253) return "Respiratory Synchronization Sequence";
    if (grp==0x0020 && ele==0x9254) return "Respiratory Interval Time";
    if (grp==0x0020 && ele==0x9255) return "Nominal Respiratory Trigger Delay Time";
    if (grp==0x0020 && ele==0x9256) return "Respiratory Trigger Delay Threshold";
    if (grp==0x0020 && ele==0x9257) return "Actual Respiratory Trigger Delay Time";
    if (grp==0x0020 && ele==0x9301) return "Image Position (Volume)";
    if (grp==0x0020 && ele==0x9302) return "Image Orientation (Volume)";
    if (grp==0x0020 && ele==0x9307) return "Ultrasound Acquisition Geometry";
    if (grp==0x0020 && ele==0x9308) return "Apex Position";
    if (grp==0x0020 && ele==0x9309) return "Volume to Transducer Mapping Matrix";
    if (grp==0x0020 && ele==0x930A) return "Volume to Table Mapping Matrix";
    if (grp==0x0020 && ele==0x930B) return "Volume to Transducer Relationship";
    if (grp==0x0020 && ele==0x930C) return "Patient Frame of Reference Source";
    if (grp==0x0020 && ele==0x930D) return "Temporal Position Time Offset";
    if (grp==0x0020 && ele==0x930E) return "Plane Position (Volume) Sequence";
    if (grp==0x0020 && ele==0x930F) return "Plane Orientation (Volume) Sequence";
    if (grp==0x0020 && ele==0x9310) return "Temporal Position Sequence";
    if (grp==0x0020 && ele==0x9311) return "Dimension Organization Type";
    if (grp==0x0020 && ele==0x9312) return "Volume Frame of Reference UID";
    if (grp==0x0020 && ele==0x9313) return "Table Frame of Reference UID";
    if (grp==0x0020 && ele==0x9421) return "Dimension Description Label";
    if (grp==0x0020 && ele==0x9450) return "Patient Orientation in Frame Sequence";
    if (grp==0x0020 && ele==0x9453) return "Frame Label";
    if (grp==0x0020 && ele==0x9518) return "Acquisition Index";
    if (grp==0x0020 && ele==0x9529) return "Contributing SOP Instances Reference Sequence";
    if (grp==0x0020 && ele==0x9536) return "Reconstruction Index";
    if (grp==0x0022 && ele==0x0001) return "Light Path Filter Pass-Through Wavelength";
    if (grp==0x0022 && ele==0x0002) return "Light Path Filter Pass Band";
    if (grp==0x0022 && ele==0x0003) return "Image Path Filter Pass-Through Wavelength";
    if (grp==0x0022 && ele==0x0004) return "Image Path Filter Pass Band";
    if (grp==0x0022 && ele==0x0005) return "Patient Eye Movement Commanded";
    if (grp==0x0022 && ele==0x0006) return "Patient Eye Movement Command Code Sequence";
    if (grp==0x0022 && ele==0x0007) return "Spherical Lens Power";
    if (grp==0x0022 && ele==0x0008) return "Cylinder Lens Power";
    if (grp==0x0022 && ele==0x0009) return "Cylinder Axis";
    if (grp==0x0022 && ele==0x000A) return "Emmetropic Magnification";
    if (grp==0x0022 && ele==0x000B) return "Intra Ocular Pressure";
    if (grp==0x0022 && ele==0x000C) return "Horizontal Field of View";
    if (grp==0x0022 && ele==0x000D) return "Pupil Dilated";
    if (grp==0x0022 && ele==0x000E) return "Degree of Dilation";
    if (grp==0x0022 && ele==0x0010) return "Stereo Baseline Angle";
    if (grp==0x0022 && ele==0x0011) return "Stereo Baseline Displacement";
    if (grp==0x0022 && ele==0x0012) return "Stereo Horizontal Pixel Offset";
    if (grp==0x0022 && ele==0x0013) return "Stereo Vertical Pixel Offset";
    if (grp==0x0022 && ele==0x0014) return "Stereo Rotation";
    if (grp==0x0022 && ele==0x0015) return "Acquisition Device Type Code Sequence";
    if (grp==0x0022 && ele==0x0016) return "Illumination Type Code Sequence";
    if (grp==0x0022 && ele==0x0017) return "Light Path Filter Type Stack Code Sequence";
    if (grp==0x0022 && ele==0x0018) return "Image Path Filter Type Stack Code Sequence";
    if (grp==0x0022 && ele==0x0019) return "Lenses Code Sequence";
    if (grp==0x0022 && ele==0x001A) return "Channel Description Code Sequence";
    if (grp==0x0022 && ele==0x001B) return "Refractive State Sequence";
    if (grp==0x0022 && ele==0x001C) return "Mydriatic Agent Code Sequence";
    if (grp==0x0022 && ele==0x001D) return "Relative Image Position Code Sequence";
    if (grp==0x0022 && ele==0x001E) return "Camera Angle of View";
    if (grp==0x0022 && ele==0x0020) return "Stereo Pairs Sequence";
    if (grp==0x0022 && ele==0x0021) return "Left Image Sequence";
    if (grp==0x0022 && ele==0x0022) return "Right Image Sequence";
    if (grp==0x0022 && ele==0x0028) return "Stereo Pairs Present";
    if (grp==0x0022 && ele==0x0030) return "Axial Length of the Eye";
    if (grp==0x0022 && ele==0x0031) return "Ophthalmic Frame Location Sequence";
    if (grp==0x0022 && ele==0x0032) return "Reference Coordinates";
    if (grp==0x0022 && ele==0x0035) return "Depth Spatial Resolution";
    if (grp==0x0022 && ele==0x0036) return "Maximum Depth Distortion";
    if (grp==0x0022 && ele==0x0037) return "Along-scan Spatial Resolution";
    if (grp==0x0022 && ele==0x0038) return "Maximum Along-scan Distortion";
    if (grp==0x0022 && ele==0x0039) return "Ophthalmic Image Orientation";
    if (grp==0x0022 && ele==0x0041) return "Depth of Transverse Image";
    if (grp==0x0022 && ele==0x0042) return "Mydriatic Agent Concentration Units Sequence";
    if (grp==0x0022 && ele==0x0048) return "Across-scan Spatial Resolution";
    if (grp==0x0022 && ele==0x0049) return "Maximum Across-scan Distortion";
    if (grp==0x0022 && ele==0x004E) return "Mydriatic Agent Concentration";
    if (grp==0x0022 && ele==0x0055) return "Illumination Wave Length";
    if (grp==0x0022 && ele==0x0056) return "Illumination Power";
    if (grp==0x0022 && ele==0x0057) return "Illumination Bandwidth";
    if (grp==0x0022 && ele==0x0058) return "Mydriatic Agent Sequence";
    if (grp==0x0022 && ele==0x1007) return "Ophthalmic Axial Measurements Right Eye Sequence";
    if (grp==0x0022 && ele==0x1008) return "Ophthalmic Axial Measurements Left Eye Sequence";
    if (grp==0x0022 && ele==0x1009) return "Ophthalmic Axial Measurements Device Type";
    if (grp==0x0022 && ele==0x1010) return "Ophthalmic Axial Length Measurements Type";
    if (grp==0x0022 && ele==0x1012) return "Ophthalmic Axial Length Sequence";
    if (grp==0x0022 && ele==0x1019) return "Ophthalmic Axial Length";
    if (grp==0x0022 && ele==0x1024) return "Lens Status Code Sequence";
    if (grp==0x0022 && ele==0x1025) return "Vitreous Status Code Sequence";
    if (grp==0x0022 && ele==0x1028) return "IOL Formula Code Sequence";
    if (grp==0x0022 && ele==0x1029) return "IOL Formula Detail";
    if (grp==0x0022 && ele==0x1033) return "Keratometer Index";
    if (grp==0x0022 && ele==0x1035) return "Source of Ophthalmic Axial Length Code Sequence";
    if (grp==0x0022 && ele==0x1037) return "Target Refraction";
    if (grp==0x0022 && ele==0x1039) return "Refractive Procedure Occurred";
    if (grp==0x0022 && ele==0x1040) return "Refractive Surgery Type Code Sequence";
    if (grp==0x0022 && ele==0x1044) return "Ophthalmic Ultrasound Method Code Sequence";
    if (grp==0x0022 && ele==0x1050) return "Ophthalmic Axial Length Measurements Sequence";
    if (grp==0x0022 && ele==0x1053) return "IOL Power";
    if (grp==0x0022 && ele==0x1054) return "Predicted Refractive Error";
    if (grp==0x0022 && ele==0x1059) return "Ophthalmic Axial Length Velocity";
    if (grp==0x0022 && ele==0x1065) return "Lens Status Description";
    if (grp==0x0022 && ele==0x1066) return "Vitreous Status Description";
    if (grp==0x0022 && ele==0x1090) return "IOL Power Sequence";
    if (grp==0x0022 && ele==0x1092) return "Lens Constant Sequence";
    if (grp==0x0022 && ele==0x1093) return "IOL Manufacturer";
    if (grp==0x0022 && ele==0x1094) return "Lens Constant Description	Retired";
    if (grp==0x0022 && ele==0x1095) return "Implant Name";
    if (grp==0x0022 && ele==0x1096) return "Keratometry Measurement Type Code Sequence";
    if (grp==0x0022 && ele==0x1097) return "Implant Part Number";
    if (grp==0x0022 && ele==0x1100) return "Referenced Ophthalmic Axial Measurements Sequence";
    if (grp==0x0022 && ele==0x1101) return "Ophthalmic Axial Length Measurements Segment Name Code Sequence";
    if (grp==0x0022 && ele==0x1103) return "Refractive Error Before Refractive Surgery Code Sequence";
    if (grp==0x0022 && ele==0x1121) return "IOL Power For Exact Emmetropia";
    if (grp==0x0022 && ele==0x1122) return "IOL Power For Exact Target Refraction";
    if (grp==0x0022 && ele==0x1125) return "Anterior Chamber Depth Definition Code Sequence";
    if (grp==0x0022 && ele==0x1127) return "Lens Thickness Sequence";
    if (grp==0x0022 && ele==0x1128) return "Anterior Chamber Depth Sequence";
    if (grp==0x0022 && ele==0x1130) return "Lens Thickness";
    if (grp==0x0022 && ele==0x1131) return "Anterior Chamber Depth";
    if (grp==0x0022 && ele==0x1132) return "Source of Lens Thickness Data Code Sequence";
    if (grp==0x0022 && ele==0x1133) return "Source of Anterior Chamber Depth Data Code Sequence";
    if (grp==0x0022 && ele==0x1134) return "Source of Refractive Measurements Sequence";
    if (grp==0x0022 && ele==0x1135) return "Source of Refractive Measurements Code Sequence";
    if (grp==0x0022 && ele==0x1140) return "Ophthalmic Axial Length Measurement Modified";
    if (grp==0x0022 && ele==0x1150) return "Ophthalmic Axial Length Data Source Code Sequence";
    if (grp==0x0022 && ele==0x1153) return "Ophthalmic Axial Length Acquisition Method Code Sequence	Retired";
    if (grp==0x0022 && ele==0x1155) return "Signal to Noise Ratio";
    if (grp==0x0022 && ele==0x1159) return "Ophthalmic Axial Length Data Source Description";
    if (grp==0x0022 && ele==0x1210) return "Ophthalmic Axial Length Measurements Total Length Sequence";
    if (grp==0x0022 && ele==0x1211) return "Ophthalmic Axial Length Measurements Segmental Length Sequence";
    if (grp==0x0022 && ele==0x1212) return "Ophthalmic Axial Length Measurements Length Summation Sequence";
    if (grp==0x0022 && ele==0x1220) return "Ultrasound Ophthalmic Axial Length Measurements Sequence";
    if (grp==0x0022 && ele==0x1225) return "Optical Ophthalmic Axial Length Measurements Sequence";
    if (grp==0x0022 && ele==0x1230) return "Ultrasound Selected Ophthalmic Axial Length Sequence";
    if (grp==0x0022 && ele==0x1250) return "Ophthalmic Axial Length Selection Method Code Sequence";
    if (grp==0x0022 && ele==0x1255) return "Optical Selected Ophthalmic Axial Length Sequence";
    if (grp==0x0022 && ele==0x1257) return "Selected Segmental Ophthalmic Axial Length Sequence";
    if (grp==0x0022 && ele==0x1260) return "Selected Total Ophthalmic Axial Length Sequence";
    if (grp==0x0022 && ele==0x1262) return "Ophthalmic Axial Length Quality Metric Sequence";
    if (grp==0x0022 && ele==0x1265) return "Ophthalmic Axial Length Quality Metric Type Code Sequence	Retired";
    if (grp==0x0022 && ele==0x1273) return "Ophthalmic Axial Length Quality Metric Type Description	Retired";
    if (grp==0x0022 && ele==0x1300) return "Intraocular Lens Calculations Right Eye Sequence";
    if (grp==0x0022 && ele==0x1310) return "Intraocular Lens Calculations Left Eye Sequence";
    if (grp==0x0022 && ele==0x1330) return "Referenced Ophthalmic Axial Length Measurement QC Image Sequence";
    if (grp==0x0022 && ele==0x1415) return "Ophthalmic Mapping Device Type";
    if (grp==0x0022 && ele==0x1420) return "Acquisition Method Code Sequence";
    if (grp==0x0022 && ele==0x1423) return "Acquisition Method Algorithm Sequence";
    if (grp==0x0022 && ele==0x1436) return "Ophthalmic Thickness Map Type Code Sequence";
    if (grp==0x0022 && ele==0x1443) return "Ophthalmic Thickness Mapping Normals Sequence";
    if (grp==0x0022 && ele==0x1445) return "Retinal Thickness Definition Code Sequence";
    if (grp==0x0022 && ele==0x1450) return "Pixel Value Mapping to Coded Concept Sequence";
    if (grp==0x0022 && ele==0x1452) return "US or SS	Mapped Pixel Value";
    if (grp==0x0022 && ele==0x1454) return "Pixel Value Mapping Explanation";
    if (grp==0x0022 && ele==0x1458) return "Ophthalmic Thickness Map Quality Threshold Sequence";
    if (grp==0x0022 && ele==0x1460) return "Ophthalmic Thickness Map Threshold Quality Rating";
    if (grp==0x0022 && ele==0x1463) return "Anatomic Structure Reference Point";
    if (grp==0x0022 && ele==0x1465) return "Registration to Localizer Sequence";
    if (grp==0x0022 && ele==0x1466) return "Registered Localizer Units";
    if (grp==0x0022 && ele==0x1467) return "Registered Localizer Top Left Hand Corner";
    if (grp==0x0022 && ele==0x1468) return "Registered Localizer Bottom Right Hand Corner";
    if (grp==0x0022 && ele==0x1470) return "Ophthalmic Thickness Map Quality Rating Sequence";
    if (grp==0x0022 && ele==0x1472) return "Relevant OPT Attributes Sequence";
    if (grp==0x0022 && ele==0x1512) return "Transformation Method Code Sequence";
    if (grp==0x0022 && ele==0x1513) return "Transformation Algorithm Sequence";
    if (grp==0x0022 && ele==0x1515) return "Ophthalmic Axial Length Method";
    if (grp==0x0022 && ele==0x1517) return "Ophthalmic FOV";
    if (grp==0x0022 && ele==0x1518) return "Two Dimensional to Three Dimensional Map Sequence";
    if (grp==0x0022 && ele==0x1525) return "Wide Field Ophthalmic Photography Quality Rating Sequence";
    if (grp==0x0022 && ele==0x1526) return "Wide Field Ophthalmic Photography Quality Threshold Sequence";
    if (grp==0x0022 && ele==0x1527) return "Wide Field Ophthalmic Photography Threshold Quality Rating";
    if (grp==0x0022 && ele==0x1528) return "X Coordinates Center Pixel View Angle";
    if (grp==0x0022 && ele==0x1529) return "Y Coordinates Center Pixel View Angle";
    if (grp==0x0022 && ele==0x1530) return "Number of Map Points";
    if (grp==0x0022 && ele==0x1531) return "Two Dimensional to Three Dimensional Map Data";
    if (grp==0x0024 && ele==0x0010) return "Visual Field Horizontal Extent";
    if (grp==0x0024 && ele==0x0011) return "Visual Field Vertical Extent";
    if (grp==0x0024 && ele==0x0012) return "Visual Field Shape";
    if (grp==0x0024 && ele==0x0016) return "Screening Test Mode Code Sequence";
    if (grp==0x0024 && ele==0x0018) return "Maximum Stimulus Luminance";
    if (grp==0x0024 && ele==0x0020) return "Background Luminance";
    if (grp==0x0024 && ele==0x0021) return "Stimulus Color Code Sequence";
    if (grp==0x0024 && ele==0x0024) return "Background Illumination Color Code Sequence";
    if (grp==0x0024 && ele==0x0025) return "Stimulus Area";
    if (grp==0x0024 && ele==0x0028) return "Stimulus Presentation Time";
    if (grp==0x0024 && ele==0x0032) return "Fixation Sequence";
    if (grp==0x0024 && ele==0x0033) return "Fixation Monitoring Code Sequence";
    if (grp==0x0024 && ele==0x0034) return "Visual Field Catch Trial Sequence";
    if (grp==0x0024 && ele==0x0035) return "Fixation Checked Quantity";
    if (grp==0x0024 && ele==0x0036) return "Patient Not Properly Fixated Quantity";
    if (grp==0x0024 && ele==0x0037) return "Presented Visual Stimuli Data Flag";
    if (grp==0x0024 && ele==0x0038) return "Number of Visual Stimuli";
    if (grp==0x0024 && ele==0x0039) return "Excessive Fixation Losses Data Flag";
    if (grp==0x0024 && ele==0x0040) return "Excessive Fixation Losses";
    if (grp==0x0024 && ele==0x0042) return "Stimuli Retesting Quantity";
    if (grp==0x0024 && ele==0x0044) return "Comments on Patient's Performance of Visual Field";
    if (grp==0x0024 && ele==0x0045) return "False Negatives Estimate Flag";
    if (grp==0x0024 && ele==0x0046) return "False Negatives Estimate";
    if (grp==0x0024 && ele==0x0048) return "Negative Catch Trials Quantity";
    if (grp==0x0024 && ele==0x0050) return "False Negatives Quantity";
    if (grp==0x0024 && ele==0x0051) return "Excessive False Negatives Data Flag";
    if (grp==0x0024 && ele==0x0052) return "Excessive False Negatives";
    if (grp==0x0024 && ele==0x0053) return "False Positives Estimate Flag";
    if (grp==0x0024 && ele==0x0054) return "False Positives Estimate";
    if (grp==0x0024 && ele==0x0055) return "Catch Trials Data Flag";
    if (grp==0x0024 && ele==0x0056) return "Positive Catch Trials Quantity";
    if (grp==0x0024 && ele==0x0057) return "Test Point Normals Data Flag";
    if (grp==0x0024 && ele==0x0058) return "Test Point Normals Sequence";
    if (grp==0x0024 && ele==0x0059) return "Global Deviation Probability Normals Flag";
    if (grp==0x0024 && ele==0x0060) return "False Positives Quantity";
    if (grp==0x0024 && ele==0x0061) return "Excessive False Positives Data Flag";
    if (grp==0x0024 && ele==0x0062) return "Excessive False Positives";
    if (grp==0x0024 && ele==0x0063) return "Visual Field Test Normals Flag";
    if (grp==0x0024 && ele==0x0064) return "Results Normals Sequence";
    if (grp==0x0024 && ele==0x0065) return "Age Corrected Sensitivity Deviation Algorithm Sequence";
    if (grp==0x0024 && ele==0x0066) return "Global Deviation From Normal";
    if (grp==0x0024 && ele==0x0067) return "Generalized Defect Sensitivity Deviation Algorithm Sequence";
    if (grp==0x0024 && ele==0x0068) return "Localized Deviation From Normal";
    if (grp==0x0024 && ele==0x0069) return "Patient Reliability Indicator";
    if (grp==0x0024 && ele==0x0070) return "Visual Field Mean Sensitivity";
    if (grp==0x0024 && ele==0x0071) return "Global Deviation Probability";
    if (grp==0x0024 && ele==0x0072) return "Local Deviation Probability Normals Flag";
    if (grp==0x0024 && ele==0x0073) return "Localized Deviation Probability";
    if (grp==0x0024 && ele==0x0074) return "Short Term Fluctuation Calculated";
    if (grp==0x0024 && ele==0x0075) return "Short Term Fluctuation";
    if (grp==0x0024 && ele==0x0076) return "Short Term Fluctuation Probability Calculated";
    if (grp==0x0024 && ele==0x0077) return "Short Term Fluctuation Probability";
    if (grp==0x0024 && ele==0x0078) return "Corrected Localized Deviation From Normal Calculated";
    if (grp==0x0024 && ele==0x0079) return "Corrected Localized Deviation From Normal";
    if (grp==0x0024 && ele==0x0080) return "Corrected Localized Deviation From Normal Probability Calculated";
    if (grp==0x0024 && ele==0x0081) return "Corrected Localized Deviation From Normal Probability";
    if (grp==0x0024 && ele==0x0083) return "Global Deviation Probability Sequence";
    if (grp==0x0024 && ele==0x0085) return "Localized Deviation Probability Sequence";
    if (grp==0x0024 && ele==0x0086) return "Foveal Sensitivity Measured";
    if (grp==0x0024 && ele==0x0087) return "Foveal Sensitivity";
    if (grp==0x0024 && ele==0x0088) return "Visual Field Test Duration";
    if (grp==0x0024 && ele==0x0089) return "Visual Field Test Point Sequence";
    if (grp==0x0024 && ele==0x0090) return "Visual Field Test Point X-Coordinate";
    if (grp==0x0024 && ele==0x0091) return "Visual Field Test Point Y-Coordinate";
    if (grp==0x0024 && ele==0x0092) return "Age Corrected Sensitivity Deviation Value";
    if (grp==0x0024 && ele==0x0093) return "Stimulus Results";
    if (grp==0x0024 && ele==0x0094) return "Sensitivity Value";
    if (grp==0x0024 && ele==0x0095) return "Retest Stimulus Seen";
    if (grp==0x0024 && ele==0x0096) return "Retest Sensitivity Value";
    if (grp==0x0024 && ele==0x0097) return "Visual Field Test Point Normals Sequence";
    if (grp==0x0024 && ele==0x0098) return "Quantified Defect";
    if (grp==0x0024 && ele==0x0100) return "Age Corrected Sensitivity Deviation Probability Value";
    if (grp==0x0024 && ele==0x0102) return "Generalized Defect Corrected Sensitivity Deviation Flag";
    if (grp==0x0024 && ele==0x0103) return "Generalized Defect Corrected Sensitivity Deviation Value";
    if (grp==0x0024 && ele==0x0104) return "Generalized Defect Corrected Sensitivity Deviation Probability Value";
    if (grp==0x0024 && ele==0x0105) return "Minimum Sensitivity Value";
    if (grp==0x0024 && ele==0x0106) return "Blind Spot Localized";
    if (grp==0x0024 && ele==0x0107) return "Blind Spot X-Coordinate";
    if (grp==0x0024 && ele==0x0108) return "Blind Spot Y-Coordinate";
    if (grp==0x0024 && ele==0x0110) return "Visual Acuity Measurement Sequence";
    if (grp==0x0024 && ele==0x0112) return "Refractive Parameters Used on Patient Sequence";
    if (grp==0x0024 && ele==0x0113) return "Measurement Laterality";
    if (grp==0x0024 && ele==0x0114) return "Ophthalmic Patient Clinical Information Left Eye Sequence";
    if (grp==0x0024 && ele==0x0115) return "Ophthalmic Patient Clinical Information Right Eye Sequence";
    if (grp==0x0024 && ele==0x0117) return "Foveal Point Normative Data Flag";
    if (grp==0x0024 && ele==0x0118) return "Foveal Point Probability Value";
    if (grp==0x0024 && ele==0x0120) return "Screening Baseline Measured";
    if (grp==0x0024 && ele==0x0122) return "Screening Baseline Measured Sequence";
    if (grp==0x0024 && ele==0x0124) return "Screening Baseline Type";
    if (grp==0x0024 && ele==0x0126) return "Screening Baseline Value";
    if (grp==0x0024 && ele==0x0202) return "Algorithm Source";
    if (grp==0x0024 && ele==0x0306) return "Data Set Name";
    if (grp==0x0024 && ele==0x0307) return "Data Set Version";
    if (grp==0x0024 && ele==0x0308) return "Data Set Source";
    if (grp==0x0024 && ele==0x0309) return "Data Set Description";
    if (grp==0x0024 && ele==0x0317) return "Visual Field Test Reliability Global Index Sequence";
    if (grp==0x0024 && ele==0x0320) return "Visual Field Global Results Index Sequence";
    if (grp==0x0024 && ele==0x0325) return "Data Observation Sequence";
    if (grp==0x0024 && ele==0x0338) return "Index Normals Flag";
    if (grp==0x0024 && ele==0x0341) return "Index Probability";
    if (grp==0x0024 && ele==0x0344) return "Index Probability Sequence";
    if (grp==0x0028 && ele==0x0002) return "Samples per Pixel";
    if (grp==0x0028 && ele==0x0003) return "Samples per Pixel Used";
    if (grp==0x0028 && ele==0x0004) return "Photometric Interpretation";
    if (grp==0x0028 && ele==0x0005) return "Image Dimensions	Retired";
    if (grp==0x0028 && ele==0x0006) return "Planar Configuration";
    if (grp==0x0028 && ele==0x0008) return "Number of Frames";
    if (grp==0x0028 && ele==0x0009) return "Frame Increment Pointer";
    if (grp==0x0028 && ele==0x000A) return "Frame Dimension Pointer";
    if (grp==0x0028 && ele==0x0010) return "Rows";
    if (grp==0x0028 && ele==0x0011) return "Columns";
    if (grp==0x0028 && ele==0x0012) return "Planes	Retired";
    if (grp==0x0028 && ele==0x0014) return "Ultrasound Color Data Present";
    if (grp==0x0028 && ele==0x0020) return "		Retired";
    if (grp==0x0028 && ele==0x0030) return "Pixel Spacing";
    if (grp==0x0028 && ele==0x0031) return "Zoom Factor";
    if (grp==0x0028 && ele==0x0032) return "Zoom Center";
    if (grp==0x0028 && ele==0x0034) return "Pixel Aspect Ratio";
    if (grp==0x0028 && ele==0x0040) return "Image Format	Retired";
    if (grp==0x0028 && ele==0x0050) return "Manipulated Image	Retired";
    if (grp==0x0028 && ele==0x0051) return "Corrected Image";
    if (grp==0x0028 && ele==0x005F) return "Compression Recognition Code	Retired";
    if (grp==0x0028 && ele==0x0060) return "Compression Code	Retired";
    if (grp==0x0028 && ele==0x0061) return "Compression Originator	Retired";
    if (grp==0x0028 && ele==0x0062) return "Compression Label	Retired";
    if (grp==0x0028 && ele==0x0063) return "Compression Description	Retired";
    if (grp==0x0028 && ele==0x0065) return "Compression Sequence	Retired";
    if (grp==0x0028 && ele==0x0066) return "Compression Step Pointers	Retired";
    if (grp==0x0028 && ele==0x0068) return "Repeat Interval	Retired";
    if (grp==0x0028 && ele==0x0069) return "Bits Grouped	Retired";
    if (grp==0x0028 && ele==0x0070) return "Perimeter Table	Retired";
    if (grp==0x0028 && ele==0x0071) return "US or SS	Perimeter Value	Retired";
    if (grp==0x0028 && ele==0x0080) return "Predictor Rows	Retired";
    if (grp==0x0028 && ele==0x0081) return "Predictor Columns	Retired";
    if (grp==0x0028 && ele==0x0082) return "Predictor Constants	Retired";
    if (grp==0x0028 && ele==0x0090) return "Blocked Pixels	Retired";
    if (grp==0x0028 && ele==0x0091) return "Block Rows	Retired";
    if (grp==0x0028 && ele==0x0092) return "Block Columns	Retired";
    if (grp==0x0028 && ele==0x0093) return "Row Overlap	Retired";
    if (grp==0x0028 && ele==0x0094) return "Column Overlap	Retired";
    if (grp==0x0028 && ele==0x0100) return "Bits Allocated";
    if (grp==0x0028 && ele==0x0101) return "Bits Stored";
    if (grp==0x0028 && ele==0x0102) return "High Bit";
    if (grp==0x0028 && ele==0x0103) return "Pixel Representation";
    if (grp==0x0028 && ele==0x0104) return "US or SS	Smallest Valid Pixel Value	Retired";
    if (grp==0x0028 && ele==0x0105) return "US or SS	Largest Valid Pixel Value	Retired";
    if (grp==0x0028 && ele==0x0106) return "US or SS	Smallest Image Pixel Value";
    if (grp==0x0028 && ele==0x0107) return "US or SS	Largest Image Pixel Value";
    if (grp==0x0028 && ele==0x0108) return "US or SS	Smallest Pixel Value in Series";
    if (grp==0x0028 && ele==0x0109) return "US or SS	Largest Pixel Value in Series";
    if (grp==0x0028 && ele==0x0110) return "US or SS	Smallest Image Pixel Value in Plane	Retired";
    if (grp==0x0028 && ele==0x0111) return "US or SS	Largest Image Pixel Value in Plane	Retired";
    if (grp==0x0028 && ele==0x0120) return "US or SS	Pixel Padding Value";
    if (grp==0x0028 && ele==0x0121) return "US or SS	Pixel Padding Range Limit";
    if (grp==0x0028 && ele==0x0122) return "Float Pixel Padding Value";
    if (grp==0x0028 && ele==0x0123) return "Double Float Pixel Padding Value";
    if (grp==0x0028 && ele==0x0124) return "Float Pixel Padding Range Limit";
    if (grp==0x0028 && ele==0x0125) return "Double Float Pixel Padding Range Limit";
    if (grp==0x0028 && ele==0x0200) return "Image Location	Retired";
    if (grp==0x0028 && ele==0x0300) return "Quality Control Image";
    if (grp==0x0028 && ele==0x0301) return "Burned In Annotation";
    if (grp==0x0028 && ele==0x0302) return "Recognizable Visual Features";
    if (grp==0x0028 && ele==0x0303) return "Longitudinal Temporal Information Modified";
    if (grp==0x0028 && ele==0x0304) return "Referenced Color Palette Instance UID";
    if (grp==0x0028 && ele==0x0400) return "Transform Label	Retired";
    if (grp==0x0028 && ele==0x0401) return "Transform Version Number	Retired";
    if (grp==0x0028 && ele==0x0402) return "Number of Transform Steps	Retired";
    if (grp==0x0028 && ele==0x0403) return "Sequence of Compressed Data	Retired";
    if (grp==0x0028 && ele==0x0404) return "Details of Coefficients	Retired";
    if (grp==0x0028 && ele==0x0700) return "DCT Label	Retired";
    if (grp==0x0028 && ele==0x0701) return "Data Block Description	Retired";
    if (grp==0x0028 && ele==0x0702) return "Data Block	Retired";
    if (grp==0x0028 && ele==0x0710) return "Normalization Factor Format	Retired";
    if (grp==0x0028 && ele==0x0720) return "Zonal Map Number Format	Retired";
    if (grp==0x0028 && ele==0x0721) return "Zonal Map Location	Retired";
    if (grp==0x0028 && ele==0x0722) return "Zonal Map Format	Retired";
    if (grp==0x0028 && ele==0x0730) return "Adaptive Map Format	Retired";
    if (grp==0x0028 && ele==0x0740) return "Code Number Format	Retired";
    if (grp==0x0028 && ele==0x0A02) return "Pixel Spacing Calibration Type";
    if (grp==0x0028 && ele==0x0A04) return "Pixel Spacing Calibration Description";
    if (grp==0x0028 && ele==0x1040) return "Pixel Intensity Relationship";
    if (grp==0x0028 && ele==0x1041) return "Pixel Intensity Relationship Sign";
    if (grp==0x0028 && ele==0x1050) return "Window Center";
    if (grp==0x0028 && ele==0x1051) return "Window Width";
    if (grp==0x0028 && ele==0x1052) return "Rescale Intercept";
    if (grp==0x0028 && ele==0x1053) return "Rescale Slope";
    if (grp==0x0028 && ele==0x1054) return "Rescale Type";
    if (grp==0x0028 && ele==0x1055) return "Window Center & Width Explanation";
    if (grp==0x0028 && ele==0x1056) return "VOI LUT Function";
    if (grp==0x0028 && ele==0x1080) return "Gray Scale	Retired";
    if (grp==0x0028 && ele==0x1090) return "Recommended Viewing Mode";
    if (grp==0x0028 && ele==0x1100) return "US or SS	Gray Lookup Table Descriptor	Retired";
    if (grp==0x0028 && ele==0x1101) return "US or SS	Red Palette Color Lookup Table Descriptor";
    if (grp==0x0028 && ele==0x1102) return "US or SS	Green Palette Color Lookup Table Descriptor";
    if (grp==0x0028 && ele==0x1103) return "US or SS	Blue Palette Color Lookup Table Descriptor";
    if (grp==0x0028 && ele==0x1104) return "Alpha Palette Color Lookup Table Descriptor";
    if (grp==0x0028 && ele==0x1111) return "US or SS	Large Red Palette Color Lookup Table Descriptor	Retired";
    if (grp==0x0028 && ele==0x1112) return "US or SS	Large Green Palette Color Lookup Table Descriptor	Retired";
    if (grp==0x0028 && ele==0x1113) return "US or SS	Large Blue Palette Color Lookup Table Descriptor	Retired";
    if (grp==0x0028 && ele==0x1199) return "Palette Color Lookup Table UID";
    if (grp==0x0028 && ele==0x1200) return "US or SS or OW	Gray Lookup Table Data	Retired";
    if (grp==0x0028 && ele==0x1201) return "Red Palette Color Lookup Table Data";
    if (grp==0x0028 && ele==0x1202) return "Green Palette Color Lookup Table Data";
    if (grp==0x0028 && ele==0x1203) return "Blue Palette Color Lookup Table Data";
    if (grp==0x0028 && ele==0x1204) return "Alpha Palette Color Lookup Table Data";
    if (grp==0x0028 && ele==0x1211) return "Large Red Palette Color Lookup Table Data	Retired";
    if (grp==0x0028 && ele==0x1212) return "Large Green Palette Color Lookup Table Data	Retired";
    if (grp==0x0028 && ele==0x1213) return "Large Blue Palette Color Lookup Table Data	Retired";
    if (grp==0x0028 && ele==0x1214) return "Large Palette Color Lookup Table UID	Retired";
    if (grp==0x0028 && ele==0x1221) return "Segmented Red Palette Color Lookup Table Data";
    if (grp==0x0028 && ele==0x1222) return "Segmented Green Palette Color Lookup Table Data";
    if (grp==0x0028 && ele==0x1223) return "Segmented Blue Palette Color Lookup Table Data";
    if (grp==0x0028 && ele==0x1224) return "Segmented Alpha Palette Color Lookup Table Data";
    if (grp==0x0028 && ele==0x1300) return "Breast Implant Present";
    if (grp==0x0028 && ele==0x1350) return "Partial View";
    if (grp==0x0028 && ele==0x1351) return "Partial View Description";
    if (grp==0x0028 && ele==0x1352) return "Partial View Code Sequence";
    if (grp==0x0028 && ele==0x135A) return "Spatial Locations Preserved";
    if (grp==0x0028 && ele==0x1401) return "Data Frame Assignment Sequence";
    if (grp==0x0028 && ele==0x1402) return "Data Path Assignment";
    if (grp==0x0028 && ele==0x1403) return "Bits Mapped to Color Lookup Table";
    if (grp==0x0028 && ele==0x1404) return "Blending LUT 1 Sequence";
    if (grp==0x0028 && ele==0x1405) return "Blending LUT 1 Transfer Function";
    if (grp==0x0028 && ele==0x1406) return "Blending Weight Constant";
    if (grp==0x0028 && ele==0x1407) return "Blending Lookup Table Descriptor";
    if (grp==0x0028 && ele==0x1408) return "Blending Lookup Table Data";
    if (grp==0x0028 && ele==0x140B) return "Enhanced Palette Color Lookup Table Sequence";
    if (grp==0x0028 && ele==0x140C) return "Blending LUT 2 Sequence";
    if (grp==0x0028 && ele==0x140D) return "Blending LUT 2 Transfer Function";
    if (grp==0x0028 && ele==0x140E) return "Data Path ID";
    if (grp==0x0028 && ele==0x140F) return "RGB LUT Transfer Function";
    if (grp==0x0028 && ele==0x1410) return "Alpha LUT Transfer Function";
    if (grp==0x0028 && ele==0x2000) return "ICC Profile";
    if (grp==0x0028 && ele==0x2002) return "Color Space";
    if (grp==0x0028 && ele==0x2110) return "Lossy Image Compression";
    if (grp==0x0028 && ele==0x2112) return "Lossy Image Compression Ratio";
    if (grp==0x0028 && ele==0x2114) return "Lossy Image Compression Method";
    if (grp==0x0028 && ele==0x3000) return "Modality LUT Sequence";
    if (grp==0x0028 && ele==0x3002) return "US or SS	LUT Descriptor";
    if (grp==0x0028 && ele==0x3003) return "LUT Explanation";
    if (grp==0x0028 && ele==0x3004) return "Modality LUT Type";
    if (grp==0x0028 && ele==0x3006) return "US or OW	LUT Data";
    if (grp==0x0028 && ele==0x3010) return "VOI LUT Sequence";
    if (grp==0x0028 && ele==0x3110) return "Softcopy VOI LUT Sequence";
    if (grp==0x0028 && ele==0x4000) return "Image Presentation Comments	Retired";
    if (grp==0x0028 && ele==0x5000) return "Bi-Plane Acquisition Sequence	Retired";
    if (grp==0x0028 && ele==0x6010) return "Representative Frame Number";
    if (grp==0x0028 && ele==0x6020) return "Frame Numbers of Interest (FOI)";
    if (grp==0x0028 && ele==0x6022) return "Frame of Interest Description";
    if (grp==0x0028 && ele==0x6023) return "Frame of Interest Type";
    if (grp==0x0028 && ele==0x6030) return "Mask Pointer(s)	Retired";
    if (grp==0x0028 && ele==0x6040) return "R Wave Pointer";
    if (grp==0x0028 && ele==0x6100) return "Mask Subtraction Sequence";
    if (grp==0x0028 && ele==0x6101) return "Mask Operation";
    if (grp==0x0028 && ele==0x6102) return "Applicable Frame Range";
    if (grp==0x0028 && ele==0x6110) return "Mask Frame Numbers";
    if (grp==0x0028 && ele==0x6112) return "Contrast Frame Averaging";
    if (grp==0x0028 && ele==0x6114) return "Mask Sub-pixel Shift";
    if (grp==0x0028 && ele==0x6120) return "TID Offset";
    if (grp==0x0028 && ele==0x6190) return "Mask Operation Explanation";
    if (grp==0x0028 && ele==0x7000) return "Equipment Administrator Sequence";
    if (grp==0x0028 && ele==0x7001) return "Number of Display Subsystems";
    if (grp==0x0028 && ele==0x7002) return "Current Configuration ID";
    if (grp==0x0028 && ele==0x7003) return "Display Subsystem ID";
    if (grp==0x0028 && ele==0x7004) return "Display Subsystem Name";
    if (grp==0x0028 && ele==0x7005) return "Display Subsystem Description";
    if (grp==0x0028 && ele==0x7006) return "System Status";
    if (grp==0x0028 && ele==0x7007) return "System Status Comment";
    if (grp==0x0028 && ele==0x7008) return "Target Luminance Characteristics Sequence";
    if (grp==0x0028 && ele==0x7009) return "Luminance Characteristics ID";
    if (grp==0x0028 && ele==0x700A) return "Display Subsystem Configuration Sequence";
    if (grp==0x0028 && ele==0x700B) return "Configuration ID";
    if (grp==0x0028 && ele==0x700C) return "Configuration Name";
    if (grp==0x0028 && ele==0x700D) return "Configuration Description";
    if (grp==0x0028 && ele==0x700E) return "Referenced Target Luminance Characteristics ID";
    if (grp==0x0028 && ele==0x700F) return "QA Results Sequence";
    if (grp==0x0028 && ele==0x7010) return "Display Subsystem QA Results Sequence";
    if (grp==0x0028 && ele==0x7011) return "Configuration QA Results Sequence";
    if (grp==0x0028 && ele==0x7012) return "Measurement Equipment Sequence";
    if (grp==0x0028 && ele==0x7013) return "Measurement Functions";
    if (grp==0x0028 && ele==0x7014) return "Measurement Equipment Type";
    if (grp==0x0028 && ele==0x7015) return "Visual Evaluation Result Sequence";
    if (grp==0x0028 && ele==0x7016) return "Display Calibration Result Sequence";
    if (grp==0x0028 && ele==0x7017) return "DDL Value";
    if (grp==0x0028 && ele==0x7018) return "CIExy White Point";
    if (grp==0x0028 && ele==0x7019) return "Display Function Type";
    if (grp==0x0028 && ele==0x701A) return "Gamma Value";
    if (grp==0x0028 && ele==0x701B) return "Number of Luminance Points";
    if (grp==0x0028 && ele==0x701C) return "Luminance Response Sequence";
    if (grp==0x0028 && ele==0x701D) return "Target Minimum Luminance";
    if (grp==0x0028 && ele==0x701E) return "Target Maximum Luminance";
    if (grp==0x0028 && ele==0x701F) return "Luminance Value";
    if (grp==0x0028 && ele==0x7020) return "Luminance Response Description";
    if (grp==0x0028 && ele==0x7021) return "White Point Flag";
    if (grp==0x0028 && ele==0x7022) return "Display Device Type Code Sequence";
    if (grp==0x0028 && ele==0x7023) return "Display Subsystem Sequence";
    if (grp==0x0028 && ele==0x7024) return "Luminance Result Sequence";
    if (grp==0x0028 && ele==0x7025) return "Ambient Light Value Source";
    if (grp==0x0028 && ele==0x7026) return "Measured Characteristics";
    if (grp==0x0028 && ele==0x7027) return "Luminance Uniformity Result Sequence";
    if (grp==0x0028 && ele==0x7028) return "Visual Evaluation Test Sequence";
    if (grp==0x0028 && ele==0x7029) return "Test Result";
    if (grp==0x0028 && ele==0x702A) return "Test Result Comment";
    if (grp==0x0028 && ele==0x702B) return "Test Image Validation";
    if (grp==0x0028 && ele==0x702C) return "Test Pattern Code Sequence";
    if (grp==0x0028 && ele==0x702D) return "Measurement Pattern Code Sequence";
    if (grp==0x0028 && ele==0x702E) return "Visual Evaluation Method Code Sequence";
    if (grp==0x0028 && ele==0x7FE0) return "Pixel Data Provider URL";
    if (grp==0x0028 && ele==0x9001) return "Data Point Rows";
    if (grp==0x0028 && ele==0x9002) return "Data Point Columns";
    if (grp==0x0028 && ele==0x9003) return "Signal Domain Columns";
    if (grp==0x0028 && ele==0x9099) return "Largest Monochrome Pixel Value	Retired";
    if (grp==0x0028 && ele==0x9108) return "Data Representation";
    if (grp==0x0028 && ele==0x9110) return "Pixel Measures Sequence";
    if (grp==0x0028 && ele==0x9132) return "Frame VOI LUT Sequence";
    if (grp==0x0028 && ele==0x9145) return "Pixel Value Transformation Sequence";
    if (grp==0x0028 && ele==0x9235) return "Signal Domain Rows";
    if (grp==0x0028 && ele==0x9411) return "Display Filter Percentage";
    if (grp==0x0028 && ele==0x9415) return "Frame Pixel Shift Sequence";
    if (grp==0x0028 && ele==0x9416) return "Subtraction Item ID";
    if (grp==0x0028 && ele==0x9422) return "Pixel Intensity Relationship LUT Sequence";
    if (grp==0x0028 && ele==0x9443) return "Frame Pixel Data Properties Sequence";
    if (grp==0x0028 && ele==0x9444) return "Geometrical Properties";
    if (grp==0x0028 && ele==0x9445) return "Geometric Maximum Distortion";
    if (grp==0x0028 && ele==0x9446) return "Image Processing Applied";
    if (grp==0x0028 && ele==0x9454) return "Mask Selection Mode";
    if (grp==0x0028 && ele==0x9474) return "LUT Function";
    if (grp==0x0028 && ele==0x9478) return "Mask Visibility Percentage";
    if (grp==0x0028 && ele==0x9501) return "Pixel Shift Sequence";
    if (grp==0x0028 && ele==0x9502) return "Region Pixel Shift Sequence";
    if (grp==0x0028 && ele==0x9503) return "Vertices of the Region";
    if (grp==0x0028 && ele==0x9505) return "Multi-frame Presentation Sequence";
    if (grp==0x0028 && ele==0x9506) return "Pixel Shift Frame Range";
    if (grp==0x0028 && ele==0x9507) return "LUT Frame Range";
    if (grp==0x0028 && ele==0x9520) return "Image to Equipment Mapping Matrix";
    if (grp==0x0028 && ele==0x9537) return "Equipment Coordinate System Identification";
    if (grp==0x0032 && ele==0x000A) return "Study Status ID	Retired";
    if (grp==0x0032 && ele==0x000C) return "Study Priority ID	Retired";
    if (grp==0x0032 && ele==0x0012) return "Study ID Issuer	Retired";
    if (grp==0x0032 && ele==0x0032) return "Study Verified Date	Retired";
    if (grp==0x0032 && ele==0x0033) return "Study Verified Time	Retired";
    if (grp==0x0032 && ele==0x0034) return "Study Read Date	Retired";
    if (grp==0x0032 && ele==0x0035) return "Study Read Time	Retired";
    if (grp==0x0032 && ele==0x1000) return "Scheduled Study Start Date	Retired";
    if (grp==0x0032 && ele==0x1001) return "Scheduled Study Start Time	Retired";
    if (grp==0x0032 && ele==0x1010) return "Scheduled Study Stop Date	Retired";
    if (grp==0x0032 && ele==0x1011) return "Scheduled Study Stop Time	Retired";
    if (grp==0x0032 && ele==0x1020) return "Scheduled Study Location	Retired";
    if (grp==0x0032 && ele==0x1021) return "Scheduled Study Location AE Title	Retired";
    if (grp==0x0032 && ele==0x1030) return "Reason for Study	Retired";
    if (grp==0x0032 && ele==0x1031) return "Requesting Physician Identification Sequence";
    if (grp==0x0032 && ele==0x1032) return "Requesting Physician";
    if (grp==0x0032 && ele==0x1033) return "Requesting Service";
    if (grp==0x0032 && ele==0x1034) return "Requesting Service Code Sequence";
    if (grp==0x0032 && ele==0x1040) return "Study Arrival Date	Retired";
    if (grp==0x0032 && ele==0x1041) return "Study Arrival Time	Retired";
    if (grp==0x0032 && ele==0x1050) return "Study Completion Date	Retired";
    if (grp==0x0032 && ele==0x1051) return "Study Completion Time	Retired";
    if (grp==0x0032 && ele==0x1055) return "Study Component Status ID	Retired";
    if (grp==0x0032 && ele==0x1060) return "Requested Procedure Description";
    if (grp==0x0032 && ele==0x1064) return "Requested Procedure Code Sequence";
    if (grp==0x0032 && ele==0x1070) return "Requested Contrast Agent";
    if (grp==0x0032 && ele==0x4000) return "Study Comments	Retired";
    if (grp==0x0038 && ele==0x0004) return "Referenced Patient Alias Sequence";
    if (grp==0x0038 && ele==0x0008) return "Visit Status ID";
    if (grp==0x0038 && ele==0x0010) return "Admission ID";
    if (grp==0x0038 && ele==0x0011) return "Issuer of Admission ID	Retired";
    if (grp==0x0038 && ele==0x0014) return "Issuer of Admission ID Sequence";
    if (grp==0x0038 && ele==0x0016) return "Route of Admissions";
    if (grp==0x0038 && ele==0x001A) return "Scheduled Admission Date	Retired";
    if (grp==0x0038 && ele==0x001B) return "Scheduled Admission Time	Retired";
    if (grp==0x0038 && ele==0x001C) return "Scheduled Discharge Date	Retired";
    if (grp==0x0038 && ele==0x001D) return "Scheduled Discharge Time	Retired";
    if (grp==0x0038 && ele==0x001E) return "Scheduled Patient Institution Residence	Retired";
    if (grp==0x0038 && ele==0x0020) return "Admitting Date";
    if (grp==0x0038 && ele==0x0021) return "Admitting Time";
    if (grp==0x0038 && ele==0x0030) return "Discharge Date	Retired";
    if (grp==0x0038 && ele==0x0032) return "Discharge Time	Retired";
    if (grp==0x0038 && ele==0x0040) return "Discharge Diagnosis Description	Retired";
    if (grp==0x0038 && ele==0x0044) return "Discharge Diagnosis Code Sequence	Retired";
    if (grp==0x0038 && ele==0x0050) return "Special Needs";
    if (grp==0x0038 && ele==0x0060) return "Service Episode ID";
    if (grp==0x0038 && ele==0x0061) return "Issuer of Service Episode ID	Retired";
    if (grp==0x0038 && ele==0x0062) return "Service Episode Description";
    if (grp==0x0038 && ele==0x0064) return "Issuer of Service Episode ID Sequence";
    if (grp==0x0038 && ele==0x0100) return "Pertinent Documents Sequence";
    if (grp==0x0038 && ele==0x0101) return "Pertinent Resources Sequence";
    if (grp==0x0038 && ele==0x0102) return "Resource Description";
    if (grp==0x0038 && ele==0x0300) return "Current Patient Location";
    if (grp==0x0038 && ele==0x0400) return "Patient's Institution Residence";
    if (grp==0x0038 && ele==0x0500) return "Patient State";
    if (grp==0x0038 && ele==0x0502) return "Patient Clinical Trial Participation Sequence";
    if (grp==0x0038 && ele==0x4000) return "Visit Comments";
    if (grp==0x003A && ele==0x0004) return "Waveform Originality";
    if (grp==0x003A && ele==0x0005) return "Number of Waveform Channels";
    if (grp==0x003A && ele==0x0010) return "Number of Waveform Samples";
    if (grp==0x003A && ele==0x001A) return "Sampling Frequency";
    if (grp==0x003A && ele==0x0020) return "Multiplex Group Label";
    if (grp==0x003A && ele==0x0200) return "Channel Definition Sequence";
    if (grp==0x003A && ele==0x0202) return "Waveform Channel Number";
    if (grp==0x003A && ele==0x0203) return "Channel Label";
    if (grp==0x003A && ele==0x0205) return "Channel Status";
    if (grp==0x003A && ele==0x0208) return "Channel Source Sequence";
    if (grp==0x003A && ele==0x0209) return "Channel Source Modifiers Sequence";
    if (grp==0x003A && ele==0x020A) return "Source Waveform Sequence";
    if (grp==0x003A && ele==0x020C) return "Channel Derivation Description";
    if (grp==0x003A && ele==0x0210) return "Channel Sensitivity";
    if (grp==0x003A && ele==0x0211) return "Channel Sensitivity Units Sequence";
    if (grp==0x003A && ele==0x0212) return "Channel Sensitivity Correction Factor";
    if (grp==0x003A && ele==0x0213) return "Channel Baseline";
    if (grp==0x003A && ele==0x0214) return "Channel Time Skew";
    if (grp==0x003A && ele==0x0215) return "Channel Sample Skew";
    if (grp==0x003A && ele==0x0218) return "Channel Offset";
    if (grp==0x003A && ele==0x021A) return "Waveform Bits Stored";
    if (grp==0x003A && ele==0x0220) return "Filter Low Frequency";
    if (grp==0x003A && ele==0x0221) return "Filter High Frequency";
    if (grp==0x003A && ele==0x0222) return "Notch Filter Frequency";
    if (grp==0x003A && ele==0x0223) return "Notch Filter Bandwidth";
    if (grp==0x003A && ele==0x0230) return "Waveform Data Display Scale";
    if (grp==0x003A && ele==0x0231) return "Waveform Display Background CIELab Value";
    if (grp==0x003A && ele==0x0240) return "Waveform Presentation Group Sequence";
    if (grp==0x003A && ele==0x0241) return "Presentation Group Number";
    if (grp==0x003A && ele==0x0242) return "Channel Display Sequence";
    if (grp==0x003A && ele==0x0244) return "Channel Recommended Display CIELab Value";
    if (grp==0x003A && ele==0x0245) return "Channel Position";
    if (grp==0x003A && ele==0x0246) return "Display Shading Flag";
    if (grp==0x003A && ele==0x0247) return "Fractional Channel Display Scale";
    if (grp==0x003A && ele==0x0248) return "Absolute Channel Display Scale";
    if (grp==0x003A && ele==0x0300) return "Multiplexed Audio Channels Description Code Sequence";
    if (grp==0x003A && ele==0x0301) return "Channel Identification Code";
    if (grp==0x003A && ele==0x0302) return "Channel Mode";
    if (grp==0x0040 && ele==0x0001) return "Scheduled Station AE Title";
    if (grp==0x0040 && ele==0x0002) return "Scheduled Procedure Step Start Date";
    if (grp==0x0040 && ele==0x0003) return "Scheduled Procedure Step Start Time";
    if (grp==0x0040 && ele==0x0004) return "Scheduled Procedure Step End Date";
    if (grp==0x0040 && ele==0x0005) return "Scheduled Procedure Step End Time";
    if (grp==0x0040 && ele==0x0006) return "Scheduled Performing Physician's Name";
    if (grp==0x0040 && ele==0x0007) return "Scheduled Procedure Step Description";
    if (grp==0x0040 && ele==0x0008) return "Scheduled Protocol Code Sequence";
    if (grp==0x0040 && ele==0x0009) return "Scheduled Procedure Step ID";
    if (grp==0x0040 && ele==0x000A) return "Stage Code Sequence";
    if (grp==0x0040 && ele==0x000B) return "Scheduled Performing Physician Identification Sequence";
    if (grp==0x0040 && ele==0x0010) return "Scheduled Station Name";
    if (grp==0x0040 && ele==0x0011) return "Scheduled Procedure Step Location";
    if (grp==0x0040 && ele==0x0012) return "Pre-Medication";
    if (grp==0x0040 && ele==0x0020) return "Scheduled Procedure Step Status";
    if (grp==0x0040 && ele==0x0026) return "Order Placer Identifier Sequence";
    if (grp==0x0040 && ele==0x0027) return "Order Filler Identifier Sequence";
    if (grp==0x0040 && ele==0x0031) return "Local Namespace Entity ID";
    if (grp==0x0040 && ele==0x0032) return "Universal Entity ID";
    if (grp==0x0040 && ele==0x0033) return "Universal Entity ID Type";
    if (grp==0x0040 && ele==0x0035) return "Identifier Type Code";
    if (grp==0x0040 && ele==0x0036) return "Assigning Facility Sequence";
    if (grp==0x0040 && ele==0x0039) return "Assigning Jurisdiction Code Sequence";
    if (grp==0x0040 && ele==0x003A) return "Assigning Agency or Department Code Sequence";
    if (grp==0x0040 && ele==0x0100) return "Scheduled Procedure Step Sequence";
    if (grp==0x0040 && ele==0x0220) return "Referenced Non-Image Composite SOP Instance Sequence";
    if (grp==0x0040 && ele==0x0241) return "Performed Station AE Title";
    if (grp==0x0040 && ele==0x0242) return "Performed Station Name";
    if (grp==0x0040 && ele==0x0243) return "Performed Location";
    if (grp==0x0040 && ele==0x0244) return "Performed Procedure Step Start Date";
    if (grp==0x0040 && ele==0x0245) return "Performed Procedure Step Start Time";
    if (grp==0x0040 && ele==0x0250) return "Performed Procedure Step End Date";
    if (grp==0x0040 && ele==0x0251) return "Performed Procedure Step End Time";
    if (grp==0x0040 && ele==0x0252) return "Performed Procedure Step Status";
    if (grp==0x0040 && ele==0x0253) return "Performed Procedure Step ID";
    if (grp==0x0040 && ele==0x0254) return "Performed Procedure Step Description";
    if (grp==0x0040 && ele==0x0255) return "Performed Procedure Type Description";
    if (grp==0x0040 && ele==0x0260) return "Performed Protocol Code Sequence";
    if (grp==0x0040 && ele==0x0261) return "Performed Protocol Type";
    if (grp==0x0040 && ele==0x0270) return "Scheduled Step Attributes Sequence";
    if (grp==0x0040 && ele==0x0275) return "Request Attributes Sequence";
    if (grp==0x0040 && ele==0x0280) return "Comments on the Performed Procedure Step";
    if (grp==0x0040 && ele==0x0281) return "Performed Procedure Step Discontinuation Reason Code Sequence";
    if (grp==0x0040 && ele==0x0293) return "Quantity Sequence";
    if (grp==0x0040 && ele==0x0294) return "Quantity";
    if (grp==0x0040 && ele==0x0295) return "Measuring Units Sequence";
    if (grp==0x0040 && ele==0x0296) return "Billing Item Sequence";
    if (grp==0x0040 && ele==0x0300) return "Total Time of Fluoroscopy";
    if (grp==0x0040 && ele==0x0301) return "Total Number of Exposures";
    if (grp==0x0040 && ele==0x0302) return "Entrance Dose";
    if (grp==0x0040 && ele==0x0303) return "Exposed Area";
    if (grp==0x0040 && ele==0x0306) return "Distance Source to Entrance";
    if (grp==0x0040 && ele==0x0307) return "Distance Source to Support	Retired";
    if (grp==0x0040 && ele==0x030E) return "Exposure Dose Sequence";
    if (grp==0x0040 && ele==0x0310) return "Comments on Radiation Dose";
    if (grp==0x0040 && ele==0x0312) return "X-Ray Output";
    if (grp==0x0040 && ele==0x0314) return "Half Value Layer";
    if (grp==0x0040 && ele==0x0316) return "Organ Dose";
    if (grp==0x0040 && ele==0x0318) return "Organ Exposed";
    if (grp==0x0040 && ele==0x0320) return "Billing Procedure Step Sequence";
    if (grp==0x0040 && ele==0x0321) return "Film Consumption Sequence";
    if (grp==0x0040 && ele==0x0324) return "Billing Supplies and Devices Sequence";
    if (grp==0x0040 && ele==0x0330) return "Referenced Procedure Step Sequence	Retired";
    if (grp==0x0040 && ele==0x0340) return "Performed Series Sequence";
    if (grp==0x0040 && ele==0x0400) return "Comments on the Scheduled Procedure Step";
    if (grp==0x0040 && ele==0x0440) return "Protocol Context Sequence";
    if (grp==0x0040 && ele==0x0441) return "Content Item Modifier Sequence";
    if (grp==0x0040 && ele==0x0500) return "Scheduled Specimen Sequence";
    if (grp==0x0040 && ele==0x050A) return "Specimen Accession Number	Retired";
    if (grp==0x0040 && ele==0x0512) return "Container Identifier";
    if (grp==0x0040 && ele==0x0513) return "Issuer of the Container Identifier Sequence";
    if (grp==0x0040 && ele==0x0515) return "Alternate Container Identifier Sequence";
    if (grp==0x0040 && ele==0x0518) return "Container Type Code Sequence";
    if (grp==0x0040 && ele==0x051A) return "Container Description";
    if (grp==0x0040 && ele==0x0520) return "Container Component Sequence";
    if (grp==0x0040 && ele==0x0550) return "Specimen Sequence	Retired";
    if (grp==0x0040 && ele==0x0551) return "Specimen Identifier";
    if (grp==0x0040 && ele==0x0552) return "Specimen Description Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0x0553) return "Specimen Description (Trial)	Retired";
    if (grp==0x0040 && ele==0x0554) return "Specimen UID";
    if (grp==0x0040 && ele==0x0555) return "Acquisition Context Sequence";
    if (grp==0x0040 && ele==0x0556) return "Acquisition Context Description";
    if (grp==0x0040 && ele==0x059A) return "Specimen Type Code Sequence";
    if (grp==0x0040 && ele==0x0560) return "Specimen Description Sequence";
    if (grp==0x0040 && ele==0x0562) return "Issuer of the Specimen Identifier Sequence";
    if (grp==0x0040 && ele==0x0600) return "Specimen Short Description";
    if (grp==0x0040 && ele==0x0602) return "Specimen Detailed Description";
    if (grp==0x0040 && ele==0x0610) return "Specimen Preparation Sequence";
    if (grp==0x0040 && ele==0x0612) return "Specimen Preparation Step Content Item Sequence";
    if (grp==0x0040 && ele==0x0620) return "Specimen Localization Content Item Sequence";
    if (grp==0x0040 && ele==0x06FA) return "Slide Identifier	Retired";
    if (grp==0x0040 && ele==0x071A) return "Image Center Point Coordinates Sequence";
    if (grp==0x0040 && ele==0x072A) return "X Offset in Slide Coordinate System";
    if (grp==0x0040 && ele==0x073A) return "Y Offset in Slide Coordinate System";
    if (grp==0x0040 && ele==0x074A) return "Z Offset in Slide Coordinate System";
    if (grp==0x0040 && ele==0x08D8) return "Pixel Spacing Sequence	Retired";
    if (grp==0x0040 && ele==0x08DA) return "Coordinate System Axis Code Sequence	Retired";
    if (grp==0x0040 && ele==0x08EA) return "Measurement Units Code Sequence";
    if (grp==0x0040 && ele==0x09F8) return "Vital Stain Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0x1001) return "Requested Procedure ID";
    if (grp==0x0040 && ele==0x1002) return "Reason for the Requested Procedure";
    if (grp==0x0040 && ele==0x1003) return "Requested Procedure Priority";
    if (grp==0x0040 && ele==0x1004) return "Patient Transport Arrangements";
    if (grp==0x0040 && ele==0x1005) return "Requested Procedure Location";
    if (grp==0x0040 && ele==0x1006) return "Placer Order Number / Procedure	Retired";
    if (grp==0x0040 && ele==0x1007) return "Filler Order Number / Procedure	Retired";
    if (grp==0x0040 && ele==0x1008) return "Confidentiality Code";
    if (grp==0x0040 && ele==0x1009) return "Reporting Priority";
    if (grp==0x0040 && ele==0x100A) return "Reason for Requested Procedure Code Sequence";
    if (grp==0x0040 && ele==0x1010) return "Names of Intended Recipients of Results";
    if (grp==0x0040 && ele==0x1011) return "Intended Recipients of Results Identification Sequence";
    if (grp==0x0040 && ele==0x1012) return "Reason For Performed Procedure Code Sequence";
    if (grp==0x0040 && ele==0x1060) return "Requested Procedure Description (Trial)	Retired";
    if (grp==0x0040 && ele==0x1101) return "Person Identification Code Sequence";
    if (grp==0x0040 && ele==0x1102) return "Person's Address";
    if (grp==0x0040 && ele==0x1103) return "Person's Telephone Numbers";
    if (grp==0x0040 && ele==0x1104) return "Person's Telecom Information";
    if (grp==0x0040 && ele==0x1400) return "Requested Procedure Comments";
    if (grp==0x0040 && ele==0x2001) return "Reason for the Imaging Service Request	Retired";
    if (grp==0x0040 && ele==0x2004) return "Issue Date of Imaging Service Request";
    if (grp==0x0040 && ele==0x2005) return "Issue Time of Imaging Service Request";
    if (grp==0x0040 && ele==0x2006) return "Placer Order Number / Imaging Service Request (Retired)	Retired";
    if (grp==0x0040 && ele==0x2007) return "Filler Order Number / Imaging Service Request (Retired)	Retired";
    if (grp==0x0040 && ele==0x2008) return "Order Entered By";
    if (grp==0x0040 && ele==0x2009) return "Order Enterer's Location";
    if (grp==0x0040 && ele==0x2010) return "Order Callback Phone Number";
    if (grp==0x0040 && ele==0x2011) return "Order Callback Telecom Information";
    if (grp==0x0040 && ele==0x2016) return "Placer Order Number / Imaging Service Request";
    if (grp==0x0040 && ele==0x2017) return "Filler Order Number / Imaging Service Request";
    if (grp==0x0040 && ele==0x2400) return "Imaging Service Request Comments";
    if (grp==0x0040 && ele==0x3001) return "Confidentiality Constraint on Patient Data Description";
    if (grp==0x0040 && ele==0x4001) return "General Purpose Scheduled Procedure Step Status	Retired";
    if (grp==0x0040 && ele==0x4002) return "General Purpose Performed Procedure Step Status	Retired";
    if (grp==0x0040 && ele==0x4003) return "General Purpose Scheduled Procedure Step Priority	Retired";
    if (grp==0x0040 && ele==0x4004) return "Scheduled Processing Applications Code Sequence	Retired";
    if (grp==0x0040 && ele==0x4005) return "Scheduled Procedure Step Start DateTime";
    if (grp==0x0040 && ele==0x4006) return "Multiple Copies Flag	Retired";
    if (grp==0x0040 && ele==0x4007) return "Performed Processing Applications Code Sequence";
    if (grp==0x0040 && ele==0x4009) return "Human Performer Code Sequence";
    if (grp==0x0040 && ele==0x4010) return "Scheduled Procedure Step Modification DateTime";
    if (grp==0x0040 && ele==0x4011) return "Expected Completion DateTime";
    if (grp==0x0040 && ele==0x4015) return "Resulting General Purpose Performed Procedure Steps Sequence	Retired";
    if (grp==0x0040 && ele==0x4016) return "Referenced General Purpose Scheduled Procedure Step Sequence	Retired";
    if (grp==0x0040 && ele==0x4018) return "Scheduled Workitem Code Sequence";
    if (grp==0x0040 && ele==0x4019) return "Performed Workitem Code Sequence";
    if (grp==0x0040 && ele==0x4020) return "Input Availability Flag";
    if (grp==0x0040 && ele==0x4021) return "Input Information Sequence";
    if (grp==0x0040 && ele==0x4022) return "Relevant Information Sequence	Retired";
    if (grp==0x0040 && ele==0x4023) return "Referenced General Purpose Scheduled Procedure Step Transaction UID	Retired";
    if (grp==0x0040 && ele==0x4025) return "Scheduled Station Name Code Sequence";
    if (grp==0x0040 && ele==0x4026) return "Scheduled Station Class Code Sequence";
    if (grp==0x0040 && ele==0x4027) return "Scheduled Station Geographic Location Code Sequence";
    if (grp==0x0040 && ele==0x4028) return "Performed Station Name Code Sequence";
    if (grp==0x0040 && ele==0x4029) return "Performed Station Class Code Sequence";
    if (grp==0x0040 && ele==0x4030) return "Performed Station Geographic Location Code Sequence";
    if (grp==0x0040 && ele==0x4031) return "Requested Subsequent Workitem Code Sequence	Retired";
    if (grp==0x0040 && ele==0x4032) return "Non-DICOM Output Code Sequence	Retired";
    if (grp==0x0040 && ele==0x4033) return "Output Information Sequence";
    if (grp==0x0040 && ele==0x4034) return "Scheduled Human Performers Sequence";
    if (grp==0x0040 && ele==0x4035) return "Actual Human Performers Sequence";
    if (grp==0x0040 && ele==0x4036) return "Human Performer's Organization";
    if (grp==0x0040 && ele==0x4037) return "Human Performer's Name";
    if (grp==0x0040 && ele==0x4040) return "Raw Data Handling";
    if (grp==0x0040 && ele==0x4041) return "Input Readiness State";
    if (grp==0x0040 && ele==0x4050) return "Performed Procedure Step Start DateTime";
    if (grp==0x0040 && ele==0x4051) return "Performed Procedure Step End DateTime";
    if (grp==0x0040 && ele==0x4052) return "Procedure Step Cancellation DateTime";
    if (grp==0x0040 && ele==0x4070) return "Output Destination Sequence";
    if (grp==0x0040 && ele==0x4071) return "DICOM Storage Sequence";
    if (grp==0x0040 && ele==0x4072) return "STOW-RS Storage Sequence";
    if (grp==0x0040 && ele==0x4073) return "Storage URL";
    if (grp==0x0040 && ele==0x4074) return "XDS Storage Sequence";
    if (grp==0x0040 && ele==0x8302) return "Entrance Dose in mGy";
    if (grp==0x0040 && ele==0x9092) return "Parametric Map Frame Type Sequence";
    if (grp==0x0040 && ele==0x9094) return "Referenced Image Real World Value Mapping Sequence";
    if (grp==0x0040 && ele==0x9096) return "Real World Value Mapping Sequence";
    if (grp==0x0040 && ele==0x9098) return "Pixel Value Mapping Code Sequence";
    if (grp==0x0040 && ele==0x9210) return "LUT Label";
    if (grp==0x0040 && ele==0x9211) return "US or SS	Real World Value Last Value Mapped";
    if (grp==0x0040 && ele==0x9212) return "Real World Value LUT Data";
    if (grp==0x0040 && ele==0x9213) return "Double Float Real World Value Last Value Mapped";
    if (grp==0x0040 && ele==0x9214) return "Double Float Real World Value First Value Mapped";
    if (grp==0x0040 && ele==0x9216) return "US or SS	Real World Value First Value Mapped";
    if (grp==0x0040 && ele==0x9220) return "Quantity Definition Sequence";
    if (grp==0x0040 && ele==0x9224) return "Real World Value Intercept";
    if (grp==0x0040 && ele==0x9225) return "Real World Value Slope";
    if (grp==0x0040 && ele==0xA007) return "Findings Flag (Trial)	Retired";
    if (grp==0x0040 && ele==0xA010) return "Relationship Type";
    if (grp==0x0040 && ele==0xA020) return "Findings Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA021) return "Findings Group UID (Trial)	Retired";
    if (grp==0x0040 && ele==0xA022) return "Referenced Findings Group UID (Trial)	Retired";
    if (grp==0x0040 && ele==0xA023) return "Findings Group Recording Date (Trial)	Retired";
    if (grp==0x0040 && ele==0xA024) return "Findings Group Recording Time (Trial)	Retired";
    if (grp==0x0040 && ele==0xA026) return "Findings Source Category Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA027) return "Verifying Organization";
    if (grp==0x0040 && ele==0xA028) return "Documenting Organization Identifier Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA030) return "Verification DateTime";
    if (grp==0x0040 && ele==0xA032) return "Observation DateTime";
    if (grp==0x0040 && ele==0xA040) return "Value Type";
    if (grp==0x0040 && ele==0xA043) return "Concept Name Code Sequence";
    if (grp==0x0040 && ele==0xA047) return "Measurement Precision Description (Trial)	Retired";
    if (grp==0x0040 && ele==0xA050) return "Continuity Of Content";
    if (grp==0x0040 && ele==0xA057) return "Urgency or Priority Alerts (Trial)	Retired";
    if (grp==0x0040 && ele==0xA060) return "Sequencing Indicator (Trial)	Retired";
    if (grp==0x0040 && ele==0xA066) return "Document Identifier Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA067) return "Document Author (Trial)	Retired";
    if (grp==0x0040 && ele==0xA068) return "Document Author Identifier Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA070) return "Identifier Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA073) return "Verifying Observer Sequence";
    if (grp==0x0040 && ele==0xA074) return "Object Binary Identifier (Trial)	Retired";
    if (grp==0x0040 && ele==0xA075) return "Verifying Observer Name";
    if (grp==0x0040 && ele==0xA076) return "Documenting Observer Identifier Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA078) return "Author Observer Sequence";
    if (grp==0x0040 && ele==0xA07A) return "Participant Sequence";
    if (grp==0x0040 && ele==0xA07C) return "Custodial Organization Sequence";
    if (grp==0x0040 && ele==0xA080) return "Participation Type";
    if (grp==0x0040 && ele==0xA082) return "Participation DateTime";
    if (grp==0x0040 && ele==0xA084) return "Observer Type";
    if (grp==0x0040 && ele==0xA085) return "Procedure Identifier Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA088) return "Verifying Observer Identification Code Sequence";
    if (grp==0x0040 && ele==0xA089) return "Object Directory Binary Identifier (Trial)	Retired";
    if (grp==0x0040 && ele==0xA090) return "Equivalent CDA Document Sequence	Retired";
    if (grp==0x0040 && ele==0xA0B0) return "Referenced Waveform Channels";
    if (grp==0x0040 && ele==0xA110) return "Date of Document or Verbal Transaction (Trial)	Retired";
    if (grp==0x0040 && ele==0xA112) return "Time of Document Creation or Verbal Transaction (Trial)	Retired";
    if (grp==0x0040 && ele==0xA120) return "DateTime";
    if (grp==0x0040 && ele==0xA121) return "Date";
    if (grp==0x0040 && ele==0xA122) return "Time";
    if (grp==0x0040 && ele==0xA123) return "Person Name";
    if (grp==0x0040 && ele==0xA124) return "UID";
    if (grp==0x0040 && ele==0xA125) return "Report Status ID (Trial)	Retired";
    if (grp==0x0040 && ele==0xA130) return "Temporal Range Type";
    if (grp==0x0040 && ele==0xA132) return "Referenced Sample Positions";
    if (grp==0x0040 && ele==0xA136) return "Referenced Frame Numbers";
    if (grp==0x0040 && ele==0xA138) return "Referenced Time Offsets";
    if (grp==0x0040 && ele==0xA13A) return "Referenced DateTime";
    if (grp==0x0040 && ele==0xA160) return "Text Value";
    if (grp==0x0040 && ele==0xA161) return "Floating Point Value";
    if (grp==0x0040 && ele==0xA162) return "Rational Numerator Value";
    if (grp==0x0040 && ele==0xA163) return "Rational Denominator Value";
    if (grp==0x0040 && ele==0xA167) return "Observation Category Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA168) return "Concept Code Sequence";
    if (grp==0x0040 && ele==0xA16A) return "Bibliographic Citation (Trial)	Retired";
    if (grp==0x0040 && ele==0xA170) return "Purpose of Reference Code Sequence";
    if (grp==0x0040 && ele==0xA171) return "Observation UID";
    if (grp==0x0040 && ele==0xA172) return "Referenced Observation UID (Trial)	Retired";
    if (grp==0x0040 && ele==0xA173) return "Referenced Observation Class (Trial)	Retired";
    if (grp==0x0040 && ele==0xA174) return "Referenced Object Observation Class (Trial)	Retired";
    if (grp==0x0040 && ele==0xA180) return "Annotation Group Number";
    if (grp==0x0040 && ele==0xA192) return "Observation Date (Trial)	Retired";
    if (grp==0x0040 && ele==0xA193) return "Observation Time (Trial)	Retired";
    if (grp==0x0040 && ele==0xA194) return "Measurement Automation (Trial)	Retired";
    if (grp==0x0040 && ele==0xA195) return "Modifier Code Sequence";
    if (grp==0x0040 && ele==0xA224) return "Identification Description (Trial)	Retired";
    if (grp==0x0040 && ele==0xA290) return "Coordinates Set Geometric Type (Trial)	Retired";
    if (grp==0x0040 && ele==0xA296) return "Algorithm Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA297) return "Algorithm Description (Trial)	Retired";
    if (grp==0x0040 && ele==0xA29A) return "Pixel Coordinates Set (Trial)	Retired";
    if (grp==0x0040 && ele==0xA300) return "Measured Value Sequence";
    if (grp==0x0040 && ele==0xA301) return "Numeric Value Qualifier Code Sequence";
    if (grp==0x0040 && ele==0xA307) return "Current Observer (Trial)	Retired";
    if (grp==0x0040 && ele==0xA30A) return "Numeric Value";
    if (grp==0x0040 && ele==0xA313) return "Referenced Accession Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA33A) return "Report Status Comment (Trial)	Retired";
    if (grp==0x0040 && ele==0xA340) return "Procedure Context Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA352) return "Verbal Source (Trial)	Retired";
    if (grp==0x0040 && ele==0xA353) return "Address (Trial)	Retired";
    if (grp==0x0040 && ele==0xA354) return "Telephone Number (Trial)	Retired";
    if (grp==0x0040 && ele==0xA358) return "Verbal Source Identifier Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA360) return "Predecessor Documents Sequence";
    if (grp==0x0040 && ele==0xA370) return "Referenced Request Sequence";
    if (grp==0x0040 && ele==0xA372) return "Performed Procedure Code Sequence";
    if (grp==0x0040 && ele==0xA375) return "Current Requested Procedure Evidence Sequence";
    if (grp==0x0040 && ele==0xA380) return "Report Detail Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA385) return "Pertinent Other Evidence Sequence";
    if (grp==0x0040 && ele==0xA390) return "HL7 Structured Document Reference Sequence";
    if (grp==0x0040 && ele==0xA402) return "Observation Subject UID (Trial)	Retired";
    if (grp==0x0040 && ele==0xA403) return "Observation Subject Class (Trial)	Retired";
    if (grp==0x0040 && ele==0xA404) return "Observation Subject Type Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA491) return "Completion Flag";
    if (grp==0x0040 && ele==0xA492) return "Completion Flag Description";
    if (grp==0x0040 && ele==0xA493) return "Verification Flag";
    if (grp==0x0040 && ele==0xA494) return "Archive Requested";
    if (grp==0x0040 && ele==0xA496) return "Preliminary Flag";
    if (grp==0x0040 && ele==0xA504) return "Content Template Sequence";
    if (grp==0x0040 && ele==0xA525) return "Identical Documents Sequence";
    if (grp==0x0040 && ele==0xA600) return "Observation Subject Context Flag (Trial)	Retired";
    if (grp==0x0040 && ele==0xA601) return "Observer Context Flag (Trial)	Retired";
    if (grp==0x0040 && ele==0xA603) return "Procedure Context Flag (Trial)	Retired";
    if (grp==0x0040 && ele==0xA730) return "Content Sequence";
    if (grp==0x0040 && ele==0xA731) return "Relationship Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA732) return "Relationship Type Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA744) return "Language Code Sequence (Trial)	Retired";
    if (grp==0x0040 && ele==0xA992) return "Uniform Resource Locator (Trial)	Retired";
    if (grp==0x0040 && ele==0xB020) return "Waveform Annotation Sequence";
    if (grp==0x0040 && ele==0xDB00) return "Template Identifier";
    if (grp==0x0040 && ele==0xDB06) return "Template Version	Retired";
    if (grp==0x0040 && ele==0xDB07) return "Template Local Version	Retired";
    if (grp==0x0040 && ele==0xDB0B) return "Template Extension Flag	Retired";
    if (grp==0x0040 && ele==0xDB0C) return "Template Extension Organization UID	Retired";
    if (grp==0x0040 && ele==0xDB0D) return "Template Extension Creator UID	Retired";
    if (grp==0x0040 && ele==0xDB73) return "Referenced Content Item Identifier";
    if (grp==0x0040 && ele==0xE001) return "HL7 Instance Identifier";
    if (grp==0x0040 && ele==0xE004) return "HL7 Document Effective Time";
    if (grp==0x0040 && ele==0xE006) return "HL7 Document Type Code Sequence";
    if (grp==0x0040 && ele==0xE008) return "Document Class Code Sequence";
    if (grp==0x0040 && ele==0xE010) return "Retrieve URI";
    if (grp==0x0040 && ele==0xE011) return "Retrieve Location UID";
    if (grp==0x0040 && ele==0xE020) return "Type of Instances";
    if (grp==0x0040 && ele==0xE021) return "DICOM Retrieval Sequence";
    if (grp==0x0040 && ele==0xE022) return "DICOM Media Retrieval Sequence";
    if (grp==0x0040 && ele==0xE023) return "WADO Retrieval Sequence";
    if (grp==0x0040 && ele==0xE024) return "XDS Retrieval Sequence";
    if (grp==0x0040 && ele==0xE025) return "WADO-RS Retrieval Sequence";
    if (grp==0x0040 && ele==0xE030) return "Repository Unique ID";
    if (grp==0x0040 && ele==0xE031) return "Home Community ID";
    if (grp==0x0042 && ele==0x0010) return "Document Title";
    if (grp==0x0042 && ele==0x0011) return "Encapsulated Document";
    if (grp==0x0042 && ele==0x0012) return "MIME Type of Encapsulated Document";
    if (grp==0x0042 && ele==0x0013) return "Source Instance Sequence";
    if (grp==0x0042 && ele==0x0014) return "List of MIME Types";
    if (grp==0x0044 && ele==0x0001) return "Product Package Identifier";
    if (grp==0x0044 && ele==0x0002) return "Substance Administration Approval";
    if (grp==0x0044 && ele==0x0003) return "Approval Status Further Description";
    if (grp==0x0044 && ele==0x0004) return "Approval Status DateTime";
    if (grp==0x0044 && ele==0x0007) return "Product Type Code Sequence";
    if (grp==0x0044 && ele==0x0008) return "Product Name";
    if (grp==0x0044 && ele==0x0009) return "Product Description";
    if (grp==0x0044 && ele==0x000A) return "Product Lot Identifier";
    if (grp==0x0044 && ele==0x000B) return "Product Expiration DateTime";
    if (grp==0x0044 && ele==0x0010) return "Substance Administration DateTime";
    if (grp==0x0044 && ele==0x0011) return "Substance Administration Notes";
    if (grp==0x0044 && ele==0x0012) return "Substance Administration Device ID";
    if (grp==0x0044 && ele==0x0013) return "Product Parameter Sequence";
    if (grp==0x0044 && ele==0x0019) return "Substance Administration Parameter Sequence";
    if (grp==0x0046 && ele==0x0012) return "Lens Description";
    if (grp==0x0046 && ele==0x0014) return "Right Lens Sequence";
    if (grp==0x0046 && ele==0x0015) return "Left Lens Sequence";
    if (grp==0x0046 && ele==0x0016) return "Unspecified Laterality Lens Sequence";
    if (grp==0x0046 && ele==0x0018) return "Cylinder Sequence";
    if (grp==0x0046 && ele==0x0028) return "Prism Sequence";
    if (grp==0x0046 && ele==0x0030) return "Horizontal Prism Power";
    if (grp==0x0046 && ele==0x0032) return "Horizontal Prism Base";
    if (grp==0x0046 && ele==0x0034) return "Vertical Prism Power";
    if (grp==0x0046 && ele==0x0036) return "Vertical Prism Base";
    if (grp==0x0046 && ele==0x0038) return "Lens Segment Type";
    if (grp==0x0046 && ele==0x0040) return "Optical Transmittance";
    if (grp==0x0046 && ele==0x0042) return "Channel Width";
    if (grp==0x0046 && ele==0x0044) return "Pupil Size";
    if (grp==0x0046 && ele==0x0046) return "Corneal Size";
    if (grp==0x0046 && ele==0x0050) return "Autorefraction Right Eye Sequence";
    if (grp==0x0046 && ele==0x0052) return "Autorefraction Left Eye Sequence";
    if (grp==0x0046 && ele==0x0060) return "Distance Pupillary Distance";
    if (grp==0x0046 && ele==0x0062) return "Near Pupillary Distance";
    if (grp==0x0046 && ele==0x0063) return "Intermediate Pupillary Distance";
    if (grp==0x0046 && ele==0x0064) return "Other Pupillary Distance";
    if (grp==0x0046 && ele==0x0070) return "Keratometry Right Eye Sequence";
    if (grp==0x0046 && ele==0x0071) return "Keratometry Left Eye Sequence";
    if (grp==0x0046 && ele==0x0074) return "Steep Keratometric Axis Sequence";
    if (grp==0x0046 && ele==0x0075) return "Radius of Curvature";
    if (grp==0x0046 && ele==0x0076) return "Keratometric Power";
    if (grp==0x0046 && ele==0x0077) return "Keratometric Axis";
    if (grp==0x0046 && ele==0x0080) return "Flat Keratometric Axis Sequence";
    if (grp==0x0046 && ele==0x0092) return "Background Color";
    if (grp==0x0046 && ele==0x0094) return "Optotype";
    if (grp==0x0046 && ele==0x0095) return "Optotype Presentation";
    if (grp==0x0046 && ele==0x0097) return "Subjective Refraction Right Eye Sequence";
    if (grp==0x0046 && ele==0x0098) return "Subjective Refraction Left Eye Sequence";
    if (grp==0x0046 && ele==0x0100) return "Add Near Sequence";
    if (grp==0x0046 && ele==0x0101) return "Add Intermediate Sequence";
    if (grp==0x0046 && ele==0x0102) return "Add Other Sequence";
    if (grp==0x0046 && ele==0x0104) return "Add Power";
    if (grp==0x0046 && ele==0x0106) return "Viewing Distance";
    if (grp==0x0046 && ele==0x0121) return "Visual Acuity Type Code Sequence";
    if (grp==0x0046 && ele==0x0122) return "Visual Acuity Right Eye Sequence";
    if (grp==0x0046 && ele==0x0123) return "Visual Acuity Left Eye Sequence";
    if (grp==0x0046 && ele==0x0124) return "Visual Acuity Both Eyes Open Sequence";
    if (grp==0x0046 && ele==0x0125) return "Viewing Distance Type";
    if (grp==0x0046 && ele==0x0135) return "Visual Acuity Modifiers";
    if (grp==0x0046 && ele==0x0137) return "Decimal Visual Acuity";
    if (grp==0x0046 && ele==0x0139) return "Optotype Detailed Definition";
    if (grp==0x0046 && ele==0x0145) return "Referenced Refractive Measurements Sequence";
    if (grp==0x0046 && ele==0x0146) return "Sphere Power";
    if (grp==0x0046 && ele==0x0147) return "Cylinder Power";
    if (grp==0x0046 && ele==0x0201) return "Corneal Topography Surface";
    if (grp==0x0046 && ele==0x0202) return "Corneal Vertex Location";
    if (grp==0x0046 && ele==0x0203) return "Pupil Centroid X-Coordinate";
    if (grp==0x0046 && ele==0x0204) return "Pupil Centroid Y-Coordinate";
    if (grp==0x0046 && ele==0x0205) return "Equivalent Pupil Radius";
    if (grp==0x0046 && ele==0x0207) return "Corneal Topography Map Type Code Sequence";
    if (grp==0x0046 && ele==0x0208) return "Vertices of the Outline of Pupil";
    if (grp==0x0046 && ele==0x0210) return "Corneal Topography Mapping Normals Sequence";
    if (grp==0x0046 && ele==0x0211) return "Maximum Corneal Curvature Sequence";
    if (grp==0x0046 && ele==0x0212) return "Maximum Corneal Curvature";
    if (grp==0x0046 && ele==0x0213) return "Maximum Corneal Curvature Location";
    if (grp==0x0046 && ele==0x0215) return "Minimum Keratometric Sequence";
    if (grp==0x0046 && ele==0x0218) return "Simulated Keratometric Cylinder Sequence";
    if (grp==0x0046 && ele==0x0220) return "Average Corneal Power";
    if (grp==0x0046 && ele==0x0224) return "Corneal I-S Value";
    if (grp==0x0046 && ele==0x0227) return "Analyzed Area";
    if (grp==0x0046 && ele==0x0230) return "Surface Regularity Index";
    if (grp==0x0046 && ele==0x0232) return "Surface Asymmetry Index";
    if (grp==0x0046 && ele==0x0234) return "Corneal Eccentricity Index";
    if (grp==0x0046 && ele==0x0236) return "Keratoconus Prediction Index";
    if (grp==0x0046 && ele==0x0238) return "Decimal Potential Visual Acuity";
    if (grp==0x0046 && ele==0x0242) return "Corneal Topography Map Quality Evaluation";
    if (grp==0x0046 && ele==0x0244) return "Source Image Corneal Processed Data Sequence";
    if (grp==0x0046 && ele==0x0247) return "Corneal Point Location";
    if (grp==0x0046 && ele==0x0248) return "Corneal Point Estimated";
    if (grp==0x0046 && ele==0x0249) return "Axial Power";
    if (grp==0x0046 && ele==0x0250) return "Tangential Power";
    if (grp==0x0046 && ele==0x0251) return "Refractive Power";
    if (grp==0x0046 && ele==0x0252) return "Relative Elevation";
    if (grp==0x0046 && ele==0x0253) return "Corneal Wavefront";
    if (grp==0x0048 && ele==0x0001) return "Imaged Volume Width";
    if (grp==0x0048 && ele==0x0002) return "Imaged Volume Height";
    if (grp==0x0048 && ele==0x0003) return "Imaged Volume Depth";
    if (grp==0x0048 && ele==0x0006) return "Total Pixel Matrix Columns";
    if (grp==0x0048 && ele==0x0007) return "Total Pixel Matrix Rows";
    if (grp==0x0048 && ele==0x0008) return "Total Pixel Matrix Origin Sequence";
    if (grp==0x0048 && ele==0x0010) return "Specimen Label in Image";
    if (grp==0x0048 && ele==0x0011) return "Focus Method";
    if (grp==0x0048 && ele==0x0012) return "Extended Depth of Field";
    if (grp==0x0048 && ele==0x0013) return "Number of Focal Planes";
    if (grp==0x0048 && ele==0x0014) return "Distance Between Focal Planes";
    if (grp==0x0048 && ele==0x0015) return "Recommended Absent Pixel CIELab Value";
    if (grp==0x0048 && ele==0x0100) return "Illuminator Type Code Sequence";
    if (grp==0x0048 && ele==0x0102) return "Image Orientation (Slide)";
    if (grp==0x0048 && ele==0x0105) return "Optical Path Sequence";
    if (grp==0x0048 && ele==0x0106) return "Optical Path Identifier";
    if (grp==0x0048 && ele==0x0107) return "Optical Path Description";
    if (grp==0x0048 && ele==0x0108) return "Illumination Color Code Sequence";
    if (grp==0x0048 && ele==0x0110) return "Specimen Reference Sequence";
    if (grp==0x0048 && ele==0x0111) return "Condenser Lens Power";
    if (grp==0x0048 && ele==0x0112) return "Objective Lens Power";
    if (grp==0x0048 && ele==0x0113) return "Objective Lens Numerical Aperture";
    if (grp==0x0048 && ele==0x0120) return "Palette Color Lookup Table Sequence";
    if (grp==0x0048 && ele==0x0200) return "Referenced Image Navigation Sequence";
    if (grp==0x0048 && ele==0x0201) return "Top Left Hand Corner of Localizer Area";
    if (grp==0x0048 && ele==0x0202) return "Bottom Right Hand Corner of Localizer Area";
    if (grp==0x0048 && ele==0x0207) return "Optical Path Identification Sequence";
    if (grp==0x0048 && ele==0x021A) return "Plane Position (Slide) Sequence";
    if (grp==0x0048 && ele==0x021E) return "Column Position In Total Image Pixel Matrix";
    if (grp==0x0048 && ele==0x021F) return "Row Position In Total Image Pixel Matrix";
    if (grp==0x0048 && ele==0x0301) return "Pixel Origin Interpretation";
    if (grp==0x0050 && ele==0x0004) return "Calibration Image";
    if (grp==0x0050 && ele==0x0010) return "Device Sequence";
    if (grp==0x0050 && ele==0x0012) return "Container Component Type Code Sequence";
    if (grp==0x0050 && ele==0x0013) return "Container Component Thickness";
    if (grp==0x0050 && ele==0x0014) return "Device Length";
    if (grp==0x0050 && ele==0x0015) return "Container Component Width";
    if (grp==0x0050 && ele==0x0016) return "Device Diameter";
    if (grp==0x0050 && ele==0x0017) return "Device Diameter Units";
    if (grp==0x0050 && ele==0x0018) return "Device Volume";
    if (grp==0x0050 && ele==0x0019) return "Inter-Marker Distance";
    if (grp==0x0050 && ele==0x001A) return "Container Component Material";
    if (grp==0x0050 && ele==0x001B) return "Container Component ID";
    if (grp==0x0050 && ele==0x001C) return "Container Component Length";
    if (grp==0x0050 && ele==0x001D) return "Container Component Diameter";
    if (grp==0x0050 && ele==0x001E) return "Container Component Description";
    if (grp==0x0050 && ele==0x0020) return "Device Description";
    if (grp==0x0052 && ele==0x0001) return "Contrast/Bolus Ingredient Percent by Volume";
    if (grp==0x0052 && ele==0x0002) return "OCT Focal Distance";
    if (grp==0x0052 && ele==0x0003) return "Beam Spot Size";
    if (grp==0x0052 && ele==0x0004) return "Effective Refractive Index";
    if (grp==0x0052 && ele==0x0006) return "OCT Acquisition Domain";
    if (grp==0x0052 && ele==0x0007) return "OCT Optical Center Wavelength";
    if (grp==0x0052 && ele==0x0008) return "Axial Resolution";
    if (grp==0x0052 && ele==0x0009) return "Ranging Depth";
    if (grp==0x0052 && ele==0x0011) return "A-line Rate";
    if (grp==0x0052 && ele==0x0012) return "A-lines Per Frame";
    if (grp==0x0052 && ele==0x0013) return "Catheter Rotational Rate";
    if (grp==0x0052 && ele==0x0014) return "A-line Pixel Spacing";
    if (grp==0x0052 && ele==0x0016) return "Mode of Percutaneous Access Sequence";
    if (grp==0x0052 && ele==0x0025) return "Intravascular OCT Frame Type Sequence";
    if (grp==0x0052 && ele==0x0026) return "OCT Z Offset Applied";
    if (grp==0x0052 && ele==0x0027) return "Intravascular Frame Content Sequence";
    if (grp==0x0052 && ele==0x0028) return "Intravascular Longitudinal Distance";
    if (grp==0x0052 && ele==0x0029) return "Intravascular OCT Frame Content Sequence";
    if (grp==0x0052 && ele==0x0030) return "OCT Z Offset Correction";
    if (grp==0x0052 && ele==0x0031) return "Catheter Direction of Rotation";
    if (grp==0x0052 && ele==0x0033) return "Seam Line Location";
    if (grp==0x0052 && ele==0x0034) return "First A-line Location";
    if (grp==0x0052 && ele==0x0036) return "Seam Line Index";
    if (grp==0x0052 && ele==0x0038) return "Number of Padded A-lines";
    if (grp==0x0052 && ele==0x0039) return "Interpolation Type";
    if (grp==0x0052 && ele==0x003A) return "Refractive Index Applied";
    if (grp==0x0054 && ele==0x0010) return "Energy Window Vector";
    if (grp==0x0054 && ele==0x0011) return "Number of Energy Windows";
    if (grp==0x0054 && ele==0x0012) return "Energy Window Information Sequence";
    if (grp==0x0054 && ele==0x0013) return "Energy Window Range Sequence";
    if (grp==0x0054 && ele==0x0014) return "Energy Window Lower Limit";
    if (grp==0x0054 && ele==0x0015) return "Energy Window Upper Limit";
    if (grp==0x0054 && ele==0x0016) return "Radiopharmaceutical Information Sequence";
    if (grp==0x0054 && ele==0x0017) return "Residual Syringe Counts";
    if (grp==0x0054 && ele==0x0018) return "Energy Window Name";
    if (grp==0x0054 && ele==0x0020) return "Detector Vector";
    if (grp==0x0054 && ele==0x0021) return "Number of Detectors";
    if (grp==0x0054 && ele==0x0022) return "Detector Information Sequence";
    if (grp==0x0054 && ele==0x0030) return "Phase Vector";
    if (grp==0x0054 && ele==0x0031) return "Number of Phases";
    if (grp==0x0054 && ele==0x0032) return "Phase Information Sequence";
    if (grp==0x0054 && ele==0x0033) return "Number of Frames in Phase";
    if (grp==0x0054 && ele==0x0036) return "Phase Delay";
    if (grp==0x0054 && ele==0x0038) return "Pause Between Frames";
    if (grp==0x0054 && ele==0x0039) return "Phase Description";
    if (grp==0x0054 && ele==0x0050) return "Rotation Vector";
    if (grp==0x0054 && ele==0x0051) return "Number of Rotations";
    if (grp==0x0054 && ele==0x0052) return "Rotation Information Sequence";
    if (grp==0x0054 && ele==0x0053) return "Number of Frames in Rotation";
    if (grp==0x0054 && ele==0x0060) return "R-R Interval Vector";
    if (grp==0x0054 && ele==0x0061) return "Number of R-R Intervals";
    if (grp==0x0054 && ele==0x0062) return "Gated Information Sequence";
    if (grp==0x0054 && ele==0x0063) return "Data Information Sequence";
    if (grp==0x0054 && ele==0x0070) return "Time Slot Vector";
    if (grp==0x0054 && ele==0x0071) return "Number of Time Slots";
    if (grp==0x0054 && ele==0x0072) return "Time Slot Information Sequence";
    if (grp==0x0054 && ele==0x0073) return "Time Slot Time";
    if (grp==0x0054 && ele==0x0080) return "Slice Vector";
    if (grp==0x0054 && ele==0x0081) return "Number of Slices";
    if (grp==0x0054 && ele==0x0090) return "Angular View Vector";
    if (grp==0x0054 && ele==0x0100) return "Time Slice Vector";
    if (grp==0x0054 && ele==0x0101) return "Number of Time Slices";
    if (grp==0x0054 && ele==0x0200) return "Start Angle";
    if (grp==0x0054 && ele==0x0202) return "Type of Detector Motion";
    if (grp==0x0054 && ele==0x0210) return "Trigger Vector";
    if (grp==0x0054 && ele==0x0211) return "Number of Triggers in Phase";
    if (grp==0x0054 && ele==0x0220) return "View Code Sequence";
    if (grp==0x0054 && ele==0x0222) return "View Modifier Code Sequence";
    if (grp==0x0054 && ele==0x0300) return "Radionuclide Code Sequence";
    if (grp==0x0054 && ele==0x0302) return "Administration Route Code Sequence";
    if (grp==0x0054 && ele==0x0304) return "Radiopharmaceutical Code Sequence";
    if (grp==0x0054 && ele==0x0306) return "Calibration Data Sequence";
    if (grp==0x0054 && ele==0x0308) return "Energy Window Number";
    if (grp==0x0054 && ele==0x0400) return "Image ID";
    if (grp==0x0054 && ele==0x0410) return "Patient Orientation Code Sequence";
    if (grp==0x0054 && ele==0x0412) return "Patient Orientation Modifier Code Sequence";
    if (grp==0x0054 && ele==0x0414) return "Patient Gantry Relationship Code Sequence";
    if (grp==0x0054 && ele==0x0500) return "Slice Progression Direction";
    if (grp==0x0054 && ele==0x0501) return "Scan Progression Direction";
    if (grp==0x0054 && ele==0x1000) return "Series Type";
    if (grp==0x0054 && ele==0x1001) return "Units";
    if (grp==0x0054 && ele==0x1002) return "Counts Source";
    if (grp==0x0054 && ele==0x1004) return "Reprojection Method";
    if (grp==0x0054 && ele==0x1006) return "SUV Type";
    if (grp==0x0054 && ele==0x1100) return "Randoms Correction Method";
    if (grp==0x0054 && ele==0x1101) return "Attenuation Correction Method";
    if (grp==0x0054 && ele==0x1102) return "Decay Correction";
    if (grp==0x0054 && ele==0x1103) return "Reconstruction Method";
    if (grp==0x0054 && ele==0x1104) return "Detector Lines of Response Used";
    if (grp==0x0054 && ele==0x1105) return "Scatter Correction Method";
    if (grp==0x0054 && ele==0x1200) return "Axial Acceptance";
    if (grp==0x0054 && ele==0x1201) return "Axial Mash";
    if (grp==0x0054 && ele==0x1202) return "Transverse Mash";
    if (grp==0x0054 && ele==0x1203) return "Detector Element Size";
    if (grp==0x0054 && ele==0x1210) return "Coincidence Window Width";
    if (grp==0x0054 && ele==0x1220) return "Secondary Counts Type";
    if (grp==0x0054 && ele==0x1300) return "Frame Reference Time";
    if (grp==0x0054 && ele==0x1310) return "Primary (Prompts) Counts Accumulated";
    if (grp==0x0054 && ele==0x1311) return "Secondary Counts Accumulated";
    if (grp==0x0054 && ele==0x1320) return "Slice Sensitivity Factor";
    if (grp==0x0054 && ele==0x1321) return "Decay Factor";
    if (grp==0x0054 && ele==0x1322) return "Dose Calibration Factor";
    if (grp==0x0054 && ele==0x1323) return "Scatter Fraction Factor";
    if (grp==0x0054 && ele==0x1324) return "Dead Time Factor";
    if (grp==0x0054 && ele==0x1330) return "Image Index";
    if (grp==0x0054 && ele==0x1400) return "Counts Included	Retired";
    if (grp==0x0054 && ele==0x1401) return "Dead Time Correction Flag	Retired";
    if (grp==0x0060 && ele==0x3000) return "Histogram Sequence";
    if (grp==0x0060 && ele==0x3002) return "Histogram Number of Bins";
    if (grp==0x0060 && ele==0x3004) return "US or SS	Histogram First Bin Value";
    if (grp==0x0060 && ele==0x3006) return "US or SS	Histogram Last Bin Value";
    if (grp==0x0060 && ele==0x3008) return "Histogram Bin Width";
    if (grp==0x0060 && ele==0x3010) return "Histogram Explanation";
    if (grp==0x0060 && ele==0x3020) return "Histogram Data";
    if (grp==0x0062 && ele==0x0001) return "Segmentation Type";
    if (grp==0x0062 && ele==0x0002) return "Segment Sequence";
    if (grp==0x0062 && ele==0x0003) return "Segmented Property Category Code Sequence";
    if (grp==0x0062 && ele==0x0004) return "Segment Number";
    if (grp==0x0062 && ele==0x0005) return "Segment Label";
    if (grp==0x0062 && ele==0x0006) return "Segment Description";
    if (grp==0x0062 && ele==0x0008) return "Segment Algorithm Type";
    if (grp==0x0062 && ele==0x0009) return "Segment Algorithm Name";
    if (grp==0x0062 && ele==0x000A) return "Segment Identification Sequence";
    if (grp==0x0062 && ele==0x000B) return "Referenced Segment Number";
    if (grp==0x0062 && ele==0x000C) return "Recommended Display Grayscale Value";
    if (grp==0x0062 && ele==0x000D) return "Recommended Display CIELab Value";
    if (grp==0x0062 && ele==0x000E) return "Maximum Fractional Value";
    if (grp==0x0062 && ele==0x000F) return "Segmented Property Type Code Sequence";
    if (grp==0x0062 && ele==0x0010) return "Segmentation Fractional Type";
    if (grp==0x0062 && ele==0x0011) return "Segmented Property Type Modifier Code Sequence";
    if (grp==0x0062 && ele==0x0012) return "Used Segments Sequence";
    if (grp==0x0062 && ele==0x0020) return "Tracking ID";
    if (grp==0x0062 && ele==0x0021) return "Tracking UID";
    if (grp==0x0064 && ele==0x0002) return "Deformable Registration Sequence";
    if (grp==0x0064 && ele==0x0003) return "Source Frame of Reference UID";
    if (grp==0x0064 && ele==0x0005) return "Deformable Registration Grid Sequence";
    if (grp==0x0064 && ele==0x0007) return "Grid Dimensions";
    if (grp==0x0064 && ele==0x0008) return "Grid Resolution";
    if (grp==0x0064 && ele==0x0009) return "Vector Grid Data";
    if (grp==0x0064 && ele==0x000F) return "Pre Deformation Matrix Registration Sequence";
    if (grp==0x0064 && ele==0x0010) return "Post Deformation Matrix Registration Sequence";
    if (grp==0x0066 && ele==0x0001) return "Number of Surfaces";
    if (grp==0x0066 && ele==0x0002) return "Surface Sequence";
    if (grp==0x0066 && ele==0x0003) return "Surface Number";
    if (grp==0x0066 && ele==0x0004) return "Surface Comments";
    if (grp==0x0066 && ele==0x0009) return "Surface Processing";
    if (grp==0x0066 && ele==0x000A) return "Surface Processing Ratio";
    if (grp==0x0066 && ele==0x000B) return "Surface Processing Description";
    if (grp==0x0066 && ele==0x000C) return "Recommended Presentation Opacity";
    if (grp==0x0066 && ele==0x000D) return "Recommended Presentation Type";
    if (grp==0x0066 && ele==0x000E) return "Finite Volume";
    if (grp==0x0066 && ele==0x0010) return "Manifold";
    if (grp==0x0066 && ele==0x0011) return "Surface Points Sequence";
    if (grp==0x0066 && ele==0x0012) return "Surface Points Normals Sequence";
    if (grp==0x0066 && ele==0x0013) return "Surface Mesh Primitives Sequence";
    if (grp==0x0066 && ele==0x0015) return "Number of Surface Points";
    if (grp==0x0066 && ele==0x0016) return "Point Coordinates Data";
    if (grp==0x0066 && ele==0x0017) return "Point Position Accuracy";
    if (grp==0x0066 && ele==0x0018) return "Mean Point Distance";
    if (grp==0x0066 && ele==0x0019) return "Maximum Point Distance";
    if (grp==0x0066 && ele==0x001A) return "Points Bounding Box Coordinates";
    if (grp==0x0066 && ele==0x001B) return "Axis of Rotation";
    if (grp==0x0066 && ele==0x001C) return "Center of Rotation";
    if (grp==0x0066 && ele==0x001E) return "Number of Vectors";
    if (grp==0x0066 && ele==0x001F) return "Vector Dimensionality";
    if (grp==0x0066 && ele==0x0020) return "Vector Accuracy";
    if (grp==0x0066 && ele==0x0021) return "Vector Coordinate Data";
    if (grp==0x0066 && ele==0x0023) return "Triangle Point Index List	Retired";
    if (grp==0x0066 && ele==0x0024) return "Edge Point Index List	Retired";
    if (grp==0x0066 && ele==0x0025) return "Vertex Point Index List	Retired";
    if (grp==0x0066 && ele==0x0026) return "Triangle Strip Sequence";
    if (grp==0x0066 && ele==0x0027) return "Triangle Fan Sequence";
    if (grp==0x0066 && ele==0x0028) return "Line Sequence";
    if (grp==0x0066 && ele==0x0029) return "Primitive Point Index List	Retired";
    if (grp==0x0066 && ele==0x002A) return "Surface Count";
    if (grp==0x0066 && ele==0x002B) return "Referenced Surface Sequence";
    if (grp==0x0066 && ele==0x002C) return "Referenced Surface Number";
    if (grp==0x0066 && ele==0x002D) return "Segment Surface Generation Algorithm Identification Sequence";
    if (grp==0x0066 && ele==0x002E) return "Segment Surface Source Instance Sequence";
    if (grp==0x0066 && ele==0x002F) return "Algorithm Family Code Sequence";
    if (grp==0x0066 && ele==0x0030) return "Algorithm Name Code Sequence";
    if (grp==0x0066 && ele==0x0031) return "Algorithm Version";
    if (grp==0x0066 && ele==0x0032) return "Algorithm Parameters";
    if (grp==0x0066 && ele==0x0034) return "Facet Sequence";
    if (grp==0x0066 && ele==0x0035) return "Surface Processing Algorithm Identification Sequence";
    if (grp==0x0066 && ele==0x0036) return "Algorithm Name";
    if (grp==0x0066 && ele==0x0037) return "Recommended Point Radius";
    if (grp==0x0066 && ele==0x0038) return "Recommended Line Thickness";
    if (grp==0x0066 && ele==0x0040) return "Long Primitive Point Index List";
    if (grp==0x0066 && ele==0x0041) return "Long Triangle Point Index List";
    if (grp==0x0066 && ele==0x0042) return "Long Edge Point Index List";
    if (grp==0x0066 && ele==0x0043) return "Long Vertex Point Index List";
    if (grp==0x0066 && ele==0x0101) return "Track Set Sequence";
    if (grp==0x0066 && ele==0x0102) return "Track Sequence";
    if (grp==0x0066 && ele==0x0103) return "Recommended Display CIELab Value List";
    if (grp==0x0066 && ele==0x0104) return "Tracking Algorithm Identification Sequence";
    if (grp==0x0066 && ele==0x0105) return "Track Set Number";
    if (grp==0x0066 && ele==0x0106) return "Track Set Label";
    if (grp==0x0066 && ele==0x0107) return "Track Set Description";
    if (grp==0x0066 && ele==0x0108) return "Track Set Anatomical Type Code Sequence";
    if (grp==0x0066 && ele==0x0121) return "Measurements Sequence";
    if (grp==0x0066 && ele==0x0124) return "Track Set Statistics Sequence";
    if (grp==0x0066 && ele==0x0125) return "Floating Point Values";
    if (grp==0x0066 && ele==0x0129) return "Track Point Index List";
    if (grp==0x0066 && ele==0x0130) return "Track Statistics Sequence";
    if (grp==0x0066 && ele==0x0132) return "Measurement Values Sequence";
    if (grp==0x0066 && ele==0x0133) return "Diffusion Acquisition Code Sequence";
    if (grp==0x0066 && ele==0x0134) return "Diffusion Model Code Sequence";
    if (grp==0x0068 && ele==0x6210) return "Implant Size";
    if (grp==0x0068 && ele==0x6221) return "Implant Template Version";
    if (grp==0x0068 && ele==0x6222) return "Replaced Implant Template Sequence";
    if (grp==0x0068 && ele==0x6223) return "Implant Type";
    if (grp==0x0068 && ele==0x6224) return "Derivation Implant Template Sequence";
    if (grp==0x0068 && ele==0x6225) return "Original Implant Template Sequence";
    if (grp==0x0068 && ele==0x6226) return "Effective DateTime";
    if (grp==0x0068 && ele==0x6230) return "Implant Target Anatomy Sequence";
    if (grp==0x0068 && ele==0x6260) return "Information From Manufacturer Sequence";
    if (grp==0x0068 && ele==0x6265) return "Notification From Manufacturer Sequence";
    if (grp==0x0068 && ele==0x6270) return "Information Issue DateTime";
    if (grp==0x0068 && ele==0x6280) return "Information Summary";
    if (grp==0x0068 && ele==0x62A0) return "Implant Regulatory Disapproval Code Sequence";
    if (grp==0x0068 && ele==0x62A5) return "Overall Template Spatial Tolerance";
    if (grp==0x0068 && ele==0x62C0) return "HPGL Document Sequence";
    if (grp==0x0068 && ele==0x62D0) return "HPGL Document ID";
    if (grp==0x0068 && ele==0x62D5) return "HPGL Document Label";
    if (grp==0x0068 && ele==0x62E0) return "View Orientation Code Sequence";
    if (grp==0x0068 && ele==0x62F0) return "View Orientation Modifier";
    if (grp==0x0068 && ele==0x62F2) return "HPGL Document Scaling";
    if (grp==0x0068 && ele==0x6300) return "HPGL Document";
    if (grp==0x0068 && ele==0x6310) return "HPGL Contour Pen Number";
    if (grp==0x0068 && ele==0x6320) return "HPGL Pen Sequence";
    if (grp==0x0068 && ele==0x6330) return "HPGL Pen Number";
    if (grp==0x0068 && ele==0x6340) return "HPGL Pen Label";
    if (grp==0x0068 && ele==0x6345) return "HPGL Pen Description";
    if (grp==0x0068 && ele==0x6346) return "Recommended Rotation Point";
    if (grp==0x0068 && ele==0x6347) return "Bounding Rectangle";
    if (grp==0x0068 && ele==0x6350) return "Implant Template 3D Model Surface Number";
    if (grp==0x0068 && ele==0x6360) return "Surface Model Description Sequence";
    if (grp==0x0068 && ele==0x6380) return "Surface Model Label";
    if (grp==0x0068 && ele==0x6390) return "Surface Model Scaling Factor";
    if (grp==0x0068 && ele==0x63A0) return "Materials Code Sequence";
    if (grp==0x0068 && ele==0x63A4) return "Coating Materials Code Sequence";
    if (grp==0x0068 && ele==0x63A8) return "Implant Type Code Sequence";
    if (grp==0x0068 && ele==0x63AC) return "Fixation Method Code Sequence";
    if (grp==0x0068 && ele==0x63B0) return "Mating Feature Sets Sequence";
    if (grp==0x0068 && ele==0x63C0) return "Mating Feature Set ID";
    if (grp==0x0068 && ele==0x63D0) return "Mating Feature Set Label";
    if (grp==0x0068 && ele==0x63E0) return "Mating Feature Sequence";
    if (grp==0x0068 && ele==0x63F0) return "Mating Feature ID";
    if (grp==0x0068 && ele==0x6400) return "Mating Feature Degree of Freedom Sequence";
    if (grp==0x0068 && ele==0x6410) return "Degree of Freedom ID";
    if (grp==0x0068 && ele==0x6420) return "Degree of Freedom Type";
    if (grp==0x0068 && ele==0x6430) return "2D Mating Feature Coordinates Sequence";
    if (grp==0x0068 && ele==0x6440) return "Referenced HPGL Document ID";
    if (grp==0x0068 && ele==0x6450) return "2D Mating Point";
    if (grp==0x0068 && ele==0x6460) return "2D Mating Axes";
    if (grp==0x0068 && ele==0x6470) return "2D Degree of Freedom Sequence";
    if (grp==0x0068 && ele==0x6490) return "3D Degree of Freedom Axis";
    if (grp==0x0068 && ele==0x64A0) return "Range of Freedom";
    if (grp==0x0068 && ele==0x64C0) return "3D Mating Point";
    if (grp==0x0068 && ele==0x64D0) return "3D Mating Axes";
    if (grp==0x0068 && ele==0x64F0) return "2D Degree of Freedom Axis";
    if (grp==0x0068 && ele==0x6500) return "Planning Landmark Point Sequence";
    if (grp==0x0068 && ele==0x6510) return "Planning Landmark Line Sequence";
    if (grp==0x0068 && ele==0x6520) return "Planning Landmark Plane Sequence";
    if (grp==0x0068 && ele==0x6530) return "Planning Landmark ID";
    if (grp==0x0068 && ele==0x6540) return "Planning Landmark Description";
    if (grp==0x0068 && ele==0x6545) return "Planning Landmark Identification Code Sequence";
    if (grp==0x0068 && ele==0x6550) return "2D Point Coordinates Sequence";
    if (grp==0x0068 && ele==0x6560) return "2D Point Coordinates";
    if (grp==0x0068 && ele==0x6590) return "3D Point Coordinates";
    if (grp==0x0068 && ele==0x65A0) return "2D Line Coordinates Sequence";
    if (grp==0x0068 && ele==0x65B0) return "2D Line Coordinates";
    if (grp==0x0068 && ele==0x65D0) return "3D Line Coordinates";
    if (grp==0x0068 && ele==0x65E0) return "2D Plane Coordinates Sequence";
    if (grp==0x0068 && ele==0x65F0) return "2D Plane Intersection";
    if (grp==0x0068 && ele==0x6610) return "3D Plane Origin";
    if (grp==0x0068 && ele==0x6620) return "3D Plane Normal";
    if (grp==0x0070 && ele==0x0001) return "Graphic Annotation Sequence";
    if (grp==0x0070 && ele==0x0002) return "Graphic Layer";
    if (grp==0x0070 && ele==0x0003) return "Bounding Box Annotation Units";
    if (grp==0x0070 && ele==0x0004) return "Anchor Point Annotation Units";
    if (grp==0x0070 && ele==0x0005) return "Graphic Annotation Units";
    if (grp==0x0070 && ele==0x0006) return "Unformatted Text Value";
    if (grp==0x0070 && ele==0x0008) return "Text Object Sequence";
    if (grp==0x0070 && ele==0x0009) return "Graphic Object Sequence";
    if (grp==0x0070 && ele==0x0010) return "Bounding Box Top Left Hand Corner";
    if (grp==0x0070 && ele==0x0011) return "Bounding Box Bottom Right Hand Corner";
    if (grp==0x0070 && ele==0x0012) return "Bounding Box Text Horizontal Justification";
    if (grp==0x0070 && ele==0x0014) return "Anchor Point";
    if (grp==0x0070 && ele==0x0015) return "Anchor Point Visibility";
    if (grp==0x0070 && ele==0x0020) return "Graphic Dimensions";
    if (grp==0x0070 && ele==0x0021) return "Number of Graphic Points";
    if (grp==0x0070 && ele==0x0022) return "Graphic Data";
    if (grp==0x0070 && ele==0x0023) return "Graphic Type";
    if (grp==0x0070 && ele==0x0024) return "Graphic Filled";
    if (grp==0x0070 && ele==0x0040) return "Image Rotation (Retired)	Retired";
    if (grp==0x0070 && ele==0x0041) return "Image Horizontal Flip";
    if (grp==0x0070 && ele==0x0042) return "Image Rotation";
    if (grp==0x0070 && ele==0x0050) return "Displayed Area Top Left Hand Corner (Trial)	Retired";
    if (grp==0x0070 && ele==0x0051) return "Displayed Area Bottom Right Hand Corner (Trial)	Retired";
    if (grp==0x0070 && ele==0x0052) return "Displayed Area Top Left Hand Corner";
    if (grp==0x0070 && ele==0x0053) return "Displayed Area Bottom Right Hand Corner";
    if (grp==0x0070 && ele==0x005A) return "Displayed Area Selection Sequence";
    if (grp==0x0070 && ele==0x0060) return "Graphic Layer Sequence";
    if (grp==0x0070 && ele==0x0062) return "Graphic Layer Order";
    if (grp==0x0070 && ele==0x0066) return "Graphic Layer Recommended Display Grayscale Value";
    if (grp==0x0070 && ele==0x0067) return "Graphic Layer Recommended Display RGB Value	Retired";
    if (grp==0x0070 && ele==0x0068) return "Graphic Layer Description";
    if (grp==0x0070 && ele==0x0080) return "Content Label";
    if (grp==0x0070 && ele==0x0081) return "Content Description";
    if (grp==0x0070 && ele==0x0082) return "Presentation Creation Date";
    if (grp==0x0070 && ele==0x0083) return "Presentation Creation Time";
    if (grp==0x0070 && ele==0x0084) return "Content Creator's Name";
    if (grp==0x0070 && ele==0x0086) return "Content Creator's Identification Code Sequence";
    if (grp==0x0070 && ele==0x0087) return "Alternate Content Description Sequence";
    if (grp==0x0070 && ele==0x0100) return "Presentation Size Mode";
    if (grp==0x0070 && ele==0x0101) return "Presentation Pixel Spacing";
    if (grp==0x0070 && ele==0x0102) return "Presentation Pixel Aspect Ratio";
    if (grp==0x0070 && ele==0x0103) return "Presentation Pixel Magnification Ratio";
    if (grp==0x0070 && ele==0x0207) return "Graphic Group Label";
    if (grp==0x0070 && ele==0x0208) return "Graphic Group Description";
    if (grp==0x0070 && ele==0x0209) return "Compound Graphic Sequence";
    if (grp==0x0070 && ele==0x0226) return "Compound Graphic Instance ID";
    if (grp==0x0070 && ele==0x0227) return "Font Name";
    if (grp==0x0070 && ele==0x0228) return "Font Name Type";
    if (grp==0x0070 && ele==0x0229) return "CSS Font Name";
    if (grp==0x0070 && ele==0x0230) return "Rotation Angle";
    if (grp==0x0070 && ele==0x0231) return "Text Style Sequence";
    if (grp==0x0070 && ele==0x0232) return "Line Style Sequence";
    if (grp==0x0070 && ele==0x0233) return "Fill Style Sequence";
    if (grp==0x0070 && ele==0x0234) return "Graphic Group Sequence";
    if (grp==0x0070 && ele==0x0241) return "Text Color CIELab Value";
    if (grp==0x0070 && ele==0x0242) return "Horizontal Alignment";
    if (grp==0x0070 && ele==0x0243) return "Vertical Alignment";
    if (grp==0x0070 && ele==0x0244) return "Shadow Style";
    if (grp==0x0070 && ele==0x0245) return "Shadow Offset X";
    if (grp==0x0070 && ele==0x0246) return "Shadow Offset Y";
    if (grp==0x0070 && ele==0x0247) return "Shadow Color CIELab Value";
    if (grp==0x0070 && ele==0x0248) return "Underlined";
    if (grp==0x0070 && ele==0x0249) return "Bold";
    if (grp==0x0070 && ele==0x0250) return "Italic";
    if (grp==0x0070 && ele==0x0251) return "Pattern On Color CIELab Value";
    if (grp==0x0070 && ele==0x0252) return "Pattern Off Color CIELab Value";
    if (grp==0x0070 && ele==0x0253) return "Line Thickness";
    if (grp==0x0070 && ele==0x0254) return "Line Dashing Style";
    if (grp==0x0070 && ele==0x0255) return "Line Pattern";
    if (grp==0x0070 && ele==0x0256) return "Fill Pattern";
    if (grp==0x0070 && ele==0x0257) return "Fill Mode";
    if (grp==0x0070 && ele==0x0258) return "Shadow Opacity";
    if (grp==0x0070 && ele==0x0261) return "Gap Length";
    if (grp==0x0070 && ele==0x0262) return "Diameter of Visibility";
    if (grp==0x0070 && ele==0x0273) return "Rotation Point";
    if (grp==0x0070 && ele==0x0274) return "Tick Alignment";
    if (grp==0x0070 && ele==0x0278) return "Show Tick Label";
    if (grp==0x0070 && ele==0x0279) return "Tick Label Alignment";
    if (grp==0x0070 && ele==0x0282) return "Compound Graphic Units";
    if (grp==0x0070 && ele==0x0284) return "Pattern On Opacity";
    if (grp==0x0070 && ele==0x0285) return "Pattern Off Opacity";
    if (grp==0x0070 && ele==0x0287) return "Major Ticks Sequence";
    if (grp==0x0070 && ele==0x0288) return "Tick Position";
    if (grp==0x0070 && ele==0x0289) return "Tick Label";
    if (grp==0x0070 && ele==0x0294) return "Compound Graphic Type";
    if (grp==0x0070 && ele==0x0295) return "Graphic Group ID";
    if (grp==0x0070 && ele==0x0306) return "Shape Type";
    if (grp==0x0070 && ele==0x0308) return "Registration Sequence";
    if (grp==0x0070 && ele==0x0309) return "Matrix Registration Sequence";
    if (grp==0x0070 && ele==0x030A) return "Matrix Sequence";
    if (grp==0x0070 && ele==0x030B) return "Frame of Reference to Displayed Coordinate System Transformation Matrix";
    if (grp==0x0070 && ele==0x030C) return "Frame of Reference Transformation Matrix Type";
    if (grp==0x0070 && ele==0x030D) return "Registration Type Code Sequence";
    if (grp==0x0070 && ele==0x030F) return "Fiducial Description";
    if (grp==0x0070 && ele==0x0310) return "Fiducial Identifier";
    if (grp==0x0070 && ele==0x0311) return "Fiducial Identifier Code Sequence";
    if (grp==0x0070 && ele==0x0312) return "Contour Uncertainty Radius";
    if (grp==0x0070 && ele==0x0314) return "Used Fiducials Sequence";
    if (grp==0x0070 && ele==0x0318) return "Graphic Coordinates Data Sequence";
    if (grp==0x0070 && ele==0x031A) return "Fiducial UID";
    if (grp==0x0070 && ele==0x031C) return "Fiducial Set Sequence";
    if (grp==0x0070 && ele==0x031E) return "Fiducial Sequence";
    if (grp==0x0070 && ele==0x0401) return "Graphic Layer Recommended Display CIELab Value";
    if (grp==0x0070 && ele==0x0402) return "Blending Sequence";
    if (grp==0x0070 && ele==0x0403) return "Relative Opacity";
    if (grp==0x0070 && ele==0x0404) return "Referenced Spatial Registration Sequence";
    if (grp==0x0070 && ele==0x0405) return "Blending Position";
    if (grp==0x0070 && ele==0x1101) return "Presentation Display Collection UID";
    if (grp==0x0070 && ele==0x1102) return "Presentation Sequence Collection UID";
    if (grp==0x0070 && ele==0x1103) return "Presentation Sequence Position Index";
    if (grp==0x0070 && ele==0x1104) return "Rendered Image Reference Sequence";
    if (grp==0x0070 && ele==0x1201) return "Volumetric Presentation State Input Sequence";
    if (grp==0x0070 && ele==0x1202) return "Presentation Input Type";
    if (grp==0x0070 && ele==0x1203) return "Input Sequence Position Index";
    if (grp==0x0070 && ele==0x1204) return "Crop";
    if (grp==0x0070 && ele==0x1205) return "Cropping Specification Index";
    if (grp==0x0070 && ele==0x1206) return "Compositing Method";
    if (grp==0x0070 && ele==0x1207) return "Volumetric Presentation Input Number";
    if (grp==0x0070 && ele==0x1208) return "Image Volume Geometry";
    if (grp==0x0070 && ele==0x1301) return "Volume Cropping Sequence";
    if (grp==0x0070 && ele==0x1302) return "Volume Cropping Method";
    if (grp==0x0070 && ele==0x1303) return "Bounding Box Crop";
    if (grp==0x0070 && ele==0x1304) return "Oblique Cropping Plane Sequence";
    if (grp==0x0070 && ele==0x1305) return "Plane";
    if (grp==0x0070 && ele==0x1306) return "Plane Normal";
    if (grp==0x0070 && ele==0x1309) return "Cropping Specification Number";
    if (grp==0x0070 && ele==0x1501) return "Multi-Planar Reconstruction Style";
    if (grp==0x0070 && ele==0x1502) return "MPR Thickness Type";
    if (grp==0x0070 && ele==0x1503) return "MPR Slab Thickness";
    if (grp==0x0070 && ele==0x1505) return "MPR Top Left Hand Corner";
    if (grp==0x0070 && ele==0x1507) return "MPR View Width Direction";
    if (grp==0x0070 && ele==0x1508) return "MPR View Width";
    if (grp==0x0070 && ele==0x150C) return "Number of Volumetric Curve Points";
    if (grp==0x0070 && ele==0x150D) return "Volumetric Curve Points";
    if (grp==0x0070 && ele==0x1511) return "MPR View Height Direction";
    if (grp==0x0070 && ele==0x1512) return "MPR View Height";
    if (grp==0x0070 && ele==0x1801) return "Presentation State Classification Component Sequence";
    if (grp==0x0070 && ele==0x1802) return "Component Type";
    if (grp==0x0070 && ele==0x1803) return "Component Input Sequence";
    if (grp==0x0070 && ele==0x1804) return "Volumetric Presentation Input Index";
    if (grp==0x0070 && ele==0x1805) return "Presentation State Compositor Component Sequence";
    if (grp==0x0070 && ele==0x1806) return "Weighting Transfer Function Sequence";
    if (grp==0x0070 && ele==0x1807) return "Weighting Lookup Table Descriptor";
    if (grp==0x0070 && ele==0x1808) return "Weighting Lookup Table Data";
    if (grp==0x0070 && ele==0x1901) return "Volumetric Annotation Sequence";
    if (grp==0x0070 && ele==0x1903) return "Referenced Structured Context Sequence";
    if (grp==0x0070 && ele==0x1904) return "Referenced Content Item";
    if (grp==0x0070 && ele==0x1905) return "Volumetric Presentation Input Annotation Sequence";
    if (grp==0x0070 && ele==0x1907) return "Annotation Clipping";
    if (grp==0x0070 && ele==0x1A01) return "Presentation Animation Style";
    if (grp==0x0070 && ele==0x1A03) return "Recommended Animation Rate";
    if (grp==0x0070 && ele==0x1A04) return "Animation Curve Sequence";
    if (grp==0x0070 && ele==0x1A05) return "Animation Step Size";
    if (grp==0x0072 && ele==0x0002) return "Hanging Protocol Name";
    if (grp==0x0072 && ele==0x0004) return "Hanging Protocol Description";
    if (grp==0x0072 && ele==0x0006) return "Hanging Protocol Level";
    if (grp==0x0072 && ele==0x0008) return "Hanging Protocol Creator";
    if (grp==0x0072 && ele==0x000A) return "Hanging Protocol Creation DateTime";
    if (grp==0x0072 && ele==0x000C) return "Hanging Protocol Definition Sequence";
    if (grp==0x0072 && ele==0x000E) return "Hanging Protocol User Identification Code Sequence";
    if (grp==0x0072 && ele==0x0010) return "Hanging Protocol User Group Name";
    if (grp==0x0072 && ele==0x0012) return "Source Hanging Protocol Sequence";
    if (grp==0x0072 && ele==0x0014) return "Number of Priors Referenced";
    if (grp==0x0072 && ele==0x0020) return "Image Sets Sequence";
    if (grp==0x0072 && ele==0x0022) return "Image Set Selector Sequence";
    if (grp==0x0072 && ele==0x0024) return "Image Set Selector Usage Flag";
    if (grp==0x0072 && ele==0x0026) return "Selector Attribute";
    if (grp==0x0072 && ele==0x0028) return "Selector Value Number";
    if (grp==0x0072 && ele==0x0030) return "Time Based Image Sets Sequence";
    if (grp==0x0072 && ele==0x0032) return "Image Set Number";
    if (grp==0x0072 && ele==0x0034) return "Image Set Selector Category";
    if (grp==0x0072 && ele==0x0038) return "Relative Time";
    if (grp==0x0072 && ele==0x003A) return "Relative Time Units";
    if (grp==0x0072 && ele==0x003C) return "Abstract Prior Value";
    if (grp==0x0072 && ele==0x003E) return "Abstract Prior Code Sequence";
    if (grp==0x0072 && ele==0x0040) return "Image Set Label";
    if (grp==0x0072 && ele==0x0050) return "Selector Attribute VR";
    if (grp==0x0072 && ele==0x0052) return "Selector Sequence Pointer";
    if (grp==0x0072 && ele==0x0054) return "Selector Sequence Pointer Private Creator";
    if (grp==0x0072 && ele==0x0056) return "Selector Attribute Private Creator";
    if (grp==0x0072 && ele==0x005E) return "Selector AE Value";
    if (grp==0x0072 && ele==0x005F) return "Selector AS Value";
    if (grp==0x0072 && ele==0x0060) return "Selector AT Value";
    if (grp==0x0072 && ele==0x0061) return "Selector DA Value";
    if (grp==0x0072 && ele==0x0062) return "Selector CS Value";
    if (grp==0x0072 && ele==0x0063) return "Selector DT Value";
    if (grp==0x0072 && ele==0x0064) return "Selector IS Value";
    if (grp==0x0072 && ele==0x0065) return "Selector OB Value";
    if (grp==0x0072 && ele==0x0066) return "Selector LO Value";
    if (grp==0x0072 && ele==0x0067) return "Selector OF Value";
    if (grp==0x0072 && ele==0x0068) return "Selector LT Value";
    if (grp==0x0072 && ele==0x0069) return "Selector OW Value";
    if (grp==0x0072 && ele==0x006A) return "Selector PN Value";
    if (grp==0x0072 && ele==0x006B) return "Selector TM Value";
    if (grp==0x0072 && ele==0x006C) return "Selector SH Value";
    if (grp==0x0072 && ele==0x006D) return "Selector UN Value";
    if (grp==0x0072 && ele==0x006E) return "Selector ST Value";
    if (grp==0x0072 && ele==0x006F) return "Selector UC Value";
    if (grp==0x0072 && ele==0x0070) return "Selector UT Value";
    if (grp==0x0072 && ele==0x0071) return "Selector UR Value";
    if (grp==0x0072 && ele==0x0072) return "Selector DS Value";
    if (grp==0x0072 && ele==0x0073) return "Selector OD Value";
    if (grp==0x0072 && ele==0x0074) return "Selector FD Value";
    if (grp==0x0072 && ele==0x0075) return "Selector OL Value";
    if (grp==0x0072 && ele==0x0076) return "Selector FL Value";
    if (grp==0x0072 && ele==0x0078) return "Selector UL Value";
    if (grp==0x0072 && ele==0x007A) return "Selector US Value";
    if (grp==0x0072 && ele==0x007C) return "Selector SL Value";
    if (grp==0x0072 && ele==0x007E) return "Selector SS Value";
    if (grp==0x0072 && ele==0x007F) return "Selector UI Value";
    if (grp==0x0072 && ele==0x0080) return "Selector Code Sequence Value";
    if (grp==0x0072 && ele==0x0100) return "Number of Screens";
    if (grp==0x0072 && ele==0x0102) return "Nominal Screen Definition Sequence";
    if (grp==0x0072 && ele==0x0104) return "Number of Vertical Pixels";
    if (grp==0x0072 && ele==0x0106) return "Number of Horizontal Pixels";
    if (grp==0x0072 && ele==0x0108) return "Display Environment Spatial Position";
    if (grp==0x0072 && ele==0x010A) return "Screen Minimum Grayscale Bit Depth";
    if (grp==0x0072 && ele==0x010C) return "Screen Minimum Color Bit Depth";
    if (grp==0x0072 && ele==0x010E) return "Application Maximum Repaint Time";
    if (grp==0x0072 && ele==0x0200) return "Display Sets Sequence";
    if (grp==0x0072 && ele==0x0202) return "Display Set Number";
    if (grp==0x0072 && ele==0x0203) return "Display Set Label";
    if (grp==0x0072 && ele==0x0204) return "Display Set Presentation Group";
    if (grp==0x0072 && ele==0x0206) return "Display Set Presentation Group Description";
    if (grp==0x0072 && ele==0x0208) return "Partial Data Display Handling";
    if (grp==0x0072 && ele==0x0210) return "Synchronized Scrolling Sequence";
    if (grp==0x0072 && ele==0x0212) return "Display Set Scrolling Group";
    if (grp==0x0072 && ele==0x0214) return "Navigation Indicator Sequence";
    if (grp==0x0072 && ele==0x0216) return "Navigation Display Set";
    if (grp==0x0072 && ele==0x0218) return "Reference Display Sets";
    if (grp==0x0072 && ele==0x0300) return "Image Boxes Sequence";
    if (grp==0x0072 && ele==0x0302) return "Image Box Number";
    if (grp==0x0072 && ele==0x0304) return "Image Box Layout Type";
    if (grp==0x0072 && ele==0x0306) return "Image Box Tile Horizontal Dimension";
    if (grp==0x0072 && ele==0x0308) return "Image Box Tile Vertical Dimension";
    if (grp==0x0072 && ele==0x0310) return "Image Box Scroll Direction";
    if (grp==0x0072 && ele==0x0312) return "Image Box Small Scroll Type";
    if (grp==0x0072 && ele==0x0314) return "Image Box Small Scroll Amount";
    if (grp==0x0072 && ele==0x0316) return "Image Box Large Scroll Type";
    if (grp==0x0072 && ele==0x0318) return "Image Box Large Scroll Amount";
    if (grp==0x0072 && ele==0x0320) return "Image Box Overlap Priority";
    if (grp==0x0072 && ele==0x0330) return "Cine Relative to Real-Time";
    if (grp==0x0072 && ele==0x0400) return "Filter Operations Sequence";
    if (grp==0x0072 && ele==0x0402) return "Filter-by Category";
    if (grp==0x0072 && ele==0x0404) return "Filter-by Attribute Presence";
    if (grp==0x0072 && ele==0x0406) return "Filter-by Operator";
    if (grp==0x0072 && ele==0x0420) return "Structured Display Background CIELab Value";
    if (grp==0x0072 && ele==0x0421) return "Empty Image Box CIELab Value";
    if (grp==0x0072 && ele==0x0422) return "Structured Display Image Box Sequence";
    if (grp==0x0072 && ele==0x0424) return "Structured Display Text Box Sequence";
    if (grp==0x0072 && ele==0x0427) return "Referenced First Frame Sequence";
    if (grp==0x0072 && ele==0x0430) return "Image Box Synchronization Sequence";
    if (grp==0x0072 && ele==0x0432) return "Synchronized Image Box List";
    if (grp==0x0072 && ele==0x0434) return "Type of Synchronization";
    if (grp==0x0072 && ele==0x0500) return "Blending Operation Type";
    if (grp==0x0072 && ele==0x0510) return "Reformatting Operation Type";
    if (grp==0x0072 && ele==0x0512) return "Reformatting Thickness";
    if (grp==0x0072 && ele==0x0514) return "Reformatting Interval";
    if (grp==0x0072 && ele==0x0516) return "Reformatting Operation Initial View Direction";
    if (grp==0x0072 && ele==0x0520) return "3D Rendering Type";
    if (grp==0x0072 && ele==0x0600) return "Sorting Operations Sequence";
    if (grp==0x0072 && ele==0x0602) return "Sort-by Category";
    if (grp==0x0072 && ele==0x0604) return "Sorting Direction";
    if (grp==0x0072 && ele==0x0700) return "Display Set Patient Orientation";
    if (grp==0x0072 && ele==0x0702) return "VOI Type";
    if (grp==0x0072 && ele==0x0704) return "Pseudo-Color Type";
    if (grp==0x0072 && ele==0x0705) return "Pseudo-Color Palette Instance Reference Sequence";
    if (grp==0x0072 && ele==0x0706) return "Show Grayscale Inverted";
    if (grp==0x0072 && ele==0x0710) return "Show Image True Size Flag";
    if (grp==0x0072 && ele==0x0712) return "Show Graphic Annotation Flag";
    if (grp==0x0072 && ele==0x0714) return "Show Patient Demographics Flag";
    if (grp==0x0072 && ele==0x0716) return "Show Acquisition Techniques Flag";
    if (grp==0x0072 && ele==0x0717) return "Display Set Horizontal Justification";
    if (grp==0x0072 && ele==0x0718) return "Display Set Vertical Justification";
    if (grp==0x0074 && ele==0x0120) return "Continuation Start Meterset";
    if (grp==0x0074 && ele==0x0121) return "Continuation End Meterset";
    if (grp==0x0074 && ele==0x1000) return "Procedure Step State";
    if (grp==0x0074 && ele==0x1002) return "Procedure Step Progress Information Sequence";
    if (grp==0x0074 && ele==0x1004) return "Procedure Step Progress";
    if (grp==0x0074 && ele==0x1006) return "Procedure Step Progress Description";
    if (grp==0x0074 && ele==0x1008) return "Procedure Step Communications URI Sequence";
    if (grp==0x0074 && ele==0x100A) return "Contact URI";
    if (grp==0x0074 && ele==0x100C) return "Contact Display Name";
    if (grp==0x0074 && ele==0x100E) return "Procedure Step Discontinuation Reason Code Sequence";
    if (grp==0x0074 && ele==0x1020) return "Beam Task Sequence";
    if (grp==0x0074 && ele==0x1022) return "Beam Task Type";
    if (grp==0x0074 && ele==0x1024) return "Beam Order Index (Trial)	Retired";
    if (grp==0x0074 && ele==0x1025) return "Autosequence Flag";
    if (grp==0x0074 && ele==0x1026) return "Table Top Vertical Adjusted Position";
    if (grp==0x0074 && ele==0x1027) return "Table Top Longitudinal Adjusted Position";
    if (grp==0x0074 && ele==0x1028) return "Table Top Lateral Adjusted Position";
    if (grp==0x0074 && ele==0x102A) return "Patient Support Adjusted Angle";
    if (grp==0x0074 && ele==0x102B) return "Table Top Eccentric Adjusted Angle";
    if (grp==0x0074 && ele==0x102C) return "Table Top Pitch Adjusted Angle";
    if (grp==0x0074 && ele==0x102D) return "Table Top Roll Adjusted Angle";
    if (grp==0x0074 && ele==0x1030) return "Delivery Verification Image Sequence";
    if (grp==0x0074 && ele==0x1032) return "Verification Image Timing";
    if (grp==0x0074 && ele==0x1034) return "Double Exposure Flag";
    if (grp==0x0074 && ele==0x1036) return "Double Exposure Ordering";
    if (grp==0x0074 && ele==0x1038) return "Double Exposure Meterset (Trial)	Retired";
    if (grp==0x0074 && ele==0x103A) return "Double Exposure Field Delta (Trial)	Retired";
    if (grp==0x0074 && ele==0x1040) return "Related Reference RT Image Sequence";
    if (grp==0x0074 && ele==0x1042) return "General Machine Verification Sequence";
    if (grp==0x0074 && ele==0x1044) return "Conventional Machine Verification Sequence";
    if (grp==0x0074 && ele==0x1046) return "Ion Machine Verification Sequence";
    if (grp==0x0074 && ele==0x1048) return "Failed Attributes Sequence";
    if (grp==0x0074 && ele==0x104A) return "Overridden Attributes Sequence";
    if (grp==0x0074 && ele==0x104C) return "Conventional Control Point Verification Sequence";
    if (grp==0x0074 && ele==0x104E) return "Ion Control Point Verification Sequence";
    if (grp==0x0074 && ele==0x1050) return "Attribute Occurrence Sequence";
    if (grp==0x0074 && ele==0x1052) return "Attribute Occurrence Pointer";
    if (grp==0x0074 && ele==0x1054) return "Attribute Item Selector";
    if (grp==0x0074 && ele==0x1056) return "Attribute Occurrence Private Creator";
    if (grp==0x0074 && ele==0x1057) return "Selector Sequence Pointer Items";
    if (grp==0x0074 && ele==0x1200) return "Scheduled Procedure Step Priority";
    if (grp==0x0074 && ele==0x1202) return "Worklist Label";
    if (grp==0x0074 && ele==0x1204) return "Procedure Step Label";
    if (grp==0x0074 && ele==0x1210) return "Scheduled Processing Parameters Sequence";
    if (grp==0x0074 && ele==0x1212) return "Performed Processing Parameters Sequence";
    if (grp==0x0074 && ele==0x1216) return "Unified Procedure Step Performed Procedure Sequence";
    if (grp==0x0074 && ele==0x1220) return "Related Procedure Step Sequence	Retired";
    if (grp==0x0074 && ele==0x1222) return "Procedure Step Relationship Type	Retired";
    if (grp==0x0074 && ele==0x1224) return "Replaced Procedure Step Sequence";
    if (grp==0x0074 && ele==0x1230) return "Deletion Lock";
    if (grp==0x0074 && ele==0x1234) return "Receiving AE";
    if (grp==0x0074 && ele==0x1236) return "Requesting AE";
    if (grp==0x0074 && ele==0x1238) return "Reason for Cancellation";
    if (grp==0x0074 && ele==0x1242) return "SCP Status";
    if (grp==0x0074 && ele==0x1244) return "Subscription List Status";
    if (grp==0x0074 && ele==0x1246) return "Unified Procedure Step List Status";
    if (grp==0x0074 && ele==0x1324) return "Beam Order Index";
    if (grp==0x0074 && ele==0x1338) return "Double Exposure Meterset";
    if (grp==0x0074 && ele==0x133A) return "Double Exposure Field Delta";
    if (grp==0x0074 && ele==0x1401) return "Brachy Task Sequence";
    if (grp==0x0074 && ele==0x1402) return "Continuation Start Total Reference Air Kerma";
    if (grp==0x0074 && ele==0x1403) return "Continuation End Total Reference Air Kerma";
    if (grp==0x0074 && ele==0x1404) return "Continuation Pulse Number";
    if (grp==0x0074 && ele==0x1405) return "Channel Delivery Order Sequence";
    if (grp==0x0074 && ele==0x1406) return "Referenced Channel Number";
    if (grp==0x0074 && ele==0x1407) return "Start Cumulative Time Weight";
    if (grp==0x0074 && ele==0x1408) return "End Cumulative Time Weight";
    if (grp==0x0074 && ele==0x1409) return "Omitted Channel Sequence";
    if (grp==0x0074 && ele==0x140A) return "Reason for Channel Omission";
    if (grp==0x0074 && ele==0x140B) return "Reason for Channel Omission Description";
    if (grp==0x0074 && ele==0x140C) return "Channel Delivery Order Index";
    if (grp==0x0074 && ele==0x140D) return "Channel Delivery Continuation Sequence";
    if (grp==0x0074 && ele==0x140E) return "Omitted Application Setup Sequence";
    if (grp==0x0076 && ele==0x0001) return "Implant Assembly Template Name";
    if (grp==0x0076 && ele==0x0003) return "Implant Assembly Template Issuer";
    if (grp==0x0076 && ele==0x0006) return "Implant Assembly Template Version";
    if (grp==0x0076 && ele==0x0008) return "Replaced Implant Assembly Template Sequence";
    if (grp==0x0076 && ele==0x000A) return "Implant Assembly Template Type";
    if (grp==0x0076 && ele==0x000C) return "Original Implant Assembly Template Sequence";
    if (grp==0x0076 && ele==0x000E) return "Derivation Implant Assembly Template Sequence";
    if (grp==0x0076 && ele==0x0010) return "Implant Assembly Template Target Anatomy Sequence";
    if (grp==0x0076 && ele==0x0020) return "Procedure Type Code Sequence";
    if (grp==0x0076 && ele==0x0030) return "Surgical Technique";
    if (grp==0x0076 && ele==0x0032) return "Component Types Sequence";
    if (grp==0x0076 && ele==0x0034) return "Component Type Code Sequence";
    if (grp==0x0076 && ele==0x0036) return "Exclusive Component Type";
    if (grp==0x0076 && ele==0x0038) return "Mandatory Component Type";
    if (grp==0x0076 && ele==0x0040) return "Component Sequence";
    if (grp==0x0076 && ele==0x0055) return "Component ID";
    if (grp==0x0076 && ele==0x0060) return "Component Assembly Sequence";
    if (grp==0x0076 && ele==0x0070) return "Component 1 Referenced ID";
    if (grp==0x0076 && ele==0x0080) return "Component 1 Referenced Mating Feature Set ID";
    if (grp==0x0076 && ele==0x0090) return "Component 1 Referenced Mating Feature ID";
    if (grp==0x0076 && ele==0x00A0) return "Component 2 Referenced ID";
    if (grp==0x0076 && ele==0x00B0) return "Component 2 Referenced Mating Feature Set ID";
    if (grp==0x0076 && ele==0x00C0) return "Component 2 Referenced Mating Feature ID";
    if (grp==0x0078 && ele==0x0001) return "Implant Template Group Name";
    if (grp==0x0078 && ele==0x0010) return "Implant Template Group Description";
    if (grp==0x0078 && ele==0x0020) return "Implant Template Group Issuer";
    if (grp==0x0078 && ele==0x0024) return "Implant Template Group Version";
    if (grp==0x0078 && ele==0x0026) return "Replaced Implant Template Group Sequence";
    if (grp==0x0078 && ele==0x0028) return "Implant Template Group Target Anatomy Sequence";
    if (grp==0x0078 && ele==0x002A) return "Implant Template Group Members Sequence";
    if (grp==0x0078 && ele==0x002E) return "Implant Template Group Member ID";
    if (grp==0x0078 && ele==0x0050) return "3D Implant Template Group Member Matching Point";
    if (grp==0x0078 && ele==0x0060) return "3D Implant Template Group Member Matching Axes";
    if (grp==0x0078 && ele==0x0070) return "Implant Template Group Member Matching 2D Coordinates Sequence";
    if (grp==0x0078 && ele==0x0090) return "2D Implant Template Group Member Matching Point";
    if (grp==0x0078 && ele==0x00A0) return "2D Implant Template Group Member Matching Axes";
    if (grp==0x0078 && ele==0x00B0) return "Implant Template Group Variation Dimension Sequence";
    if (grp==0x0078 && ele==0x00B2) return "Implant Template Group Variation Dimension Name";
    if (grp==0x0078 && ele==0x00B4) return "Implant Template Group Variation Dimension Rank Sequence";
    if (grp==0x0078 && ele==0x00B6) return "Referenced Implant Template Group Member ID";
    if (grp==0x0078 && ele==0x00B8) return "Implant Template Group Variation Dimension Rank";
    if (grp==0x0080 && ele==0x0001) return "Surface Scan Acquisition Type Code Sequence";
    if (grp==0x0080 && ele==0x0002) return "Surface Scan Mode Code Sequence";
    if (grp==0x0080 && ele==0x0003) return "Registration Method Code Sequence";
    if (grp==0x0080 && ele==0x0004) return "Shot Duration Time";
    if (grp==0x0080 && ele==0x0005) return "Shot Offset Time";
    if (grp==0x0080 && ele==0x0006) return "Surface Point Presentation Value Data";
    if (grp==0x0080 && ele==0x0007) return "Surface Point Color CIELab Value Data";
    if (grp==0x0080 && ele==0x0008) return "UV Mapping Sequence";
    if (grp==0x0080 && ele==0x0009) return "Texture Label";
    if (grp==0x0080 && ele==0x0010) return "U Value Data";
    if (grp==0x0080 && ele==0x0011) return "V Value Data";
    if (grp==0x0080 && ele==0x0012) return "Referenced Texture Sequence";
    if (grp==0x0080 && ele==0x0013) return "Referenced Surface Data Sequence";
    if (grp==0x0082 && ele==0x0001) return "Assessment Summary";
    if (grp==0x0082 && ele==0x0003) return "Assessment Summary Description";
    if (grp==0x0082 && ele==0x0004) return "Assessed SOP Instance Sequence";
    if (grp==0x0082 && ele==0x0005) return "Referenced Comparison SOP Instance Sequence";
    if (grp==0x0082 && ele==0x0006) return "Number of Assessment Observations";
    if (grp==0x0082 && ele==0x0007) return "Assessment Observations Sequence";
    if (grp==0x0082 && ele==0x0008) return "Observation Significance";
    if (grp==0x0082 && ele==0x000A) return "Observation Description";
    if (grp==0x0082 && ele==0x000C) return "Structured Constraint Observation Sequence";
    if (grp==0x0082 && ele==0x0010) return "Assessed Attribute Value Sequence";
    if (grp==0x0082 && ele==0x0016) return "Assessment Set ID";
    if (grp==0x0082 && ele==0x0017) return "Assessment Requester Sequence";
    if (grp==0x0082 && ele==0x0018) return "Selector Attribute Name";
    if (grp==0x0082 && ele==0x0019) return "Selector Attribute Keyword";
    if (grp==0x0082 && ele==0x0021) return "Assessment Type Code Sequence";
    if (grp==0x0082 && ele==0x0022) return "Observation Basis Code Sequence";
    if (grp==0x0082 && ele==0x0023) return "Assessment Label";
    if (grp==0x0082 && ele==0x0032) return "Constraint Type";
    if (grp==0x0082 && ele==0x0033) return "Specification Selection Guidance";
    if (grp==0x0082 && ele==0x0034) return "Constraint Value Sequence";
    if (grp==0x0082 && ele==0x0035) return "Recommended Default Value Sequence";
    if (grp==0x0082 && ele==0x0036) return "Constraint Violation Significance";
    if (grp==0x0082 && ele==0x0037) return "Constraint Violation Condition";
    if (grp==0x0088 && ele==0x0130) return "Storage Media File-set ID";
    if (grp==0x0088 && ele==0x0140) return "Storage Media File-set UID";
    if (grp==0x0088 && ele==0x0200) return "Icon Image Sequence";
    if (grp==0x0088 && ele==0x0904) return "Topic Title	Retired";
    if (grp==0x0088 && ele==0x0906) return "Topic Subject	Retired";
    if (grp==0x0088 && ele==0x0910) return "Topic Author	Retired";
    if (grp==0x0088 && ele==0x0912) return "Topic Keywords	Retired";
    if (grp==0x0100 && ele==0x0410) return "SOP Instance Status";
    if (grp==0x0100 && ele==0x0420) return "SOP Authorization DateTime";
    if (grp==0x0100 && ele==0x0424) return "SOP Authorization Comment";
    if (grp==0x0100 && ele==0x0426) return "Authorization Equipment Certification Number";
    if (grp==0x0400 && ele==0x0005) return "MAC ID Number";
    if (grp==0x0400 && ele==0x0010) return "MAC Calculation Transfer Syntax UID";
    if (grp==0x0400 && ele==0x0015) return "MAC Algorithm";
    if (grp==0x0400 && ele==0x0020) return "Data Elements Signed";
    if (grp==0x0400 && ele==0x0100) return "Digital Signature UID";
    if (grp==0x0400 && ele==0x0105) return "Digital Signature DateTime";
    if (grp==0x0400 && ele==0x0110) return "Certificate Type";
    if (grp==0x0400 && ele==0x0115) return "Certificate of Signer";
    if (grp==0x0400 && ele==0x0120) return "Signature";
    if (grp==0x0400 && ele==0x0305) return "Certified Timestamp Type";
    if (grp==0x0400 && ele==0x0310) return "Certified Timestamp";
    if (grp==0x0400 && ele==0x0315) return "	Retired";
    if (grp==0x0400 && ele==0x0401) return "Digital Signature Purpose Code Sequence";
    if (grp==0x0400 && ele==0x0402) return "Referenced Digital Signature Sequence";
    if (grp==0x0400 && ele==0x0403) return "Referenced SOP Instance MAC Sequence";
    if (grp==0x0400 && ele==0x0404) return "MAC";
    if (grp==0x0400 && ele==0x0500) return "Encrypted Attributes Sequence";
    if (grp==0x0400 && ele==0x0510) return "Encrypted Content Transfer Syntax UID";
    if (grp==0x0400 && ele==0x0520) return "Encrypted Content";
    if (grp==0x0400 && ele==0x0550) return "Modified Attributes Sequence";
    if (grp==0x0400 && ele==0x0561) return "Original Attributes Sequence";
    if (grp==0x0400 && ele==0x0562) return "Attribute Modification DateTime";
    if (grp==0x0400 && ele==0x0563) return "Modifying System";
    if (grp==0x0400 && ele==0x0564) return "Source of Previous Values";
    if (grp==0x0400 && ele==0x0565) return "Reason for the Attribute Modification";
    if (grp==0x2000 && ele==0x0010) return "Number of Copies";
    if (grp==0x2000 && ele==0x001E) return "Printer Configuration Sequence";
    if (grp==0x2000 && ele==0x0020) return "Print Priority";
    if (grp==0x2000 && ele==0x0030) return "Medium Type";
    if (grp==0x2000 && ele==0x0040) return "Film Destination";
    if (grp==0x2000 && ele==0x0050) return "Film Session Label";
    if (grp==0x2000 && ele==0x0060) return "Memory Allocation";
    if (grp==0x2000 && ele==0x0061) return "Maximum Memory Allocation";
    if (grp==0x2000 && ele==0x0062) return "Color Image Printing Flag	Retired";
    if (grp==0x2000 && ele==0x0063) return "Collation Flag	Retired";
    if (grp==0x2000 && ele==0x0065) return "Annotation Flag	Retired";
    if (grp==0x2000 && ele==0x0067) return "Image Overlay Flag	Retired";
    if (grp==0x2000 && ele==0x0069) return "Presentation LUT Flag	Retired";
    if (grp==0x2000 && ele==0x006A) return "Image Box Presentation LUT Flag	Retired";
    if (grp==0x2000 && ele==0x00A0) return "Memory Bit Depth";
    if (grp==0x2000 && ele==0x00A1) return "Printing Bit Depth";
    if (grp==0x2000 && ele==0x00A2) return "Media Installed Sequence";
    if (grp==0x2000 && ele==0x00A4) return "Other Media Available Sequence";
    if (grp==0x2000 && ele==0x00A8) return "Supported Image Display Formats Sequence";
    if (grp==0x2000 && ele==0x0500) return "Referenced Film Box Sequence";
    if (grp==0x2000 && ele==0x0510) return "Referenced Stored Print Sequence	Retired";
    if (grp==0x2010 && ele==0x0010) return "Image Display Format";
    if (grp==0x2010 && ele==0x0030) return "Annotation Display Format ID";
    if (grp==0x2010 && ele==0x0040) return "Film Orientation";
    if (grp==0x2010 && ele==0x0050) return "Film Size ID";
    if (grp==0x2010 && ele==0x0052) return "Printer Resolution ID";
    if (grp==0x2010 && ele==0x0054) return "Default Printer Resolution ID";
    if (grp==0x2010 && ele==0x0060) return "Magnification Type";
    if (grp==0x2010 && ele==0x0080) return "Smoothing Type";
    if (grp==0x2010 && ele==0x00A6) return "Default Magnification Type";
    if (grp==0x2010 && ele==0x00A7) return "Other Magnification Types Available";
    if (grp==0x2010 && ele==0x00A8) return "Default Smoothing Type";
    if (grp==0x2010 && ele==0x00A9) return "Other Smoothing Types Available";
    if (grp==0x2010 && ele==0x0100) return "Border Density";
    if (grp==0x2010 && ele==0x0110) return "Empty Image Density";
    if (grp==0x2010 && ele==0x0120) return "Min Density";
    if (grp==0x2010 && ele==0x0130) return "Max Density";
    if (grp==0x2010 && ele==0x0140) return "Trim";
    if (grp==0x2010 && ele==0x0150) return "Configuration Information";
    if (grp==0x2010 && ele==0x0152) return "Configuration Information Description";
    if (grp==0x2010 && ele==0x0154) return "Maximum Collated Films";
    if (grp==0x2010 && ele==0x015E) return "Illumination";
    if (grp==0x2010 && ele==0x0160) return "Reflected Ambient Light";
    if (grp==0x2010 && ele==0x0376) return "Printer Pixel Spacing";
    if (grp==0x2010 && ele==0x0500) return "Referenced Film Session Sequence";
    if (grp==0x2010 && ele==0x0510) return "Referenced Image Box Sequence";
    if (grp==0x2010 && ele==0x0520) return "Referenced Basic Annotation Box Sequence";
    if (grp==0x2020 && ele==0x0010) return "Image Box Position";
    if (grp==0x2020 && ele==0x0020) return "Polarity";
    if (grp==0x2020 && ele==0x0030) return "Requested Image Size";
    if (grp==0x2020 && ele==0x0040) return "Requested Decimate/Crop Behavior";
    if (grp==0x2020 && ele==0x0050) return "Requested Resolution ID";
    if (grp==0x2020 && ele==0x00A0) return "Requested Image Size Flag";
    if (grp==0x2020 && ele==0x00A2) return "Decimate/Crop Result";
    if (grp==0x2020 && ele==0x0110) return "Basic Grayscale Image Sequence";
    if (grp==0x2020 && ele==0x0111) return "Basic Color Image Sequence";
    if (grp==0x2020 && ele==0x0130) return "Referenced Image Overlay Box Sequence	Retired";
    if (grp==0x2020 && ele==0x0140) return "Referenced VOI LUT Box Sequence	Retired";
    if (grp==0x2030 && ele==0x0010) return "Annotation Position";
    if (grp==0x2030 && ele==0x0020) return "Text String";
    if (grp==0x2040 && ele==0x0010) return "Referenced Overlay Plane Sequence	Retired";
    if (grp==0x2040 && ele==0x0011) return "Referenced Overlay Plane Groups	Retired";
    if (grp==0x2040 && ele==0x0020) return "Overlay Pixel Data Sequence	Retired";
    if (grp==0x2040 && ele==0x0060) return "Overlay Magnification Type	Retired";
    if (grp==0x2040 && ele==0x0070) return "Overlay Smoothing Type	Retired";
    if (grp==0x2040 && ele==0x0072) return "Overlay or Image Magnification	Retired";
    if (grp==0x2040 && ele==0x0074) return "Magnify to Number of Columns	Retired";
    if (grp==0x2040 && ele==0x0080) return "Overlay Foreground Density	Retired";
    if (grp==0x2040 && ele==0x0082) return "Overlay Background Density	Retired";
    if (grp==0x2040 && ele==0x0090) return "Overlay Mode	Retired";
    if (grp==0x2040 && ele==0x0100) return "Threshold Density	Retired";
    if (grp==0x2040 && ele==0x0500) return "Referenced Image Box Sequence (Retired)	Retired";
    if (grp==0x2050 && ele==0x0010) return "Presentation LUT Sequence";
    if (grp==0x2050 && ele==0x0020) return "Presentation LUT Shape";
    if (grp==0x2050 && ele==0x0500) return "Referenced Presentation LUT Sequence";
    if (grp==0x2100 && ele==0x0010) return "Print Job ID	Retired";
    if (grp==0x2100 && ele==0x0020) return "Execution Status";
    if (grp==0x2100 && ele==0x0030) return "Execution Status Info";
    if (grp==0x2100 && ele==0x0040) return "Creation Date";
    if (grp==0x2100 && ele==0x0050) return "Creation Time";
    if (grp==0x2100 && ele==0x0070) return "Originator";
    if (grp==0x2100 && ele==0x0140) return "Destination AE";
    if (grp==0x2100 && ele==0x0160) return "Owner ID";
    if (grp==0x2100 && ele==0x0170) return "Number of Films";
    if (grp==0x2100 && ele==0x0500) return "Referenced Print Job Sequence (Pull Stored Print)	Retired";
    if (grp==0x2110 && ele==0x0010) return "Printer Status";
    if (grp==0x2110 && ele==0x0020) return "Printer Status Info";
    if (grp==0x2110 && ele==0x0030) return "Printer Name";
    if (grp==0x2110 && ele==0x0099) return "Print Queue ID	Retired";
    if (grp==0x2120 && ele==0x0010) return "Queue Status	Retired";
    if (grp==0x2120 && ele==0x0050) return "Print Job Description Sequence	Retired";
    if (grp==0x2120 && ele==0x0070) return "Referenced Print Job Sequence	Retired";
    if (grp==0x2130 && ele==0x0010) return "Print Management Capabilities Sequence	Retired";
    if (grp==0x2130 && ele==0x0015) return "Printer Characteristics Sequence	Retired";
    if (grp==0x2130 && ele==0x0030) return "Film Box Content Sequence	Retired";
    if (grp==0x2130 && ele==0x0040) return "Image Box Content Sequence	Retired";
    if (grp==0x2130 && ele==0x0050) return "Annotation Content Sequence	Retired";
    if (grp==0x2130 && ele==0x0060) return "Image Overlay Box Content Sequence	Retired";
    if (grp==0x2130 && ele==0x0080) return "Presentation LUT Content Sequence	Retired";
    if (grp==0x2130 && ele==0x00A0) return "Proposed Study Sequence	Retired";
    if (grp==0x2130 && ele==0x00C0) return "Original Image Sequence	Retired";
    if (grp==0x2200 && ele==0x0001) return "Label Using Information Extracted From Instances";
    if (grp==0x2200 && ele==0x0002) return "Label Text";
    if (grp==0x2200 && ele==0x0003) return "Label Style Selection";
    if (grp==0x2200 && ele==0x0004) return "Media Disposition";
    if (grp==0x2200 && ele==0x0005) return "Barcode Value";
    if (grp==0x2200 && ele==0x0006) return "Barcode Symbology";
    if (grp==0x2200 && ele==0x0007) return "Allow Media Splitting";
    if (grp==0x2200 && ele==0x0008) return "Include Non-DICOM Objects";
    if (grp==0x2200 && ele==0x0009) return "Include Display Application";
    if (grp==0x2200 && ele==0x000A) return "Preserve Composite Instances After Media Creation";
    if (grp==0x2200 && ele==0x000B) return "Total Number of Pieces of Media Created";
    if (grp==0x2200 && ele==0x000C) return "Requested Media Application Profile";
    if (grp==0x2200 && ele==0x000D) return "Referenced Storage Media Sequence";
    if (grp==0x2200 && ele==0x000E) return "Failure Attributes";
    if (grp==0x2200 && ele==0x000F) return "Allow Lossy Compression";
    if (grp==0x2200 && ele==0x0020) return "Request Priority";
    if (grp==0x3002 && ele==0x0002) return "RT Image Label";
    if (grp==0x3002 && ele==0x0003) return "RT Image Name";
    if (grp==0x3002 && ele==0x0004) return "RT Image Description";
    if (grp==0x3002 && ele==0x000A) return "Reported Values Origin";
    if (grp==0x3002 && ele==0x000C) return "RT Image Plane";
    if (grp==0x3002 && ele==0x000D) return "X-Ray Image Receptor Translation";
    if (grp==0x3002 && ele==0x000E) return "X-Ray Image Receptor Angle";
    if (grp==0x3002 && ele==0x0010) return "RT Image Orientation";
    if (grp==0x3002 && ele==0x0011) return "Image Plane Pixel Spacing";
    if (grp==0x3002 && ele==0x0012) return "RT Image Position";
    if (grp==0x3002 && ele==0x0020) return "Radiation Machine Name";
    if (grp==0x3002 && ele==0x0022) return "Radiation Machine SAD";
    if (grp==0x3002 && ele==0x0024) return "Radiation Machine SSD";
    if (grp==0x3002 && ele==0x0026) return "RT Image SID";
    if (grp==0x3002 && ele==0x0028) return "Source to Reference Object Distance";
    if (grp==0x3002 && ele==0x0029) return "Fraction Number";
    if (grp==0x3002 && ele==0x0030) return "Exposure Sequence";
    if (grp==0x3002 && ele==0x0032) return "Meterset Exposure";
    if (grp==0x3002 && ele==0x0034) return "Diaphragm Position";
    if (grp==0x3002 && ele==0x0040) return "Fluence Map Sequence";
    if (grp==0x3002 && ele==0x0041) return "Fluence Data Source";
    if (grp==0x3002 && ele==0x0042) return "Fluence Data Scale";
    if (grp==0x3002 && ele==0x0050) return "Primary Fluence Mode Sequence";
    if (grp==0x3002 && ele==0x0051) return "Fluence Mode";
    if (grp==0x3002 && ele==0x0052) return "Fluence Mode ID";
    if (grp==0x3004 && ele==0x0001) return "DVH Type";
    if (grp==0x3004 && ele==0x0002) return "Dose Units";
    if (grp==0x3004 && ele==0x0004) return "Dose Type";
    if (grp==0x3004 && ele==0x0005) return "Spatial Transform of Dose";
    if (grp==0x3004 && ele==0x0006) return "Dose Comment";
    if (grp==0x3004 && ele==0x0008) return "Normalization Point";
    if (grp==0x3004 && ele==0x000A) return "Dose Summation Type";
    if (grp==0x3004 && ele==0x000C) return "Grid Frame Offset Vector";
    if (grp==0x3004 && ele==0x000E) return "Dose Grid Scaling";
    if (grp==0x3004 && ele==0x0010) return "RT Dose ROI Sequence";
    if (grp==0x3004 && ele==0x0012) return "Dose Value";
    if (grp==0x3004 && ele==0x0014) return "Tissue Heterogeneity Correction";
    if (grp==0x3004 && ele==0x0040) return "DVH Normalization Point";
    if (grp==0x3004 && ele==0x0042) return "DVH Normalization Dose Value";
    if (grp==0x3004 && ele==0x0050) return "DVH Sequence";
    if (grp==0x3004 && ele==0x0052) return "DVH Dose Scaling";
    if (grp==0x3004 && ele==0x0054) return "DVH Volume Units";
    if (grp==0x3004 && ele==0x0056) return "DVH Number of Bins";
    if (grp==0x3004 && ele==0x0058) return "DVH Data";
    if (grp==0x3004 && ele==0x0060) return "DVH Referenced ROI Sequence";
    if (grp==0x3004 && ele==0x0062) return "DVH ROI Contribution Type";
    if (grp==0x3004 && ele==0x0070) return "DVH Minimum Dose";
    if (grp==0x3004 && ele==0x0072) return "DVH Maximum Dose";
    if (grp==0x3004 && ele==0x0074) return "DVH Mean Dose";
    if (grp==0x3006 && ele==0x0002) return "Structure Set Label";
    if (grp==0x3006 && ele==0x0004) return "Structure Set Name";
    if (grp==0x3006 && ele==0x0006) return "Structure Set Description";
    if (grp==0x3006 && ele==0x0008) return "Structure Set Date";
    if (grp==0x3006 && ele==0x0009) return "Structure Set Time";
    if (grp==0x3006 && ele==0x0010) return "Referenced Frame of Reference Sequence";
    if (grp==0x3006 && ele==0x0012) return "RT Referenced Study Sequence";
    if (grp==0x3006 && ele==0x0014) return "RT Referenced Series Sequence";
    if (grp==0x3006 && ele==0x0016) return "Contour Image Sequence";
    if (grp==0x3006 && ele==0x0018) return "Predecessor Structure Set Sequence";
    if (grp==0x3006 && ele==0x0020) return "Structure Set ROI Sequence";
    if (grp==0x3006 && ele==0x0022) return "ROI Number";
    if (grp==0x3006 && ele==0x0024) return "Referenced Frame of Reference UID";
    if (grp==0x3006 && ele==0x0026) return "ROI Name";
    if (grp==0x3006 && ele==0x0028) return "ROI Description";
    if (grp==0x3006 && ele==0x002A) return "ROI Display Color";
    if (grp==0x3006 && ele==0x002C) return "ROI Volume";
    if (grp==0x3006 && ele==0x0030) return "RT Related ROI Sequence";
    if (grp==0x3006 && ele==0x0033) return "RT ROI Relationship";
    if (grp==0x3006 && ele==0x0036) return "ROI Generation Algorithm";
    if (grp==0x3006 && ele==0x0038) return "ROI Generation Description";
    if (grp==0x3006 && ele==0x0039) return "ROI Contour Sequence";
    if (grp==0x3006 && ele==0x0040) return "Contour Sequence";
    if (grp==0x3006 && ele==0x0042) return "Contour Geometric Type";
    if (grp==0x3006 && ele==0x0044) return "Contour Slab Thickness";
    if (grp==0x3006 && ele==0x0045) return "Contour Offset Vector";
    if (grp==0x3006 && ele==0x0046) return "Number of Contour Points";
    if (grp==0x3006 && ele==0x0048) return "Contour Number";
    if (grp==0x3006 && ele==0x0049) return "Attached Contours";
    if (grp==0x3006 && ele==0x0050) return "Contour Data";
    if (grp==0x3006 && ele==0x0080) return "RT ROI Observations Sequence";
    if (grp==0x3006 && ele==0x0082) return "Observation Number";
    if (grp==0x3006 && ele==0x0084) return "Referenced ROI Number";
    if (grp==0x3006 && ele==0x0085) return "ROI Observation Label";
    if (grp==0x3006 && ele==0x0086) return "RT ROI Identification Code Sequence";
    if (grp==0x3006 && ele==0x0088) return "ROI Observation Description";
    if (grp==0x3006 && ele==0x00A0) return "Related RT ROI Observations Sequence";
    if (grp==0x3006 && ele==0x00A4) return "RT ROI Interpreted Type";
    if (grp==0x3006 && ele==0x00A6) return "ROI Interpreter";
    if (grp==0x3006 && ele==0x00B0) return "ROI Physical Properties Sequence";
    if (grp==0x3006 && ele==0x00B2) return "ROI Physical Property";
    if (grp==0x3006 && ele==0x00B4) return "ROI Physical Property Value";
    if (grp==0x3006 && ele==0x00B6) return "ROI Elemental Composition Sequence";
    if (grp==0x3006 && ele==0x00B7) return "ROI Elemental Composition Atomic Number";
    if (grp==0x3006 && ele==0x00B8) return "ROI Elemental Composition Atomic Mass Fraction";
    if (grp==0x3006 && ele==0x00B9) return "Additional RT ROI Identification Code Sequence";
    if (grp==0x3006 && ele==0x00C0) return "Frame of Reference Relationship Sequence	Retired";
    if (grp==0x3006 && ele==0x00C2) return "Related Frame of Reference UID	Retired";
    if (grp==0x3006 && ele==0x00C4) return "Frame of Reference Transformation Type	Retired";
    if (grp==0x3006 && ele==0x00C6) return "Frame of Reference Transformation Matrix";
    if (grp==0x3006 && ele==0x00C8) return "Frame of Reference Transformation Comment";
    if (grp==0x3008 && ele==0x0010) return "Measured Dose Reference Sequence";
    if (grp==0x3008 && ele==0x0012) return "Measured Dose Description";
    if (grp==0x3008 && ele==0x0014) return "Measured Dose Type";
    if (grp==0x3008 && ele==0x0016) return "Measured Dose Value";
    if (grp==0x3008 && ele==0x0020) return "Treatment Session Beam Sequence";
    if (grp==0x3008 && ele==0x0021) return "Treatment Session Ion Beam Sequence";
    if (grp==0x3008 && ele==0x0022) return "Current Fraction Number";
    if (grp==0x3008 && ele==0x0024) return "Treatment Control Point Date";
    if (grp==0x3008 && ele==0x0025) return "Treatment Control Point Time";
    if (grp==0x3008 && ele==0x002A) return "Treatment Termination Status";
    if (grp==0x3008 && ele==0x002B) return "Treatment Termination Code";
    if (grp==0x3008 && ele==0x002C) return "Treatment Verification Status";
    if (grp==0x3008 && ele==0x0030) return "Referenced Treatment Record Sequence";
    if (grp==0x3008 && ele==0x0032) return "Specified Primary Meterset";
    if (grp==0x3008 && ele==0x0033) return "Specified Secondary Meterset";
    if (grp==0x3008 && ele==0x0036) return "Delivered Primary Meterset";
    if (grp==0x3008 && ele==0x0037) return "Delivered Secondary Meterset";
    if (grp==0x3008 && ele==0x003A) return "Specified Treatment Time";
    if (grp==0x3008 && ele==0x003B) return "Delivered Treatment Time";
    if (grp==0x3008 && ele==0x0040) return "Control Point Delivery Sequence";
    if (grp==0x3008 && ele==0x0041) return "Ion Control Point Delivery Sequence";
    if (grp==0x3008 && ele==0x0042) return "Specified Meterset";
    if (grp==0x3008 && ele==0x0044) return "Delivered Meterset";
    if (grp==0x3008 && ele==0x0045) return "Meterset Rate Set";
    if (grp==0x3008 && ele==0x0046) return "Meterset Rate Delivered";
    if (grp==0x3008 && ele==0x0047) return "Scan Spot Metersets Delivered";
    if (grp==0x3008 && ele==0x0048) return "Dose Rate Delivered";
    if (grp==0x3008 && ele==0x0050) return "Treatment Summary Calculated Dose Reference Sequence";
    if (grp==0x3008 && ele==0x0052) return "Cumulative Dose to Dose Reference";
    if (grp==0x3008 && ele==0x0054) return "First Treatment Date";
    if (grp==0x3008 && ele==0x0056) return "Most Recent Treatment Date";
    if (grp==0x3008 && ele==0x005A) return "Number of Fractions Delivered";
    if (grp==0x3008 && ele==0x0060) return "Override Sequence";
    if (grp==0x3008 && ele==0x0061) return "Parameter Sequence Pointer";
    if (grp==0x3008 && ele==0x0062) return "Override Parameter Pointer";
    if (grp==0x3008 && ele==0x0063) return "Parameter Item Index";
    if (grp==0x3008 && ele==0x0064) return "Measured Dose Reference Number";
    if (grp==0x3008 && ele==0x0065) return "Parameter Pointer";
    if (grp==0x3008 && ele==0x0066) return "Override Reason";
    if (grp==0x3008 && ele==0x0068) return "Corrected Parameter Sequence";
    if (grp==0x3008 && ele==0x006A) return "Correction Value";
    if (grp==0x3008 && ele==0x0070) return "Calculated Dose Reference Sequence";
    if (grp==0x3008 && ele==0x0072) return "Calculated Dose Reference Number";
    if (grp==0x3008 && ele==0x0074) return "Calculated Dose Reference Description";
    if (grp==0x3008 && ele==0x0076) return "Calculated Dose Reference Dose Value";
    if (grp==0x3008 && ele==0x0078) return "Start Meterset";
    if (grp==0x3008 && ele==0x007A) return "End Meterset";
    if (grp==0x3008 && ele==0x0080) return "Referenced Measured Dose Reference Sequence";
    if (grp==0x3008 && ele==0x0082) return "Referenced Measured Dose Reference Number";
    if (grp==0x3008 && ele==0x0090) return "Referenced Calculated Dose Reference Sequence";
    if (grp==0x3008 && ele==0x0092) return "Referenced Calculated Dose Reference Number";
    if (grp==0x3008 && ele==0x00A0) return "Beam Limiting Device Leaf Pairs Sequence";
    if (grp==0x3008 && ele==0x00B0) return "Recorded Wedge Sequence";
    if (grp==0x3008 && ele==0x00C0) return "Recorded Compensator Sequence";
    if (grp==0x3008 && ele==0x00D0) return "Recorded Block Sequence";
    if (grp==0x3008 && ele==0x00E0) return "Treatment Summary Measured Dose Reference Sequence";
    if (grp==0x3008 && ele==0x00F0) return "Recorded Snout Sequence";
    if (grp==0x3008 && ele==0x00F2) return "Recorded Range Shifter Sequence";
    if (grp==0x3008 && ele==0x00F4) return "Recorded Lateral Spreading Device Sequence";
    if (grp==0x3008 && ele==0x00F6) return "Recorded Range Modulator Sequence";
    if (grp==0x3008 && ele==0x0100) return "Recorded Source Sequence";
    if (grp==0x3008 && ele==0x0105) return "Source Serial Number";
    if (grp==0x3008 && ele==0x0110) return "Treatment Session Application Setup Sequence";
    if (grp==0x3008 && ele==0x0116) return "Application Setup Check";
    if (grp==0x3008 && ele==0x0120) return "Recorded Brachy Accessory Device Sequence";
    if (grp==0x3008 && ele==0x0122) return "Referenced Brachy Accessory Device Number";
    if (grp==0x3008 && ele==0x0130) return "Recorded Channel Sequence";
    if (grp==0x3008 && ele==0x0132) return "Specified Channel Total Time";
    if (grp==0x3008 && ele==0x0134) return "Delivered Channel Total Time";
    if (grp==0x3008 && ele==0x0136) return "Specified Number of Pulses";
    if (grp==0x3008 && ele==0x0138) return "Delivered Number of Pulses";
    if (grp==0x3008 && ele==0x013A) return "Specified Pulse Repetition Interval";
    if (grp==0x3008 && ele==0x013C) return "Delivered Pulse Repetition Interval";
    if (grp==0x3008 && ele==0x0140) return "Recorded Source Applicator Sequence";
    if (grp==0x3008 && ele==0x0142) return "Referenced Source Applicator Number";
    if (grp==0x3008 && ele==0x0150) return "Recorded Channel Shield Sequence";
    if (grp==0x3008 && ele==0x0152) return "Referenced Channel Shield Number";
    if (grp==0x3008 && ele==0x0160) return "Brachy Control Point Delivered Sequence";
    if (grp==0x3008 && ele==0x0162) return "Safe Position Exit Date";
    if (grp==0x3008 && ele==0x0164) return "Safe Position Exit Time";
    if (grp==0x3008 && ele==0x0166) return "Safe Position Return Date";
    if (grp==0x3008 && ele==0x0168) return "Safe Position Return Time";
    if (grp==0x3008 && ele==0x0171) return "Pulse Specific Brachy Control Point Delivered Sequence";
    if (grp==0x3008 && ele==0x0172) return "Pulse Number";
    if (grp==0x3008 && ele==0x0173) return "Brachy Pulse Control Point Delivered Sequence";
    if (grp==0x3008 && ele==0x0200) return "Current Treatment Status";
    if (grp==0x3008 && ele==0x0202) return "Treatment Status Comment";
    if (grp==0x3008 && ele==0x0220) return "Fraction Group Summary Sequence";
    if (grp==0x3008 && ele==0x0223) return "Referenced Fraction Number";
    if (grp==0x3008 && ele==0x0224) return "Fraction Group Type";
    if (grp==0x3008 && ele==0x0230) return "Beam Stopper Position";
    if (grp==0x3008 && ele==0x0240) return "Fraction Status Summary Sequence";
    if (grp==0x3008 && ele==0x0250) return "Treatment Date";
    if (grp==0x3008 && ele==0x0251) return "Treatment Time";
    if (grp==0x300A && ele==0x0002) return "RT Plan Label";
    if (grp==0x300A && ele==0x0003) return "RT Plan Name";
    if (grp==0x300A && ele==0x0004) return "RT Plan Description";
    if (grp==0x300A && ele==0x0006) return "RT Plan Date";
    if (grp==0x300A && ele==0x0007) return "RT Plan Time";
    if (grp==0x300A && ele==0x0009) return "Treatment Protocols";
    if (grp==0x300A && ele==0x000A) return "Plan Intent";
    if (grp==0x300A && ele==0x000B) return "Treatment Sites";
    if (grp==0x300A && ele==0x000C) return "RT Plan Geometry";
    if (grp==0x300A && ele==0x000E) return "Prescription Description";
    if (grp==0x300A && ele==0x0010) return "Dose Reference Sequence";
    if (grp==0x300A && ele==0x0012) return "Dose Reference Number";
    if (grp==0x300A && ele==0x0013) return "Dose Reference UID";
    if (grp==0x300A && ele==0x0014) return "Dose Reference Structure Type";
    if (grp==0x300A && ele==0x0015) return "Nominal Beam Energy Unit";
    if (grp==0x300A && ele==0x0016) return "Dose Reference Description";
    if (grp==0x300A && ele==0x0018) return "Dose Reference Point Coordinates";
    if (grp==0x300A && ele==0x001A) return "Nominal Prior Dose";
    if (grp==0x300A && ele==0x0020) return "Dose Reference Type";
    if (grp==0x300A && ele==0x0021) return "Constraint Weight";
    if (grp==0x300A && ele==0x0022) return "Delivery Warning Dose";
    if (grp==0x300A && ele==0x0023) return "Delivery Maximum Dose";
    if (grp==0x300A && ele==0x0025) return "Target Minimum Dose";
    if (grp==0x300A && ele==0x0026) return "Target Prescription Dose";
    if (grp==0x300A && ele==0x0027) return "Target Maximum Dose";
    if (grp==0x300A && ele==0x0028) return "Target Underdose Volume Fraction";
    if (grp==0x300A && ele==0x002A) return "Organ at Risk Full-volume Dose";
    if (grp==0x300A && ele==0x002B) return "Organ at Risk Limit Dose";
    if (grp==0x300A && ele==0x002C) return "Organ at Risk Maximum Dose";
    if (grp==0x300A && ele==0x002D) return "Organ at Risk Overdose Volume Fraction";
    if (grp==0x300A && ele==0x0040) return "Tolerance Table Sequence";
    if (grp==0x300A && ele==0x0042) return "Tolerance Table Number";
    if (grp==0x300A && ele==0x0043) return "Tolerance Table Label";
    if (grp==0x300A && ele==0x0044) return "Gantry Angle Tolerance";
    if (grp==0x300A && ele==0x0046) return "Beam Limiting Device Angle Tolerance";
    if (grp==0x300A && ele==0x0048) return "Beam Limiting Device Tolerance Sequence";
    if (grp==0x300A && ele==0x004A) return "Beam Limiting Device Position Tolerance";
    if (grp==0x300A && ele==0x004B) return "Snout Position Tolerance";
    if (grp==0x300A && ele==0x004C) return "Patient Support Angle Tolerance";
    if (grp==0x300A && ele==0x004E) return "Table Top Eccentric Angle Tolerance";
    if (grp==0x300A && ele==0x004F) return "Table Top Pitch Angle Tolerance";
    if (grp==0x300A && ele==0x0050) return "Table Top Roll Angle Tolerance";
    if (grp==0x300A && ele==0x0051) return "Table Top Vertical Position Tolerance";
    if (grp==0x300A && ele==0x0052) return "Table Top Longitudinal Position Tolerance";
    if (grp==0x300A && ele==0x0053) return "Table Top Lateral Position Tolerance";
    if (grp==0x300A && ele==0x0055) return "RT Plan Relationship";
    if (grp==0x300A && ele==0x0070) return "Fraction Group Sequence";
    if (grp==0x300A && ele==0x0071) return "Fraction Group Number";
    if (grp==0x300A && ele==0x0072) return "Fraction Group Description";
    if (grp==0x300A && ele==0x0078) return "Number of Fractions Planned";
    if (grp==0x300A && ele==0x0079) return "Number of Fraction Pattern Digits Per Day";
    if (grp==0x300A && ele==0x007A) return "Repeat Fraction Cycle Length";
    if (grp==0x300A && ele==0x007B) return "Fraction Pattern";
    if (grp==0x300A && ele==0x0080) return "Number of Beams";
    if (grp==0x300A && ele==0x0082) return "Beam Dose Specification Point";
    if (grp==0x300A && ele==0x0084) return "Beam Dose";
    if (grp==0x300A && ele==0x0086) return "Beam Meterset";
    if (grp==0x300A && ele==0x0088) return "Beam Dose Point Depth	Retired";
    if (grp==0x300A && ele==0x0089) return "Beam Dose Point Equivalent Depth	Retired";
    if (grp==0x300A && ele==0x008A) return "Beam Dose Point SSD	Retired";
    if (grp==0x300A && ele==0x008B) return "Beam Dose Meaning";
    if (grp==0x300A && ele==0x008C) return "Beam Dose Verification Control Point Sequence";
    if (grp==0x300A && ele==0x008D) return "Average Beam Dose Point Depth";
    if (grp==0x300A && ele==0x008E) return "Average Beam Dose Point Equivalent Depth";
    if (grp==0x300A && ele==0x008F) return "Average Beam Dose Point SSD";
    if (grp==0x300A && ele==0x0090) return "Beam Dose Type";
    if (grp==0x300A && ele==0x0091) return "Alternate Beam Dose";
    if (grp==0x300A && ele==0x0092) return "Alternate Beam Dose Type";
    if (grp==0x300A && ele==0x00A0) return "Number of Brachy Application Setups";
    if (grp==0x300A && ele==0x00A2) return "Brachy Application Setup Dose Specification Point";
    if (grp==0x300A && ele==0x00A4) return "Brachy Application Setup Dose";
    if (grp==0x300A && ele==0x00B0) return "Beam Sequence";
    if (grp==0x300A && ele==0x00B2) return "Treatment Machine Name";
    if (grp==0x300A && ele==0x00B3) return "Primary Dosimeter Unit";
    if (grp==0x300A && ele==0x00B4) return "Source-Axis Distance";
    if (grp==0x300A && ele==0x00B6) return "Beam Limiting Device Sequence";
    if (grp==0x300A && ele==0x00B8) return "RT Beam Limiting Device Type";
    if (grp==0x300A && ele==0x00BA) return "Source to Beam Limiting Device Distance";
    if (grp==0x300A && ele==0x00BB) return "Isocenter to Beam Limiting Device Distance";
    if (grp==0x300A && ele==0x00BC) return "Number of Leaf/Jaw Pairs";
    if (grp==0x300A && ele==0x00BE) return "Leaf Position Boundaries";
    if (grp==0x300A && ele==0x00C0) return "Beam Number";
    if (grp==0x300A && ele==0x00C2) return "Beam Name";
    if (grp==0x300A && ele==0x00C3) return "Beam Description";
    if (grp==0x300A && ele==0x00C4) return "Beam Type";
    if (grp==0x300A && ele==0x00C5) return "Beam Delivery Duration Limit";
    if (grp==0x300A && ele==0x00C6) return "Radiation Type";
    if (grp==0x300A && ele==0x00C7) return "High-Dose Technique Type";
    if (grp==0x300A && ele==0x00C8) return "Reference Image Number";
    if (grp==0x300A && ele==0x00CA) return "Planned Verification Image Sequence";
    if (grp==0x300A && ele==0x00CC) return "Imaging Device-Specific Acquisition Parameters";
    if (grp==0x300A && ele==0x00CE) return "Treatment Delivery Type";
    if (grp==0x300A && ele==0x00D0) return "Number of Wedges";
    if (grp==0x300A && ele==0x00D1) return "Wedge Sequence";
    if (grp==0x300A && ele==0x00D2) return "Wedge Number";
    if (grp==0x300A && ele==0x00D3) return "Wedge Type";
    if (grp==0x300A && ele==0x00D4) return "Wedge ID";
    if (grp==0x300A && ele==0x00D5) return "Wedge Angle";
    if (grp==0x300A && ele==0x00D6) return "Wedge Factor";
    if (grp==0x300A && ele==0x00D7) return "Total Wedge Tray Water-Equivalent Thickness";
    if (grp==0x300A && ele==0x00D8) return "Wedge Orientation";
    if (grp==0x300A && ele==0x00D9) return "Isocenter to Wedge Tray Distance";
    if (grp==0x300A && ele==0x00DA) return "Source to Wedge Tray Distance";
    if (grp==0x300A && ele==0x00DB) return "Wedge Thin Edge Position";
    if (grp==0x300A && ele==0x00DC) return "Bolus ID";
    if (grp==0x300A && ele==0x00DD) return "Bolus Description";
    if (grp==0x300A && ele==0x00DE) return "Effective Wedge Angle";
    if (grp==0x300A && ele==0x00E0) return "Number of Compensators";
    if (grp==0x300A && ele==0x00E1) return "Material ID";
    if (grp==0x300A && ele==0x00E2) return "Total Compensator Tray Factor";
    if (grp==0x300A && ele==0x00E3) return "Compensator Sequence";
    if (grp==0x300A && ele==0x00E4) return "Compensator Number";
    if (grp==0x300A && ele==0x00E5) return "Compensator ID";
    if (grp==0x300A && ele==0x00E6) return "Source to Compensator Tray Distance";
    if (grp==0x300A && ele==0x00E7) return "Compensator Rows";
    if (grp==0x300A && ele==0x00E8) return "Compensator Columns";
    if (grp==0x300A && ele==0x00E9) return "Compensator Pixel Spacing";
    if (grp==0x300A && ele==0x00EA) return "Compensator Position";
    if (grp==0x300A && ele==0x00EB) return "Compensator Transmission Data";
    if (grp==0x300A && ele==0x00EC) return "Compensator Thickness Data";
    if (grp==0x300A && ele==0x00ED) return "Number of Boli";
    if (grp==0x300A && ele==0x00EE) return "Compensator Type";
    if (grp==0x300A && ele==0x00EF) return "Compensator Tray ID";
    if (grp==0x300A && ele==0x00F0) return "Number of Blocks";
    if (grp==0x300A && ele==0x00F2) return "Total Block Tray Factor";
    if (grp==0x300A && ele==0x00F3) return "Total Block Tray Water-Equivalent Thickness";
    if (grp==0x300A && ele==0x00F4) return "Block Sequence";
    if (grp==0x300A && ele==0x00F5) return "Block Tray ID";
    if (grp==0x300A && ele==0x00F6) return "Source to Block Tray Distance";
    if (grp==0x300A && ele==0x00F7) return "Isocenter to Block Tray Distance";
    if (grp==0x300A && ele==0x00F8) return "Block Type";
    if (grp==0x300A && ele==0x00F9) return "Accessory Code";
    if (grp==0x300A && ele==0x00FA) return "Block Divergence";
    if (grp==0x300A && ele==0x00FB) return "Block Mounting Position";
    if (grp==0x300A && ele==0x00FC) return "Block Number";
    if (grp==0x300A && ele==0x00FE) return "Block Name";
    if (grp==0x300A && ele==0x0100) return "Block Thickness";
    if (grp==0x300A && ele==0x0102) return "Block Transmission";
    if (grp==0x300A && ele==0x0104) return "Block Number of Points";
    if (grp==0x300A && ele==0x0106) return "Block Data";
    if (grp==0x300A && ele==0x0107) return "Applicator Sequence";
    if (grp==0x300A && ele==0x0108) return "Applicator ID";
    if (grp==0x300A && ele==0x0109) return "Applicator Type";
    if (grp==0x300A && ele==0x010A) return "Applicator Description";
    if (grp==0x300A && ele==0x010C) return "Cumulative Dose Reference Coefficient";
    if (grp==0x300A && ele==0x010E) return "Final Cumulative Meterset Weight";
    if (grp==0x300A && ele==0x0110) return "Number of Control Points";
    if (grp==0x300A && ele==0x0111) return "Control Point Sequence";
    if (grp==0x300A && ele==0x0112) return "Control Point Index";
    if (grp==0x300A && ele==0x0114) return "Nominal Beam Energy";
    if (grp==0x300A && ele==0x0115) return "Dose Rate Set";
    if (grp==0x300A && ele==0x0116) return "Wedge Position Sequence";
    if (grp==0x300A && ele==0x0118) return "Wedge Position";
    if (grp==0x300A && ele==0x011A) return "Beam Limiting Device Position Sequence";
    if (grp==0x300A && ele==0x011C) return "Leaf/Jaw Positions";
    if (grp==0x300A && ele==0x011E) return "Gantry Angle";
    if (grp==0x300A && ele==0x011F) return "Gantry Rotation Direction";
    if (grp==0x300A && ele==0x0120) return "Beam Limiting Device Angle";
    if (grp==0x300A && ele==0x0121) return "Beam Limiting Device Rotation Direction";
    if (grp==0x300A && ele==0x0122) return "Patient Support Angle";
    if (grp==0x300A && ele==0x0123) return "Patient Support Rotation Direction";
    if (grp==0x300A && ele==0x0124) return "Table Top Eccentric Axis Distance";
    if (grp==0x300A && ele==0x0125) return "Table Top Eccentric Angle";
    if (grp==0x300A && ele==0x0126) return "Table Top Eccentric Rotation Direction";
    if (grp==0x300A && ele==0x0128) return "Table Top Vertical Position";
    if (grp==0x300A && ele==0x0129) return "Table Top Longitudinal Position";
    if (grp==0x300A && ele==0x012A) return "Table Top Lateral Position";
    if (grp==0x300A && ele==0x012C) return "Isocenter Position";
    if (grp==0x300A && ele==0x012E) return "Surface Entry Point";
    if (grp==0x300A && ele==0x0130) return "Source to Surface Distance";
    if (grp==0x300A && ele==0x0131) return "Average Beam Dose Point Source to External Contour Distance";
    if (grp==0x300A && ele==0x0132) return "Source to External Contour Distance";
    if (grp==0x300A && ele==0x0133) return "External Contour Entry Point";
    if (grp==0x300A && ele==0x0134) return "Cumulative Meterset Weight";
    if (grp==0x300A && ele==0x0140) return "Table Top Pitch Angle";
    if (grp==0x300A && ele==0x0142) return "Table Top Pitch Rotation Direction";
    if (grp==0x300A && ele==0x0144) return "Table Top Roll Angle";
    if (grp==0x300A && ele==0x0146) return "Table Top Roll Rotation Direction";
    if (grp==0x300A && ele==0x0148) return "Head Fixation Angle";
    if (grp==0x300A && ele==0x014A) return "Gantry Pitch Angle";
    if (grp==0x300A && ele==0x014C) return "Gantry Pitch Rotation Direction";
    if (grp==0x300A && ele==0x014E) return "Gantry Pitch Angle Tolerance";
    if (grp==0x300A && ele==0x0150) return "Fixation Eye";
    if (grp==0x300A && ele==0x0151) return "Chair Head Frame Position";
    if (grp==0x300A && ele==0x0152) return "Head Fixation Angle Tolerance";
    if (grp==0x300A && ele==0x0153) return "Chair Head Frame Position Tolerance";
    if (grp==0x300A && ele==0x0154) return "Fixation Light Azimuthal Angle Tolerance";
    if (grp==0x300A && ele==0x0155) return "Fixation Light Polar Angle Tolerance";
    if (grp==0x300A && ele==0x0180) return "Patient Setup Sequence";
    if (grp==0x300A && ele==0x0182) return "Patient Setup Number";
    if (grp==0x300A && ele==0x0183) return "Patient Setup Label";
    if (grp==0x300A && ele==0x0184) return "Patient Additional Position";
    if (grp==0x300A && ele==0x0190) return "Fixation Device Sequence";
    if (grp==0x300A && ele==0x0192) return "Fixation Device Type";
    if (grp==0x300A && ele==0x0194) return "Fixation Device Label";
    if (grp==0x300A && ele==0x0196) return "Fixation Device Description";
    if (grp==0x300A && ele==0x0198) return "Fixation Device Position";
    if (grp==0x300A && ele==0x0199) return "Fixation Device Pitch Angle";
    if (grp==0x300A && ele==0x019A) return "Fixation Device Roll Angle";
    if (grp==0x300A && ele==0x01A0) return "Shielding Device Sequence";
    if (grp==0x300A && ele==0x01A2) return "Shielding Device Type";
    if (grp==0x300A && ele==0x01A4) return "Shielding Device Label";
    if (grp==0x300A && ele==0x01A6) return "Shielding Device Description";
    if (grp==0x300A && ele==0x01A8) return "Shielding Device Position";
    if (grp==0x300A && ele==0x01B0) return "Setup Technique";
    if (grp==0x300A && ele==0x01B2) return "Setup Technique Description";
    if (grp==0x300A && ele==0x01B4) return "Setup Device Sequence";
    if (grp==0x300A && ele==0x01B6) return "Setup Device Type";
    if (grp==0x300A && ele==0x01B8) return "Setup Device Label";
    if (grp==0x300A && ele==0x01BA) return "Setup Device Description";
    if (grp==0x300A && ele==0x01BC) return "Setup Device Parameter";
    if (grp==0x300A && ele==0x01D0) return "Setup Reference Description";
    if (grp==0x300A && ele==0x01D2) return "Table Top Vertical Setup Displacement";
    if (grp==0x300A && ele==0x01D4) return "Table Top Longitudinal Setup Displacement";
    if (grp==0x300A && ele==0x01D6) return "Table Top Lateral Setup Displacement";
    if (grp==0x300A && ele==0x0200) return "Brachy Treatment Technique";
    if (grp==0x300A && ele==0x0202) return "Brachy Treatment Type";
    if (grp==0x300A && ele==0x0206) return "Treatment Machine Sequence";
    if (grp==0x300A && ele==0x0210) return "Source Sequence";
    if (grp==0x300A && ele==0x0212) return "Source Number";
    if (grp==0x300A && ele==0x0214) return "Source Type";
    if (grp==0x300A && ele==0x0216) return "Source Manufacturer";
    if (grp==0x300A && ele==0x0218) return "Active Source Diameter";
    if (grp==0x300A && ele==0x021A) return "Active Source Length";
    if (grp==0x300A && ele==0x021B) return "Source Model ID";
    if (grp==0x300A && ele==0x021C) return "Source Description";
    if (grp==0x300A && ele==0x0222) return "Source Encapsulation Nominal Thickness";
    if (grp==0x300A && ele==0x0224) return "Source Encapsulation Nominal Transmission";
    if (grp==0x300A && ele==0x0226) return "Source Isotope Name";
    if (grp==0x300A && ele==0x0228) return "Source Isotope Half Life";
    if (grp==0x300A && ele==0x0229) return "Source Strength Units";
    if (grp==0x300A && ele==0x022A) return "Reference Air Kerma Rate";
    if (grp==0x300A && ele==0x022B) return "Source Strength";
    if (grp==0x300A && ele==0x022C) return "Source Strength Reference Date";
    if (grp==0x300A && ele==0x022E) return "Source Strength Reference Time";
    if (grp==0x300A && ele==0x0230) return "Application Setup Sequence";
    if (grp==0x300A && ele==0x0232) return "Application Setup Type";
    if (grp==0x300A && ele==0x0234) return "Application Setup Number";
    if (grp==0x300A && ele==0x0236) return "Application Setup Name";
    if (grp==0x300A && ele==0x0238) return "Application Setup Manufacturer";
    if (grp==0x300A && ele==0x0240) return "Template Number";
    if (grp==0x300A && ele==0x0242) return "Template Type";
    if (grp==0x300A && ele==0x0244) return "Template Name";
    if (grp==0x300A && ele==0x0250) return "Total Reference Air Kerma";
    if (grp==0x300A && ele==0x0260) return "Brachy Accessory Device Sequence";
    if (grp==0x300A && ele==0x0262) return "Brachy Accessory Device Number";
    if (grp==0x300A && ele==0x0263) return "Brachy Accessory Device ID";
    if (grp==0x300A && ele==0x0264) return "Brachy Accessory Device Type";
    if (grp==0x300A && ele==0x0266) return "Brachy Accessory Device Name";
    if (grp==0x300A && ele==0x026A) return "Brachy Accessory Device Nominal Thickness";
    if (grp==0x300A && ele==0x026C) return "Brachy Accessory Device Nominal Transmission";
    if (grp==0x300A && ele==0x0280) return "Channel Sequence";
    if (grp==0x300A && ele==0x0282) return "Channel Number";
    if (grp==0x300A && ele==0x0284) return "Channel Length";
    if (grp==0x300A && ele==0x0286) return "Channel Total Time";
    if (grp==0x300A && ele==0x0288) return "Source Movement Type";
    if (grp==0x300A && ele==0x028A) return "Number of Pulses";
    if (grp==0x300A && ele==0x028C) return "Pulse Repetition Interval";
    if (grp==0x300A && ele==0x0290) return "Source Applicator Number";
    if (grp==0x300A && ele==0x0291) return "Source Applicator ID";
    if (grp==0x300A && ele==0x0292) return "Source Applicator Type";
    if (grp==0x300A && ele==0x0294) return "Source Applicator Name";
    if (grp==0x300A && ele==0x0296) return "Source Applicator Length";
    if (grp==0x300A && ele==0x0298) return "Source Applicator Manufacturer";
    if (grp==0x300A && ele==0x029C) return "Source Applicator Wall Nominal Thickness";
    if (grp==0x300A && ele==0x029E) return "Source Applicator Wall Nominal Transmission";
    if (grp==0x300A && ele==0x02A0) return "Source Applicator Step Size";
    if (grp==0x300A && ele==0x02A2) return "Transfer Tube Number";
    if (grp==0x300A && ele==0x02A4) return "Transfer Tube Length";
    if (grp==0x300A && ele==0x02B0) return "Channel Shield Sequence";
    if (grp==0x300A && ele==0x02B2) return "Channel Shield Number";
    if (grp==0x300A && ele==0x02B3) return "Channel Shield ID";
    if (grp==0x300A && ele==0x02B4) return "Channel Shield Name";
    if (grp==0x300A && ele==0x02B8) return "Channel Shield Nominal Thickness";
    if (grp==0x300A && ele==0x02BA) return "Channel Shield Nominal Transmission";
    if (grp==0x300A && ele==0x02C8) return "Final Cumulative Time Weight";
    if (grp==0x300A && ele==0x02D0) return "Brachy Control Point Sequence";
    if (grp==0x300A && ele==0x02D2) return "Control Point Relative Position";
    if (grp==0x300A && ele==0x02D4) return "Control Point 3D Position";
    if (grp==0x300A && ele==0x02D6) return "Cumulative Time Weight";
    if (grp==0x300A && ele==0x02E0) return "Compensator Divergence";
    if (grp==0x300A && ele==0x02E1) return "Compensator Mounting Position";
    if (grp==0x300A && ele==0x02E2) return "Source to Compensator Distance";
    if (grp==0x300A && ele==0x02E3) return "Total Compensator Tray Water-Equivalent Thickness";
    if (grp==0x300A && ele==0x02E4) return "Isocenter to Compensator Tray Distance";
    if (grp==0x300A && ele==0x02E5) return "Compensator Column Offset";
    if (grp==0x300A && ele==0x02E6) return "Isocenter to Compensator Distances";
    if (grp==0x300A && ele==0x02E7) return "Compensator Relative Stopping Power Ratio";
    if (grp==0x300A && ele==0x02E8) return "Compensator Milling Tool Diameter";
    if (grp==0x300A && ele==0x02EA) return "Ion Range Compensator Sequence";
    if (grp==0x300A && ele==0x02EB) return "Compensator Description";
    if (grp==0x300A && ele==0x0302) return "Radiation Mass Number";
    if (grp==0x300A && ele==0x0304) return "Radiation Atomic Number";
    if (grp==0x300A && ele==0x0306) return "Radiation Charge State";
    if (grp==0x300A && ele==0x0308) return "Scan Mode";
    if (grp==0x300A && ele==0x0309) return "Modulated Scan Mode Type";
    if (grp==0x300A && ele==0x030A) return "Virtual Source-Axis Distances";
    if (grp==0x300A && ele==0x030C) return "Snout Sequence";
    if (grp==0x300A && ele==0x030D) return "Snout Position";
    if (grp==0x300A && ele==0x030F) return "Snout ID";
    if (grp==0x300A && ele==0x0312) return "Number of Range Shifters";
    if (grp==0x300A && ele==0x0314) return "Range Shifter Sequence";
    if (grp==0x300A && ele==0x0316) return "Range Shifter Number";
    if (grp==0x300A && ele==0x0318) return "Range Shifter ID";
    if (grp==0x300A && ele==0x0320) return "Range Shifter Type";
    if (grp==0x300A && ele==0x0322) return "Range Shifter Description";
    if (grp==0x300A && ele==0x0330) return "Number of Lateral Spreading Devices";
    if (grp==0x300A && ele==0x0332) return "Lateral Spreading Device Sequence";
    if (grp==0x300A && ele==0x0334) return "Lateral Spreading Device Number";
    if (grp==0x300A && ele==0x0336) return "Lateral Spreading Device ID";
    if (grp==0x300A && ele==0x0338) return "Lateral Spreading Device Type";
    if (grp==0x300A && ele==0x033A) return "Lateral Spreading Device Description";
    if (grp==0x300A && ele==0x033C) return "Lateral Spreading Device Water Equivalent Thickness";
    if (grp==0x300A && ele==0x0340) return "Number of Range Modulators";
    if (grp==0x300A && ele==0x0342) return "Range Modulator Sequence";
    if (grp==0x300A && ele==0x0344) return "Range Modulator Number";
    if (grp==0x300A && ele==0x0346) return "Range Modulator ID";
    if (grp==0x300A && ele==0x0348) return "Range Modulator Type";
    if (grp==0x300A && ele==0x034A) return "Range Modulator Description";
    if (grp==0x300A && ele==0x034C) return "Beam Current Modulation ID";
    if (grp==0x300A && ele==0x0350) return "Patient Support Type";
    if (grp==0x300A && ele==0x0352) return "Patient Support ID";
    if (grp==0x300A && ele==0x0354) return "Patient Support Accessory Code";
    if (grp==0x300A && ele==0x0355) return "Tray Accessory Code";
    if (grp==0x300A && ele==0x0356) return "Fixation Light Azimuthal Angle";
    if (grp==0x300A && ele==0x0358) return "Fixation Light Polar Angle";
    if (grp==0x300A && ele==0x035A) return "Meterset Rate";
    if (grp==0x300A && ele==0x0360) return "Range Shifter Settings Sequence";
    if (grp==0x300A && ele==0x0362) return "Range Shifter Setting";
    if (grp==0x300A && ele==0x0364) return "Isocenter to Range Shifter Distance";
    if (grp==0x300A && ele==0x0366) return "Range Shifter Water Equivalent Thickness";
    if (grp==0x300A && ele==0x0370) return "Lateral Spreading Device Settings Sequence";
    if (grp==0x300A && ele==0x0372) return "Lateral Spreading Device Setting";
    if (grp==0x300A && ele==0x0374) return "Isocenter to Lateral Spreading Device Distance";
    if (grp==0x300A && ele==0x0380) return "Range Modulator Settings Sequence";
    if (grp==0x300A && ele==0x0382) return "Range Modulator Gating Start Value";
    if (grp==0x300A && ele==0x0384) return "Range Modulator Gating Stop Value";
    if (grp==0x300A && ele==0x0386) return "Range Modulator Gating Start Water Equivalent Thickness";
    if (grp==0x300A && ele==0x0388) return "Range Modulator Gating Stop Water Equivalent Thickness";
    if (grp==0x300A && ele==0x038A) return "Isocenter to Range Modulator Distance";
    if (grp==0x300A && ele==0x0390) return "Scan Spot Tune ID";
    if (grp==0x300A && ele==0x0391) return "Scan Spot Prescribed Indices";
    if (grp==0x300A && ele==0x0392) return "Number of Scan Spot Positions";
    if (grp==0x300A && ele==0x0393) return "Scan Spot Reordered";
    if (grp==0x300A && ele==0x0394) return "Scan Spot Position Map";
    if (grp==0x300A && ele==0x0395) return "Scan Spot Reordering Allowed";
    if (grp==0x300A && ele==0x0396) return "Scan Spot Meterset Weights";
    if (grp==0x300A && ele==0x0398) return "Scanning Spot Size";
    if (grp==0x300A && ele==0x039A) return "Number of Paintings";
    if (grp==0x300A && ele==0x03A0) return "Ion Tolerance Table Sequence";
    if (grp==0x300A && ele==0x03A2) return "Ion Beam Sequence";
    if (grp==0x300A && ele==0x03A4) return "Ion Beam Limiting Device Sequence";
    if (grp==0x300A && ele==0x03A6) return "Ion Block Sequence";
    if (grp==0x300A && ele==0x03A8) return "Ion Control Point Sequence";
    if (grp==0x300A && ele==0x03AA) return "Ion Wedge Sequence";
    if (grp==0x300A && ele==0x03AC) return "Ion Wedge Position Sequence";
    if (grp==0x300A && ele==0x0401) return "Referenced Setup Image Sequence";
    if (grp==0x300A && ele==0x0402) return "Setup Image Comment";
    if (grp==0x300A && ele==0x0410) return "Motion Synchronization Sequence";
    if (grp==0x300A && ele==0x0412) return "Control Point Orientation";
    if (grp==0x300A && ele==0x0420) return "General Accessory Sequence";
    if (grp==0x300A && ele==0x0421) return "General Accessory ID";
    if (grp==0x300A && ele==0x0422) return "General Accessory Description";
    if (grp==0x300A && ele==0x0423) return "General Accessory Type";
    if (grp==0x300A && ele==0x0424) return "General Accessory Number";
    if (grp==0x300A && ele==0x0425) return "Source to General Accessory Distance";
    if (grp==0x300A && ele==0x0431) return "Applicator Geometry Sequence";
    if (grp==0x300A && ele==0x0432) return "Applicator Aperture Shape";
    if (grp==0x300A && ele==0x0433) return "Applicator Opening";
    if (grp==0x300A && ele==0x0434) return "Applicator Opening X";
    if (grp==0x300A && ele==0x0435) return "Applicator Opening Y";
    if (grp==0x300A && ele==0x0436) return "Source to Applicator Mounting Position Distance";
    if (grp==0x300A && ele==0x0440) return "Number of Block Slab Items";
    if (grp==0x300A && ele==0x0441) return "Block Slab Sequence";
    if (grp==0x300A && ele==0x0442) return "Block Slab Thickness";
    if (grp==0x300A && ele==0x0443) return "Block Slab Number";
    if (grp==0x300A && ele==0x0450) return "Device Motion Control Sequence";
    if (grp==0x300A && ele==0x0451) return "Device Motion Execution Mode";
    if (grp==0x300A && ele==0x0452) return "Device Motion Observation Mode";
    if (grp==0x300A && ele==0x0453) return "Device Motion Parameter Code Sequence";
    if (grp==0x300A && ele==0x0501) return "Distal Depth Fraction";
    if (grp==0x300A && ele==0x0502) return "Distal Depth";
    if (grp==0x300A && ele==0x0503) return "Nominal Range Modulation Fractions";
    if (grp==0x300A && ele==0x0504) return "Nominal Range Modulated Region Depths";
    if (grp==0x300A && ele==0x0505) return "Depth Dose Parameters Sequence";
    if (grp==0x300A && ele==0x0506) return "Delivered Depth Dose Parameters Sequence";
    if (grp==0x300A && ele==0x0507) return "Delivered Distal Depth Fraction";
    if (grp==0x300A && ele==0x0508) return "Delivered Distal Depth";
    if (grp==0x300A && ele==0x0509) return "Delivered Nominal Range Modulation Fractions";
    if (grp==0x300A && ele==0x0510) return "Delivered Nominal Range Modulated Region Depths";
    if (grp==0x300A && ele==0x0511) return "Delivered Reference Dose Definition";
    if (grp==0x300A && ele==0x0512) return "Reference Dose Definition";
    if (grp==0x300C && ele==0x0002) return "Referenced RT Plan Sequence";
    if (grp==0x300C && ele==0x0004) return "Referenced Beam Sequence";
    if (grp==0x300C && ele==0x0006) return "Referenced Beam Number";
    if (grp==0x300C && ele==0x0007) return "Referenced Reference Image Number";
    if (grp==0x300C && ele==0x0008) return "Start Cumulative Meterset Weight";
    if (grp==0x300C && ele==0x0009) return "End Cumulative Meterset Weight";
    if (grp==0x300C && ele==0x000A) return "Referenced Brachy Application Setup Sequence";
    if (grp==0x300C && ele==0x000C) return "Referenced Brachy Application Setup Number";
    if (grp==0x300C && ele==0x000E) return "Referenced Source Number";
    if (grp==0x300C && ele==0x0020) return "Referenced Fraction Group Sequence";
    if (grp==0x300C && ele==0x0022) return "Referenced Fraction Group Number";
    if (grp==0x300C && ele==0x0040) return "Referenced Verification Image Sequence";
    if (grp==0x300C && ele==0x0042) return "Referenced Reference Image Sequence";
    if (grp==0x300C && ele==0x0050) return "Referenced Dose Reference Sequence";
    if (grp==0x300C && ele==0x0051) return "Referenced Dose Reference Number";
    if (grp==0x300C && ele==0x0055) return "Brachy Referenced Dose Reference Sequence";
    if (grp==0x300C && ele==0x0060) return "Referenced Structure Set Sequence";
    if (grp==0x300C && ele==0x006A) return "Referenced Patient Setup Number";
    if (grp==0x300C && ele==0x0080) return "Referenced Dose Sequence";
    if (grp==0x300C && ele==0x00A0) return "Referenced Tolerance Table Number";
    if (grp==0x300C && ele==0x00B0) return "Referenced Bolus Sequence";
    if (grp==0x300C && ele==0x00C0) return "Referenced Wedge Number";
    if (grp==0x300C && ele==0x00D0) return "Referenced Compensator Number";
    if (grp==0x300C && ele==0x00E0) return "Referenced Block Number";
    if (grp==0x300C && ele==0x00F0) return "Referenced Control Point Index";
    if (grp==0x300C && ele==0x00F2) return "Referenced Control Point Sequence";
    if (grp==0x300C && ele==0x00F4) return "Referenced Start Control Point Index";
    if (grp==0x300C && ele==0x00F6) return "Referenced Stop Control Point Index";
    if (grp==0x300C && ele==0x0100) return "Referenced Range Shifter Number";
    if (grp==0x300C && ele==0x0102) return "Referenced Lateral Spreading Device Number";
    if (grp==0x300C && ele==0x0104) return "Referenced Range Modulator Number";
    if (grp==0x300C && ele==0x0111) return "Omitted Beam Task Sequence";
    if (grp==0x300C && ele==0x0112) return "Reason for Omission";
    if (grp==0x300C && ele==0x0113) return "Reason for Omission Description";
    if (grp==0x300E && ele==0x0002) return "Approval Status";
    if (grp==0x300E && ele==0x0004) return "Review Date";
    if (grp==0x300E && ele==0x0005) return "Review Time";
    if (grp==0x300E && ele==0x0008) return "Reviewer Name";
    if (grp==0x4000 && ele==0x0010) return "Arbitrary	Retired";
    if (grp==0x4000 && ele==0x4000) return "Text Comments	Retired";
    if (grp==0x4008 && ele==0x0040) return "Results ID	Retired";
    if (grp==0x4008 && ele==0x0042) return "Results ID Issuer	Retired";
    if (grp==0x4008 && ele==0x0050) return "Referenced Interpretation Sequence	Retired";
    if (grp==0x4008 && ele==0x00FF) return "Report Production Status (Trial)	Retired";
    if (grp==0x4008 && ele==0x0100) return "Interpretation Recorded Date	Retired";
    if (grp==0x4008 && ele==0x0101) return "Interpretation Recorded Time	Retired";
    if (grp==0x4008 && ele==0x0102) return "Interpretation Recorder	Retired";
    if (grp==0x4008 && ele==0x0103) return "Reference to Recorded Sound	Retired";
    if (grp==0x4008 && ele==0x0108) return "Interpretation Transcription Date	Retired";
    if (grp==0x4008 && ele==0x0109) return "Interpretation Transcription Time	Retired";
    if (grp==0x4008 && ele==0x010A) return "Interpretation Transcriber	Retired";
    if (grp==0x4008 && ele==0x010B) return "Interpretation Text	Retired";
    if (grp==0x4008 && ele==0x010C) return "Interpretation Author	Retired";
    if (grp==0x4008 && ele==0x0111) return "Interpretation Approver Sequence	Retired";
    if (grp==0x4008 && ele==0x0112) return "Interpretation Approval Date	Retired";
    if (grp==0x4008 && ele==0x0113) return "Interpretation Approval Time	Retired";
    if (grp==0x4008 && ele==0x0114) return "Physician Approving Interpretation	Retired";
    if (grp==0x4008 && ele==0x0115) return "Interpretation Diagnosis Description	Retired";
    if (grp==0x4008 && ele==0x0117) return "Interpretation Diagnosis Code Sequence	Retired";
    if (grp==0x4008 && ele==0x0118) return "Results Distribution List Sequence	Retired";
    if (grp==0x4008 && ele==0x0119) return "Distribution Name	Retired";
    if (grp==0x4008 && ele==0x011A) return "Distribution Address	Retired";
    if (grp==0x4008 && ele==0x0200) return "Interpretation ID	Retired";
    if (grp==0x4008 && ele==0x0202) return "Interpretation ID Issuer	Retired";
    if (grp==0x4008 && ele==0x0210) return "Interpretation Type ID	Retired";
    if (grp==0x4008 && ele==0x0212) return "Interpretation Status ID	Retired";
    if (grp==0x4008 && ele==0x0300) return "Impressions	Retired";
    if (grp==0x4008 && ele==0x4000) return "Results Comments	Retired";
    if (grp==0x4010 && ele==0x0001) return "Low Energy Detectors";
    if (grp==0x4010 && ele==0x0002) return "High Energy Detectors";
    if (grp==0x4010 && ele==0x0004) return "Detector Geometry Sequence";
    if (grp==0x4010 && ele==0x1001) return "Threat ROI Voxel Sequence";
    if (grp==0x4010 && ele==0x1004) return "Threat ROI Base";
    if (grp==0x4010 && ele==0x1005) return "Threat ROI Extents";
    if (grp==0x4010 && ele==0x1006) return "Threat ROI Bitmap";
    if (grp==0x4010 && ele==0x1007) return "Route Segment ID";
    if (grp==0x4010 && ele==0x1008) return "Gantry Type";
    if (grp==0x4010 && ele==0x1009) return "OOI Owner Type";
    if (grp==0x4010 && ele==0x100A) return "Route Segment Sequence";
    if (grp==0x4010 && ele==0x1010) return "Potential Threat Object ID";
    if (grp==0x4010 && ele==0x1011) return "Threat Sequence";
    if (grp==0x4010 && ele==0x1012) return "Threat Category";
    if (grp==0x4010 && ele==0x1013) return "Threat Category Description";
    if (grp==0x4010 && ele==0x1014) return "ATD Ability Assessment";
    if (grp==0x4010 && ele==0x1015) return "ATD Assessment Flag";
    if (grp==0x4010 && ele==0x1016) return "ATD Assessment Probability";
    if (grp==0x4010 && ele==0x1017) return "Mass";
    if (grp==0x4010 && ele==0x1018) return "Density";
    if (grp==0x4010 && ele==0x1019) return "Z Effective";
    if (grp==0x4010 && ele==0x101A) return "Boarding Pass ID";
    if (grp==0x4010 && ele==0x101B) return "Center of Mass";
    if (grp==0x4010 && ele==0x101C) return "Center of PTO";
    if (grp==0x4010 && ele==0x101D) return "Bounding Polygon";
    if (grp==0x4010 && ele==0x101E) return "Route Segment Start Location ID";
    if (grp==0x4010 && ele==0x101F) return "Route Segment End Location ID";
    if (grp==0x4010 && ele==0x1020) return "Route Segment Location ID Type";
    if (grp==0x4010 && ele==0x1021) return "Abort Reason";
    if (grp==0x4010 && ele==0x1023) return "Volume of PTO";
    if (grp==0x4010 && ele==0x1024) return "Abort Flag";
    if (grp==0x4010 && ele==0x1025) return "Route Segment Start Time";
    if (grp==0x4010 && ele==0x1026) return "Route Segment End Time";
    if (grp==0x4010 && ele==0x1027) return "TDR Type";
    if (grp==0x4010 && ele==0x1028) return "International Route Segment";
    if (grp==0x4010 && ele==0x1029) return "Threat Detection Algorithm and Version";
    if (grp==0x4010 && ele==0x102A) return "Assigned Location";
    if (grp==0x4010 && ele==0x102B) return "Alarm Decision Time";
    if (grp==0x4010 && ele==0x1031) return "Alarm Decision";
    if (grp==0x4010 && ele==0x1033) return "Number of Total Objects";
    if (grp==0x4010 && ele==0x1034) return "Number of Alarm Objects";
    if (grp==0x4010 && ele==0x1037) return "PTO Representation Sequence";
    if (grp==0x4010 && ele==0x1038) return "ATD Assessment Sequence";
    if (grp==0x4010 && ele==0x1039) return "TIP Type";
    if (grp==0x4010 && ele==0x103A) return "Version";
    if (grp==0x4010 && ele==0x1041) return "OOI Owner Creation Time";
    if (grp==0x4010 && ele==0x1042) return "OOI Type";
    if (grp==0x4010 && ele==0x1043) return "OOI Size";
    if (grp==0x4010 && ele==0x1044) return "Acquisition Status";
    if (grp==0x4010 && ele==0x1045) return "Basis Materials Code Sequence";
    if (grp==0x4010 && ele==0x1046) return "Phantom Type";
    if (grp==0x4010 && ele==0x1047) return "OOI Owner Sequence";
    if (grp==0x4010 && ele==0x1048) return "Scan Type";
    if (grp==0x4010 && ele==0x1051) return "Itinerary ID";
    if (grp==0x4010 && ele==0x1052) return "Itinerary ID Type";
    if (grp==0x4010 && ele==0x1053) return "Itinerary ID Assigning Authority";
    if (grp==0x4010 && ele==0x1054) return "Route ID";
    if (grp==0x4010 && ele==0x1055) return "Route ID Assigning Authority";
    if (grp==0x4010 && ele==0x1056) return "Inbound Arrival Type";
    if (grp==0x4010 && ele==0x1058) return "Carrier ID";
    if (grp==0x4010 && ele==0x1059) return "Carrier ID Assigning Authority";
    if (grp==0x4010 && ele==0x1060) return "Source Orientation";
    if (grp==0x4010 && ele==0x1061) return "Source Position";
    if (grp==0x4010 && ele==0x1062) return "Belt Height";
    if (grp==0x4010 && ele==0x1064) return "Algorithm Routing Code Sequence";
    if (grp==0x4010 && ele==0x1067) return "Transport Classification";
    if (grp==0x4010 && ele==0x1068) return "OOI Type Descriptor";
    if (grp==0x4010 && ele==0x1069) return "Total Processing Time";
    if (grp==0x4010 && ele==0x106C) return "Detector Calibration Data";
    if (grp==0x4010 && ele==0x106D) return "Additional Screening Performed";
    if (grp==0x4010 && ele==0x106E) return "Additional Inspection Selection Criteria";
    if (grp==0x4010 && ele==0x106F) return "Additional Inspection Method Sequence";
    if (grp==0x4010 && ele==0x1070) return "AIT Device Type";
    if (grp==0x4010 && ele==0x1071) return "QR Measurements Sequence";
    if (grp==0x4010 && ele==0x1072) return "Target Material Sequence";
    if (grp==0x4010 && ele==0x1073) return "SNR Threshold";
    if (grp==0x4010 && ele==0x1075) return "Image Scale Representation";
    if (grp==0x4010 && ele==0x1076) return "Referenced PTO Sequence";
    if (grp==0x4010 && ele==0x1077) return "Referenced TDR Instance Sequence";
    if (grp==0x4010 && ele==0x1078) return "PTO Location Description";
    if (grp==0x4010 && ele==0x1079) return "Anomaly Locator Indicator Sequence";
    if (grp==0x4010 && ele==0x107A) return "Anomaly Locator Indicator";
    if (grp==0x4010 && ele==0x107B) return "PTO Region Sequence";
    if (grp==0x4010 && ele==0x107C) return "Inspection Selection Criteria";
    if (grp==0x4010 && ele==0x107D) return "Secondary Inspection Method Sequence";
    if (grp==0x4010 && ele==0x107E) return "PRCS to RCS Orientation";
    if (grp==0x4FFE && ele==0x0001) return "MAC Parameters Sequence";
    if (grp==0x5200 && ele==0x9229) return "Shared Functional Groups Sequence";
    if (grp==0x5200 && ele==0x9230) return "Per-frame Functional Groups Sequence";
    if (grp==0x5400 && ele==0x0100) return "Waveform Sequence";
    if (grp==0x5400 && ele==0x0110) return "OB or OW	Channel Minimum Value";
    if (grp==0x5400 && ele==0x0112) return "OB or OW	Channel Maximum Value";
    if (grp==0x5400 && ele==0x1004) return "Waveform Bits Allocated";
    if (grp==0x5400 && ele==0x1006) return "Waveform Sample Interpretation";
    if (grp==0x5400 && ele==0x100A) return "OB or OW	Waveform Padding Value";
    if (grp==0x5400 && ele==0x1010) return "OB or OW	Waveform Data";
    if (grp==0x5600 && ele==0x0010) return "First Order Phase Correction Angle";
    if (grp==0x5600 && ele==0x0020) return "Spectroscopy Data";
    if (grp==0x7FE0 && ele==0x0008) return "Float Pixel Data";
    if (grp==0x7FE0 && ele==0x0009) return "Double Float Pixel Data";
    if (grp==0x7FE0 && ele==0x0010) return "OB or OW	Pixel Data";
    if (grp==0x7FE0 && ele==0x0020) return "Coefficients SDVN	Retired";
    if (grp==0x7FE0 && ele==0x0030) return "Coefficients SDHN	Retired";
    if (grp==0x7FE0 && ele==0x0040) return "Coefficients SDDN	Retired";
    if (grp==0xFFFA && ele==0xFFFA) return "Digital Signatures Sequence";
    if (grp==0xFFFC && ele==0xFFFC) return "Data Set Trailing Padding";
    if (grp==0xFFFE && ele==0xE000) return "	Item";
    if (grp==0xFFFE && ele==0xE00D) return "	Item Delimitation Item";
    if (grp==0xFFFE && ele==0xE0DD) return "	Sequence Delimitation Item";


    // Unknown values returned as the hex tag
    char rc[];
    SPrintf(rc, "%04x,%04x", grp, ele);
    return rc;
}
