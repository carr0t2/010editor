//------------------------------------------------
//--- 010 Editor v5.0 Binary Template
//
//      File: SGI.MSB.bt
//   Authors: 0xFAIL
//   Version: 0.5
//   Purpose: Parses the level data index format from levels.gfs, used in Z-Engine (SkullGirls).
//  Category: Game
// File Mask: *.sgi.msb
//  ID Bytes:
//   History: 
//   0.5   2014-03-30 0xFAIL: Initial release.
//
// Skullgirls level, index file.
// Array optimisation is broken? has to be disabled when using Pascal64String arrays.
// uchar4 is a vec4 part?
//------------------------------------------------
BigEndian();

typedef struct{
    uint64 count <hidden=true,fgcolor=cLtGray,bgcolor=cWhite>;
    char chars[count] <hidden=true, optimize=false>;
} Pascal64String <read=Pascal64String_Read>;

string Pascal64String_Read(Pascal64String &v){ return v.chars; }

struct FILE{
    Pascal64String file_format_revision <bgcolor=cBlue,fgcolor=cWhite>;
    uint64 nOfElements <fgcolor=cGreen>;
    struct ELEMENT{
        Pascal64String elementName <bgcolor=cGreen,hidden=true>;
        Pascal64String shapeName <fgcolor=cGreen>;
        float unknown[16];
        char unknown2[2];

        uint64 nOfAnimations <fgcolor=cGreen,hidden=true>;
        struct ANIMATION{
            Pascal64String animationName <bgcolor=cRed,hidden=true>;
            Pascal64String animationFileName <fgcolor=cRed>;
        } animation[nOfAnimations] <optimize=false,read=ANIMATION_read>;        
    } element[nOfElements] <optimize=false,read=ELEMENT_read>;
} file <read=FILE_read>;


//http://www.intrepid-web.net/010-editor/
char[] get_filename(char full_path[], char delimiter[])
{
    
    int     i;
    int     length, deli_len, del_index;
    char    file_name[];

    deli_len = Strlen(delimiter);

    length = Strlen(full_path);
    file_name = full_path;
    i=0;
    while(Strstr(file_name, delimiter) > -1)
    {
        del_index = Strstr(file_name, delimiter);
        file_name = SubStr(file_name, del_index+deli_len, -1);
    }
    
    return file_name;
}

string FILE_read(FILE &f){
    return get_filename(GetFileName(),"\\");
}

string ELEMENT_read(ELEMENT &e){
    return e.elementName.chars;
}

string ANIMATION_read(ANIMATION &a){
    return a.animationName.chars;
}

