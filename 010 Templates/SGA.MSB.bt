//------------------------------------------------
//--- 010 Editor v5.0 Binary Template
//
//      File: SGA.MSB.bt
//   Authors: 0xFAIL
//   Version: 0.3
//   Purpose: Parses the level data animation format from levels.gfs, used in Z-Engine (SkullGirls).
//  Category: Game
// File Mask: *.sga.msb
//  ID Bytes:
//   History: 
//   0.3   2014-03-30 0xFAIL: Initial release.
//
// Skullgirls level, animation file.
// Array optimisation is broken? has to be disabled when using Pascal64String arrays.
// uchar4 is a vec4 part?
//------------------------------------------------
BigEndian();

typedef struct{
    uint64 count <hidden=true,fgcolor=cLtGray,bgcolor=cWhite>;
    char chars[count] <hidden=true>;
} Pascal64String <read=Pascal64String_Read>;

string Pascal64String_Read(Pascal64String &v){ return v.chars; }


typedef struct{
    uint64 nOfAnimationFrames;
    struct UV_COORDS{
        float u;
        float v;
    } track[nOfAnimationFrames] <optimize=false>; 
    uint64 nOfUnknown1;
    struct UNKNOWN{
        char unknownData[4];
    } unknown[nOfUnknown1] <optimize=false>;
    uint64 nOfTime;
    struct TIME{
        float u;
        float v;
    } time[nOfTime] <optimize=false>;   
} UV_TRACK <read=UV_TRACK_Read>;

string UV_TRACK_Read(UV_TRACK &v){ return "UV TRACK"; }

struct FILE{
    Pascal64String file_format_revision <bgcolor=cBlue,fgcolor=cWhite>;
    uint32 unknownNumber;
    uint64 nOfElements;
    uint64 nOfUVTracks;    

    float animationLengthInSeconds;
    struct BONE{
            Pascal64String boneName;
            uint64 length; 
            struct UNKNOWN_DATA{
                float a;
                float b;
                float c;
            }unknown_data[length];

            uint64 length2;
            struct UNKNOWN_DATA2{
                float a1;
                float b1;
                float c1;
                float d1;
            }unknown_data2[length2] ; 

            uint64 length3;
            struct UNKNOWN_DATA3{
                float a2;
                float b2;
                float c2;
            }unknown_data3[length3];         
    }bone[nOfElements] <read=BONE_read, optimize=false>;
    
    struct UV_TRACKS{
        Pascal64String type;
        UV_TRACK track;
    }uv_tracks[nOfUVTracks] <optimize=false,read=UV_TRACKS_read>;
    
} file <read=FILE_read>;



string UV_TRACKS_read(UV_TRACKS &e){
    return "UV track";
}

string BONE_read(BONE &e){
    return e.boneName.chars;
}


string UV_Track_read(UV_TRACK &e){
    return "PLACEHOLDER2";
}

//http://www.intrepid-web.net/010-editor/
char[] get_filename(char full_path[], char delimiter[])
{
    
    int     i;
    int     length, deli_len, del_index;
    char    file_name[];

    deli_len = Strlen(delimiter);

    length = Strlen(full_path);
    file_name = full_path;
    i=0;
    while(Strstr(file_name, delimiter) > -1)
    {
        del_index = Strstr(file_name, delimiter);
        file_name = SubStr(file_name, del_index+deli_len, -1);
    }
    
    return file_name;
}

string FILE_read(FILE &f){
    return get_filename(GetFileName(),"\\");
}